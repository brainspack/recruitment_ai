[{"/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/index.js":"1","/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/App.js":"2","/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/store/index.js":"3","/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/history/index.js":"4","/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/routes/index.js":"5","/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/model/index.js":"6","/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/lib/utils/Service.js":"7","/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/web/pages/Admin/SchoolTerms.js":"8","/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/web/pages/Admin/Form/Forms.js":"9","/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/web/pages/Admin/Profile.js":"10","/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/web/pages/Admin/GroupDetails/GroupDetails.js":"11","/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/web/pages/Admin/Form/FormDetails.js":"12","/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/web/pages/Admin/Dashboard.js":"13","/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/web/pages/Authentication/ForgotPassword.js":"14","/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/web/pages/Authentication/Login.js":"15","/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/web/pages/Authentication/ResetPassword.js":"16","/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/lib/utils/Validators.js":"17","/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/web/components/Overlay/Overlay.js":"18","/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/web/components/Input/Input.js":"19","/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/web/components/NoRecord/NoRecord.js":"20","/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/web/components/TableOne/TableOne.js":"21","/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/web/components/Button/Button.js":"22","/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/web/components/CustomMobile/CustomMobile.js":"23","/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/web/components/Textarea/Textarea.js":"24","/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/web/components/CustomLoader/CustomLoader.js":"25","/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/web/components/CustomDatepicker/CustomDatepicker.js":"26","/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/web/components/ToastUI/ToastUI.js":"27","/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/web/components/SingleSelect/SingleSelect.js":"28","/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/web/components/Timepicker/Timepicker.js":"29","/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/web/components/ToggleSwitch/ToggleSwitch.js":"30","/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/web/components/Sidebar/Sidebar.js":"31","/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/web/components/TimeTableField/TimeTableField.js":"32","/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/web/components/TableTwo/TableTwo.js":"33","/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/web/components/MultiSelectDropDown/MultiSelectDropDown.js":"34","/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/api/AdminApi.js":"35","/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/lib/config/message.js":"36","/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/web/components/Accordian/Accordian.js":"37","/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/web/pages/Admin/AdminLayout/index.js":"38","/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/web/components/TableOneRow/TableOneRow.js":"39","/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/model/Classimize/index.js":"40","/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/model/Authentication/index.js":"41","/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/model/Admin/index.js":"42","/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/api/AuthApi.js":"43","/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/web/pages/Admin/Clients/ManageClients.js":"44","/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/web/pages/Admin/Clients/Clients.js":"45"},{"size":285,"mtime":1638980213680,"results":"46","hashOfConfig":"47"},{"size":505,"mtime":1644945705184,"results":"48","hashOfConfig":"47"},{"size":166,"mtime":1644945705977,"results":"49","hashOfConfig":"47"},{"size":113,"mtime":1638980213680,"results":"50","hashOfConfig":"47"},{"size":2031,"mtime":1645419959449,"results":"51","hashOfConfig":"47"},{"size":274,"mtime":1638980213683,"results":"52","hashOfConfig":"47"},{"size":925,"mtime":1638980213681,"results":"53","hashOfConfig":"47"},{"size":11330,"mtime":1645419599719,"results":"54","hashOfConfig":"47"},{"size":7639,"mtime":1645088793670,"results":"55","hashOfConfig":"47"},{"size":22979,"mtime":1645419599671,"results":"56","hashOfConfig":"47"},{"size":16664,"mtime":1644945707668,"results":"57","hashOfConfig":"47"},{"size":10579,"mtime":1644945707385,"results":"58","hashOfConfig":"47"},{"size":12292,"mtime":1645090424996,"results":"59","hashOfConfig":"47"},{"size":2722,"mtime":1645088794139,"results":"60","hashOfConfig":"47"},{"size":6053,"mtime":1645190472336,"results":"61","hashOfConfig":"47"},{"size":4350,"mtime":1645088794226,"results":"62","hashOfConfig":"47"},{"size":750,"mtime":1638980213682,"results":"63","hashOfConfig":"47"},{"size":1534,"mtime":1644945706232,"results":"64","hashOfConfig":"47"},{"size":1172,"mtime":1638980213686,"results":"65","hashOfConfig":"47"},{"size":340,"mtime":1638980213687,"results":"66","hashOfConfig":"47"},{"size":1318,"mtime":1645626704458,"results":"67","hashOfConfig":"47"},{"size":1064,"mtime":1638980213685,"results":"68","hashOfConfig":"47"},{"size":1434,"mtime":1638980213686,"results":"69","hashOfConfig":"47"},{"size":841,"mtime":1638980213690,"results":"70","hashOfConfig":"47"},{"size":393,"mtime":1644945706094,"results":"71","hashOfConfig":"47"},{"size":1187,"mtime":1638980213685,"results":"72","hashOfConfig":"47"},{"size":550,"mtime":1638980213691,"results":"73","hashOfConfig":"47"},{"size":2724,"mtime":1638980213688,"results":"74","hashOfConfig":"47"},{"size":618,"mtime":1638980213690,"results":"75","hashOfConfig":"47"},{"size":625,"mtime":1638980213691,"results":"76","hashOfConfig":"47"},{"size":7209,"mtime":1645190698375,"results":"77","hashOfConfig":"47"},{"size":3736,"mtime":1644141477893,"results":"78","hashOfConfig":"47"},{"size":5787,"mtime":1644945706505,"results":"79","hashOfConfig":"47"},{"size":787,"mtime":1641461780249,"results":"80","hashOfConfig":"47"},{"size":16525,"mtime":1645421001299,"results":"81","hashOfConfig":"47"},{"size":4075,"mtime":1645419389115,"results":"82","hashOfConfig":"47"},{"size":10730,"mtime":1638980213685,"results":"83","hashOfConfig":"47"},{"size":1843,"mtime":1644945707107,"results":"84","hashOfConfig":"47"},{"size":1827,"mtime":1638980213689,"results":"85","hashOfConfig":"47"},{"size":273,"mtime":1638980213683,"results":"86","hashOfConfig":"47"},{"size":3266,"mtime":1645126290695,"results":"87","hashOfConfig":"47"},{"size":31973,"mtime":1645630878352,"results":"88","hashOfConfig":"47"},{"size":2325,"mtime":1645125834608,"results":"89","hashOfConfig":"47"},{"size":12673,"mtime":1646135222958,"results":"90","hashOfConfig":"47"},{"size":6032,"mtime":1645641714384,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"1wdjfx7",{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"94"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"113"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"94"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"113"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"113"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"94"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"94"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"94"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"94"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"94"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"94"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"94"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"147"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"94"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"94"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"94"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"94"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"94"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"94"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"147"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"113"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"94"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"94"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"113"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"147"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"113"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"94"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"113"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"94"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"147"},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"94"},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"94"},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"94"},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"94"},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":97,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"94"},"/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/index.js",[],["220","221"],"/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/App.js",[],"/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/store/index.js",[],"/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/history/index.js",[],"/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/routes/index.js",[],"/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/model/index.js",[],"/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/lib/utils/Service.js",["222"],"import axios from 'axios';\nimport moment from 'moment';\n\nexport const apiDateFormat = date => {\n  return moment(date).format(\"DD/MM/YYYY\");\n};\n\nexport function isLoggedIn() {\n  return localStorage.getItem('isLoggedIn');\n}\nexport function handleInvalidToken() {\n  //clearToken();\n  clearUserData();\n  window.location.href = \"/login\";\n}\n\nexport function clearUserData() {\n  localStorage.removeItem('userData');\n  localStorage.removeItem('isLoggedIn');\n  localStorage.removeItem('loggedInUser');\n  localStorage.removeItem('api_token');\n  localStorage.removeItem('leftSection');\n  localStorage.removeItem('session');\n}\n\nexport function getUser() {\n  return localStorage.getItem('userData');\n}\n\nexport function setToken(access_token) {\n\n}\n\nexport function getToken() {\n  let token = localStorage.getItem('api_token')\n  if(token) {\n    return token;\n  }\n  return false;\n}\nexport function logoutCompletely() {\n  clearUserData()  \n}\n","/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/web/pages/Admin/SchoolTerms.js",["223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252"],"/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/web/pages/Admin/Form/Forms.js",["253","254","255","256","257","258","259","260","261","262","263","264","265"],"import React, { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { useStoreActions, useStoreState } from 'easy-peasy';\nimport Input from \"recruitment-components/Input/Input.js\";\nimport NoRecord from \"recruitment-components/NoRecord/NoRecord.js\";\nimport Overlay from \"recruitment-components/Overlay/Overlay.js\";\nimport CustomLoader from \"recruitment-components/CustomLoader/CustomLoader.js\";\nimport TableOne from \"recruitment-components/TableOne/TableOne.js\";\nimport SingleSelect from \"recruitment-components/SingleSelect/SingleSelect.js\";\nimport Logo from \"recruitment-images/h1.png\";\nimport LoginBg from \"recruitment-images/admin.svg\";\nimport { toast } from \"react-toastify\";\nimport ToastUI from \"recruitment-components/ToastUI/ToastUI.js\";\n\nconst Forms = (props) => {\n\n  const [showLoader, setShowLoader] = useState(false);\n  const [noRecord, showNoRecord] = useState(false);\n  const [showOverlay, setShowOverlay] = useState(false);\n  const [showCustomLoader, setShowCustomLoader] = useState(false);\n  const [formsName, setFormsName] = useState('');\n  const [formsData, setFormsData] = useState([]);\n  const [yearsData, setYearsData] = useState([]);\n  const [disableButton, setDisableButton] = useState(false);\n  const [editFormId, setEditFormId] = useState(0);\n  const [deleteFormId, setDeleteFormId] = useState(0);\n  const [selectedYear, setSelectedYear] = useState(0);\n  const [showDelete, setShowDelete] = useState(false);\n  const [mode, setMode] = useState('add');\n  const [nameError, setNameError] = useState(false);\n  const [formError,setFormError] = useState()\n\n  const forms = useStoreState((state) => state.admin.forms);\n  const allYears = useStoreState((state) => state.admin.allYears);\n  const previousSelectedYear = useStoreState((state)=>state.admin.previousSelectedYear)\n  const getAllYears = useStoreActions((actions) => actions.admin.getAllYears);\n  const setPreviousSelectedYear = useStoreActions((actions) => actions.admin.setPreviousSelectedYear);\n  const getForms = useStoreActions((actions) => actions.admin.getForms);\n  const createForm = useStoreActions((actions) => actions.admin.createForm);\n  const updateForm = useStoreActions((actions) => actions.admin.updateForm);\n  const deleteForm = useStoreActions((actions) => actions.admin.deleteForm);\n  useEffect(() => {\n    if(previousSelectedYear){\n      changeOption(previousSelectedYear);\n    }\n    //let formData = {params: {page: 1, page_size: 200}}\n    getAllYears();\n    setFormsData([])\n    //getForms(formData);\n  }, [])\n\n  useEffect(() => {\n    if (forms) {\n      if (forms.data.length) {\n        setFormsData(forms.data);\n        showNoRecord(false);\n      } else {\n        showNoRecord(true);\n      }\n      setShowCustomLoader(false);\n    } else {\n      showNoRecord(true);\n    }\n  }, [forms])\n\n  useEffect(() => {\n    if (allYears && allYears && allYears.length) {\n      setYearsData(allYears);\n      setShowCustomLoader(false);\n    }\n  }, [allYears])\n\n  const submitForm = async () => {\n\n    if(formsName.trim() == ''){\n      setNameError(true);\n      setFormError('Form name is required')\n      return false;\n    }\n    /*\n    if(!formsName.substring(0,4).match(/[A-Z,a-z]{4,}/g)){\n      setNameError(true);\n      setFormError('Enter minimum 4 characters')\n      return false\n    }\n    */    \n\n    if (formsName && formsName.trim() != '') {\n      let formData = { name: formsName, year_id: selectedYear }\n      setDisableButton(true)\n      if (mode == 'edit') {\n        formData.id = editFormId\n        await updateForm(formData);\n      } else {\n        await createForm(formData);\n      }\n      setDisableButton(false);\n      setFormsName('');\n      setShowOverlay(false);\n    }\n  }\n  const editHandler = (id) => {\n    let form = formsData.find(e => e.id == id);\n    setEditFormId(id)\n    setMode('edit');\n    setShowOverlay(true);\n    setFormsName(form.name);\n  }\n\n  const deleteHandler = (id) => {\n    setDeleteFormId(id);\n    setShowDelete(true);\n  }\n\n  const deleteFormCall = async () => {\n    let formData = { id: deleteFormId, year_id: selectedYear }\n    setDisableButton(true)\n\n    await deleteForm(formData);\n    setDisableButton(false)\n    setShowDelete(false)\n\n  }\n  const openForm = () => {\n    if(selectedYear === 0) {\n      toast.error(<ToastUI message={\"Please select year first\"} type={\"Error\"} />, {\n        toastId: 'toast-show'\n      });\n      return false\n    }\n    setMode('add');\n    setEditFormId(0)\n    setFormsName('');\n    setShowOverlay(true);\n  }\n\n  const changeOption = (id) => {\n    if (id != selectedYear) {\n      setSelectedYear(id);\n      setPreviousSelectedYear(id);\n      setFormsData([])\n      setShowCustomLoader(true);\n      showNoRecord(false);\n      let formData = { params: { page: 1, page_size: 200, year_id: id } }\n      getForms(formData);\n    }\n  }\n\n  const closePopup = () => {\n    setShowOverlay(false);\n    setNameError(false);\n  }\n\n  return (\n    <React.Fragment>\n      <div>\n        <h1 className=\"pageTitle\"><span className=\"pr-4\">Forms</span>\n          <button className=\"topButton float-right\" onClick={() => { openForm() }}><i className=\"fa fa-plus-circle\" /> Create Form\n            </button></h1>\n        <p className=\"titleInfo\">Here you can import a CSV file to categorise your students into years.</p>\n        <div className=\"topFilters mb-5\">\n          <SingleSelect\n            placeholder={'Years'}\n            extraClasses={'selectYear smallInput120'}\n            options={yearsData}\n            value={selectedYear}\n            changeOption={(id) => changeOption(id)}\n          />\n          <div className=\"formField importCSV\">\n            {/*<a type=\"text\" className=\"fieldInput\"><img src=\"images/import.png\" /> Import CSV File</a>*/}\n          </div>\n        </div>\n        \n        {showCustomLoader &&\n          <CustomLoader />\n        }\n        {!noRecord ?\n        <>\n          <TableOne\n            rows={formsData}\n            columns={['name', 'students_count']}\n            actions={['edit', 'delete']}\n            editAction={(id) => editHandler(id)}\n            deleteAction={(id) => deleteHandler(id)}\n            showActions={true}\n            redirectTo=\"/form-details\"\n          />\n        </>\n        :\n        <>\n          <NoRecord message=\"No Forms\"  subMessage=\"Create a form to begin\" />\n        </>  \n        }\n      </div>\n      {showOverlay &&\n        <Overlay\n          title={(mode == 'add') ? 'Create Form' : \"Edit Form\"}\n          subTitle={(mode == 'add') ? 'Name the forms that you would like to add.' : \"Name of form\"}\n          closeOverlay={() => closePopup()}\n          cancelOverlay={() => closePopup()}\n          submitOverlay={() => submitForm()}\n          disableBtn={disableButton}\n        >\n          <div className=\"formWrapper\">\n            <Input\n              label={\"\"}\n              type={'text'}\n              value={formsName}\n              handleInputChange={(e) => {setFormsName(e.target.value)}}\n              handleInputKeyPress={(event)=>event.key === 'Enter'?submitForm():''}\n              error={nameError}\n              placeholder={\"e.g. Forms 8\"}\n              errorMessage={formError}\n            />\n          </div>\n        </Overlay>\n      }\n      {showDelete &&\n        <Overlay\n          title={\"Are you sure?\"}\n          subTitle={\"Are you sure you want to delete this form?\"}\n          closeOverlay={() => setShowDelete(false)}\n          cancelOverlay={() => setShowDelete(false)}\n          submitOverlay={() => deleteFormCall()}\n          disableBtn={disableButton}\n          isDelete={true}\n        >\n\n        </Overlay>\n      }\n    </React.Fragment>\n  );\n};\n\nexport default Forms;\n",["266","267"],"/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/web/pages/Admin/Profile.js",["268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","294","295"],"import React, { useState, useEffect } from 'react';\nimport { Link , useHistory } from \"react-router-dom\";\nimport { isPhoneNumberValid } from 'recruitment-utils/Validators.js';\nimport Sidebar from \"recruitment-components/Sidebar/Sidebar.js\";\nimport { useStoreState, useStoreActions } from 'easy-peasy';\nimport Input from \"recruitment-components/Input/Input.js\";\nimport CustomDatepicker from \"recruitment-components/CustomDatepicker/CustomDatepicker.js\";\nimport CustomMobile from \"recruitment-components/CustomMobile/CustomMobile.js\";\nimport Textarea from \"recruitment-components/Textarea/Textarea.js\";\nimport Button from \"recruitment-components/Button/Button.js\";\nimport ToggleSwitch from \"recruitment-components/ToggleSwitch/ToggleSwitch.js\";\nimport CustomLoader from \"recruitment-components/CustomLoader/CustomLoader.js\";\nimport validator from \"validator\";\nimport { apiDateFormat, logoutCompletely } from 'recruitment-utils/Service.js';\nimport { ERROR_INVALID_EMAIL, FIRSTNAME_ERROR_MESSAGE, LASTNAME_ERROR_MESSAGE, ERROR_ADDRESS, ERROR_INVALID_DOB, ERROR_INVALID_PHONE, ERROR_INVALID_CURRENT_PASSWORD, ERROR_INVALID_NEW_PASSWORD, ERROR_INVALID_CONFIRM_NEW_PASSWORD, ERROR_PASSWORD_MISMATCH } from 'recruitment-message';\nimport Overlay from \"recruitment-components/Overlay/Overlay.js\";\nimport moment from 'moment';\nimport EditPasswordImg from \"recruitment-images/atoms-icons-system-pen-solid.svg\"\n\nconst Profile = (props) => {\n  const history = useHistory();\n  const [forename, setForename] = useState('');\n  const [surname, setSurname] = useState('');\n  const [email, setEmail] = useState('');\n  const [dob, setDob] = useState('');\n  const [phone, setPhone] = useState('');\n  const [address, setAddress] = useState('');\n  // const {localStorageData} = useLocalStorage();\n  const [showLoader, setShowLoader] = useState(false);\n\n  const [emailError, setEmailError] = useState(false);\n  const [forenameError, setForenameError] = useState(false);\n  const [surnameError, setSurnameError] = useState(false);\n  const [addressError, setAddressError] = useState(false);\n  const [dobError, setDobError] = useState(false);\n  const [phoneError, setPhoneError] = useState(false);\n  const [disableButton, setDisableButton] = useState(false);\n  const [showChangeProfile, setShowProfile] = useState(false);\n  const [avtarGenderMale, setAvtarGenderMale] = useState(true);\n  const [selectedAvtar, setSelectedAvtar] = useState(\"\");\n  const [mf_status, setmf_status] = useState(0)\n  const [mf_type, setmf_type] = useState(\"\")\n  //const setShowProgressBar = useStoreActions((actions) => actions.classimize.setShowProgressBar);\n  const userProfile = useStoreState((state) => state.admin.userProfile);\n  const allAvtars = useStoreState((state) => state.admin.allAvtars);\n  const updateProfile = useStoreActions((actions) => actions.admin.updateProfile);\n  const getUserProfile = useStoreActions((actions) => actions.admin.getUserProfile);\n  const getAllAvtars = useStoreActions((actions) => actions.admin.getAllAvtars);\n  const assignAvtarToAdmin = useStoreActions((actions) => actions.admin.assignAvtarToAdmin);\n  const changePassword = useStoreActions((actions) => actions.admin.changePassword);\n  const [displayAvtar, setDisplayAvtar] = useState([]);\n  const [pager, setPager] = useState({});\n  const [disableSaveButton, setDisableSaveButton] = useState(false);\n  const [showChangePassword, setShowChangePassword] = useState(false)\n  const [currentPassword, setCurrentPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [passwordMisMatchError, setPasswordMisMatchError] = useState(false);\n  const [changeSignIn, setChangeSignIn] = useState(false);\n  const [currentPasswordError, setCurrentPasswordError] = useState(false);\n  const [newPasswordError, setNewPasswordError] = useState(false);\n  const [confirmPasswordError, setConfirmPasswordError] = useState(false);\n  const [disabledButton, setDisaledButton] = useState(false);\n  const [profileImg, setProfileImg] = useState(JSON.parse(localStorage.getItem('loggedInUser')).image_url);\n  useEffect(async () => {\n    setShowLoader(true);\n    await getUserProfile();\n    setShowLoader(false);\n  }, [avtarGenderMale])\n  useEffect(() => {\n\n  }, [localStorage])\n  useEffect(() => {\n    if (userProfile) {\n      setForename(userProfile.first_name)\n      setSurname(userProfile.last_name)\n      setEmail(userProfile.email);\n\n      if (userProfile.dob) {\n        var date = moment(userProfile.dob, 'DD/MM/YYYY').format('MM/DD/YYYY');\n        setDob(new Date(date));\n      } else {\n        setDob(new Date());\n      }\n\n      setPhone(userProfile.phone_number)\n      setAddress(userProfile.address)\n      setProfileImg(userProfile.image_url)\n      setmf_status(userProfile.mf_status)\n      setmf_type(userProfile.mf_type)\n    }\n  }, [userProfile])\n\n  useEffect(() => {\n    setPage(1);\n  }, [allAvtars, avtarGenderMale]);\n\n  const setPage = (page) => {\n    if (!allAvtars) {\n      return;\n    }\n    let items;\n    if (avtarGenderMale) {\n      items = allAvtars.male\n    }\n    else {\n      items = allAvtars.female\n    }\n    let tempPager = pager;\n    if (page < 1 || page > tempPager.totalPages) {\n      return;\n    }\n    // get new pager object for specified page\n    tempPager = getPager(items.length, page);\n    // get new page of items from items array\n    const pageOfItems = items.slice(\n      tempPager.startIndex,\n      tempPager.endIndex + 1\n    );\n    // update state\n    setPager(tempPager);\n    // call change page function in parent component\n    setDisplayAvtar(pageOfItems);\n  };\n  const getPager = (totalItems, currentPage) => {\n\n    currentPage = currentPage || 1; // default to first page\n\n    const pageSize = 12; // default page size is 12\n\n    // calculate total pages\n    const totalPages = Math.ceil(totalItems / pageSize);\n    let startPage, endPage;\n\n    if (totalPages <= 5) {\n      // less than 5 total pages so show all\n      startPage = 1;\n      endPage = totalPages;\n    } else {\n      // more than 5 total pages so calculate start and end pages\n      if (currentPage <= 2) {\n        startPage = 1;\n        endPage = 3;\n      } else if (currentPage > totalPages - 2) {\n        startPage = totalPages - 2;\n        endPage = totalPages;\n      } else {\n        startPage = currentPage - 1;\n        endPage = currentPage + 1;\n      }\n    }\n\n    // calculate start and end item indexes\n    const startIndex = (currentPage - 1) * pageSize;\n    const endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\n    // create an array of pages to ng-repeat in the pager control\n    const pages = [...Array(endPage + 1 - startPage).keys()].map(\n      (i) => startPage + i\n    );\n    // return object with all pager properties required by the view\n    return {\n      totalItems: totalItems,\n      currentPage: currentPage,\n      pageSize: pageSize,\n      totalPages: totalPages,\n      startPage: startPage,\n      endPage: endPage,\n      startIndex: startIndex,\n      endIndex: endIndex,\n      pages: pages,\n    };\n  };\n\n  const onClickSetPassword = async() => {\n    setCurrentPasswordError(false);\n    setNewPasswordError(false);\n    setConfirmPasswordError(false);\n    setPasswordMisMatchError(false);\n\n    if(currentPassword.trim() == '') {\n      setCurrentPasswordError(true);\n      return false;\n    }\n    if(newPassword.trim() == '') {\n      setNewPasswordError(true);\n      return false;\n    }\n    if(confirmPassword.trim() == '') {\n      setConfirmPasswordError(true);\n      return false;\n    }\n    if(confirmPassword.trim() != newPassword.trim()) {\n      setPasswordMisMatchError(true);\n      return false;\n    }\n    \n    setDisableSaveButton(true);\n    let formData = { force_logout: changeSignIn, old_password: currentPassword, password: newPassword, password_confirmation: confirmPassword }\n    let response = await changePassword(formData);\n    setDisableSaveButton(false);\n    setShowChangePassword(false)\n    \n    if (response) {\n      setCurrentPassword('');\n      setNewPassword('');\n      setConfirmPassword('');\n\n      if(changeSignIn === true) {\n        setTimeout(() => {\n          logoutCompletely();\n          history.push('/login');\n        }, 3000);\n      }\n    }\n  }\n\n  const handleChangeSignIn = (e) => {\n    const { checked } = e.target\n    setChangeSignIn(checked)\n  }\n\n  const handlePhoneChange = (event) => {\n    var phoneRegExp = /^-?\\d+$/;\n    const value = event.target.value\n    if (value.match(phoneRegExp) || value === \"\") {\n      setPhoneError(false)\n      setPhone(value);\n    }\n    else {\n      setPhone(value);\n      setPhoneError(true)\n    }\n  }\n\n  const saveProfile = async () => {\n    setEmailError(false);\n    setForenameError(false);\n    setSurnameError(false);\n    setAddressError(false);\n    setDobError(false);\n    setPhoneError(false);\n    if (!forename || forename.trim() == '') {\n      setForenameError(true);\n      return false;\n    }\n\n    if (!surname || surname.trim() == '') {\n      setSurnameError(true);\n      return false;\n    }\n\n    if (!email || email.trim() == '' || !validator.isEmail(email)) {\n      setEmailError(true);\n      return false;\n    }\n    if (phone.trim() != '' && phoneError) {\n      setPhoneError(true);\n      return false;\n    }\n\n    if (dob == '' || dobError) {\n      setDobError(true);\n      return false;\n    }\n\n    if (!address || address.trim() == '') {\n      setAddressError(true);\n      return false;\n    }\n\n    if (forename && forename.trim() != '') {\n      let formData = {\n        \"first_name\": forename,\n        \"last_name\": surname,\n        \"email\": email,\n        \"dob\": apiDateFormat(dob),\n        \"phone_number\": phone,\n        \"address\": address,\n        \"city\": \"\",\n        \"state\": \"\",\n        \"zip\": \"\",\n        \"mf_status\": mf_status,\n        \"mf_type\": mf_type\n      }\n      setDisableButton(true)\n\n      //  alert(editStudentId);\n      let response = await updateProfile(formData);\n      setDisableButton(false);\n      if (response) {\n        // history.push('/students');\n      }\n    }\n  }\n  const onClickEditProfile = async (event) => {\n    setShowLoader(true);\n    let formData = { params: { type: \"admin\" } }\n    await getAllAvtars(formData)\n    setShowProfile(true)\n    setShowLoader(false);\n  }\n  const onClickSetAvtar = async () => {\n    setDisaledButton(true)\n    let response = await assignAvtarToAdmin({ id: selectedAvtar });\n    if (response) {\n      setTimeout(() => {\n        let user = JSON.parse(localStorage.getItem('loggedInUser'))\n        user['image_url'] = response.data.image_url;\n        localStorage.setItem('loggedInUser', JSON.stringify(user));\n      }, 1500);\n    }\n    await getUserProfile();\n    setDisaledButton(false);\n    setShowProfile(false);\n  }\n  const checkedState = (val) => {\n    if (val) {\n      setmf_status(1)\n    } else {\n      setmf_status(0)\n      setmf_type(\"\")\n    }\n  }\n  return (\n    <React.Fragment>\n      {showLoader &&\n        <CustomLoader />\n      }\n      <h1 className=\"pageTitle\">My Profile    <Button type={'top-button'} extraClasses={`float-right mt-3 ${disableButton ? \"loaderBtn disable\" : \"\"}`} onClick={() => disableButton ? \"\" : saveProfile()} label={\"Save Changes\"} disableBtn={disableButton} /></h1>\n      <h1 className=\"pageTitle mb-4 mt-5\"><div className=\"pr-4\">\n        <div className=\"userImgOuter\" onClick={onClickEditProfile}>\n          {/* <span style={{ background: 'url({`data:image/svg+xml;base64,${btoa(unescape(encodeURIComponent(data.name)))}`)' }}><i className=\"fa fa-pen\"></i></span> */}\n          <span style={{ background: `url(${'data:image/svg+xml;base64,' + btoa(unescape(encodeURIComponent(profileImg)))})` }}><i className=\"fa fa-pen\"></i></span>\n          <h2>{forename} {surname}</h2>\n        </div>\n      </div></h1>\n      <div className=\"row\">\n        <div className=\"col-sm-5\">\n          <div className=\"profileTitle\">\n            <span>My Details</span>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-lg-6\">\n              <Input\n                label={\"Forename\"}\n                type={'text'}\n                value={forename}\n                handleInputChange={(e) => setForename(e.target.value)}\n                error={forenameError}\n                placeholder={\"Forename\"}\n                errorMessage={FIRSTNAME_ERROR_MESSAGE}\n              />\n            </div>\n            <div className=\"col-lg-6\">\n              <Input\n                label={\"Surname\"}\n                type={'text'}\n                value={surname}\n                handleInputChange={(e) => setSurname(e.target.value)}\n                error={surnameError}\n                placeholder={\"Surname\"}\n                errorMessage={LASTNAME_ERROR_MESSAGE}\n              />\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <Input\n                label={\"Email\"}\n                type={'text'}\n                value={email}\n                handleInputChange={(e) => setEmail(e.target.value)}\n                error={emailError}\n                placeholder={\"Email\"}\n                errorMessage={ERROR_INVALID_EMAIL}\n              />\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <CustomDatepicker\n                label={\"Date of Birth (DD/MM/YYYY)\"}\n                value={dob}\n                handleDateChange={(date) => setDob(date)}\n                placeholder={\"Date of Birth\"}\n                error={dobError}\n                errorMessage={ERROR_INVALID_DOB}\n                maxDate={new Date()}\n              />\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-xl-12\">\n              <CustomMobile\n                label={\"Phone Number (Optional)\"}\n                value={phone}\n                handlePhoneChange={(event) => handlePhoneChange(event)}\n                error={phoneError}\n                placeholder={\"Phone number\"}\n                errorMessage={ERROR_INVALID_PHONE}\n              />\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <Textarea\n                label={\"Address\"}\n                type={'text'}\n                value={address}\n                handleInputChange={(e) => setAddress(e.target.value)}\n                error={addressError}\n                placeholder={\"Address\"}\n                errorMessage={ERROR_ADDRESS}\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"col-sm-1\"></div>\n        <div className=\"col-sm-5\">\n          <div className=\"formTitle titleWithAction\">\n            <span>Password & Security</span>\n            <a className=\"borderAction\" onClick={(e) => setShowChangePassword(true)}><img src={EditPasswordImg} /></a>\n          </div>\n          <div className=\"profileTitle titleWithAction\">\n            <span>Multi-Factor Authentication</span>\n            <label className=\"SwitchAction\">\n              <ToggleSwitch Name=\"switch1\" checked={mf_status === 1 ? true : false} onChange={checkedState} />\n            </label>\n          </div>\n          <p className=\"fieldLabel\">Upon turning this on, you'll be required to confirm your identity through your selected channel.</p>\n          {mf_status === 1 &&\n            <div className=\"fieldLabel titleWithAction\">\n              <span>Email Address</span>\n              <input type=\"radio\" className=\"SwitchAction\" value=\"Email\" name=\"MFA\" checked={mf_type === \"email\"} onChange={() => setmf_type(\"email\")} /><br />\n              <div className=\"mt-4\">\n              <span>Phone</span>\n              <input type=\"radio\" className=\"SwitchAction\" value=\"Phone\" name=\"MFA\" checked={mf_type === \"phone\"} onChange={() => setmf_type(\"phone\")} />\n              </div>\n            </div>\n          }\n        </div>\n      </div>\n      {showChangeProfile &&\n        <Overlay\n          title={'Change avatar'}\n          subTitle={'Select an avatar from below'}\n          closeOverlay={() => setShowProfile(false)}\n          cancelOverlay={() => setShowProfile(false)}\n          submitOverlay={() => onClickSetAvtar()}\n          disableBtn={disabledButton}\n        >\n          <div className=\"avatarMain\">\n            {pager.currentPage !== 1 && <a className=\"avatarArrow left\" onClick={(e) => {\n              setPage(pager.currentPage - 1);\n            }}><i className=\"uil uil-angle-left\"></i></a>}\n            <div className=\"mx-auto\" style={{ width: \"fit-content\" }}>\n              {avtarGenderMale && <button className={\"mx-4 p-1\"} style={{ backgroundColor: \"transparent\", borderColor: \"transparent\", borderBottomColor: \"rgb(68 61 129)\" }} onClick={() => { setAvtarGenderMale(true) }}>\n                <h6 style={{ color: \"#0c0058\" }}><b>Male</b></h6>\n              </button>}\n              {!avtarGenderMale && <button className={\"mx-4 p-1\"} style={{ backgroundColor: \"transparent\", borderColor: \"transparent\" }} onClick={() => { setAvtarGenderMale(true) }}>\n                <h6 style={{ color: \"#0c0058\" }}><b>Male</b></h6>\n              </button>}\n              {!avtarGenderMale && <button className=\"mx-4 p-1\" style={{ backgroundColor: \"transparent\", borderColor: \"transparent\", borderBottomColor: \"rgb(68 61 129)\" }} onClick={() => { setAvtarGenderMale(false) }}>\n                <h6 style={{ color: \"#0c0058\" }}><b>Female</b></h6>\n              </button>}\n              {avtarGenderMale && <button className=\"mx-4 p-1\" style={{ backgroundColor: \"transparent\", borderColor: \"transparent\" }} onClick={() => { setAvtarGenderMale(false) }}>\n                <h6 style={{ color: \"#0c0058\" }}><b>Female</b></h6>\n              </button>}\n            </div>\n            <div>\n\n              <div className=\"avatarOuter mt-5\">\n                {avtarGenderMale && allAvtars && displayAvtar.map((data, idx) => {\n                  return (\n                    <>{\n                      selectedAvtar == data.id ?\n                        <div className=\"avatar m-2\" id={`item_${idx}`} onClick={(e) => { setSelectedAvtar(data.id) }}><img style={{ filter: \"brightness(0.4)\" }} src={`data:image/svg+xml;base64,${btoa(unescape(encodeURIComponent(data.name)))}`} />\n                          <i style={{ position: \"absolute\", transform: 'translate(-135%, 40%)' }}>\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" fill=\"#fff\" className=\"bi bi-check\" viewBox=\"0 0 16 16\">\n                              <path d=\"M10.97 4.97a.75.75 0 0 1 1.07 1.05l-3.99 4.99a.75.75 0 0 1-1.08.02L4.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093 3.473-4.425a.267.267 0 0 1 .02-.022z\" />\n                            </svg>\n                          </i>\n                        </div> :\n                        <div className=\"avatar m-2\" id={`item_${idx}`} onClick={(e) => { setSelectedAvtar(data.id) }}><img src={`data:image/svg+xml;base64,${btoa(unescape(encodeURIComponent(data.name)))}`} /></div>\n                    }\n                    </>\n                  )\n                })}\n                {!avtarGenderMale && allAvtars && displayAvtar.map((data, idx) => {\n                  return (\n                    <>\n                      {\n                        selectedAvtar == data.id ?\n                          <div className=\"avatar m-2\" id={`item_${idx}`} onClick={(e) => { setSelectedAvtar(data.id) }}><img style={{ filter: \"brightness(0.4)\" }} src={`data:image/svg+xml;base64,${btoa(unescape(encodeURIComponent(data.name)))}`} />\n                            <i style={{ position: \"absolute\", transform: 'translate(-135%, 40%)' }}>\n                              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" fill=\"#fff\" className=\"bi bi-check\" viewBox=\"0 0 16 16\">\n                                <path d=\"M10.97 4.97a.75.75 0 0 1 1.07 1.05l-3.99 4.99a.75.75 0 0 1-1.08.02L4.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093 3.473-4.425a.267.267 0 0 1 .02-.022z\" />\n                              </svg>\n                            </i>\n                          </div> :\n                          <div className=\"avatar m-2\" id={`item_${idx}`} onClick={(e) => { setSelectedAvtar(data.id) }}><img src={`data:image/svg+xml;base64,${btoa(unescape(encodeURIComponent(data.name)))}`} /></div>\n                      }\n                    </>\n                  )\n                })}\n              </div>\n\n            </div>\n            {pager.currentPage !== pager.totalPages && <a className=\"avatarArrow right\" onClick={(e) => {\n              setPage(pager.currentPage + 1);\n            }}><i className=\"uil uil-angle-right\"></i></a>}\n          </div>\n        </Overlay>\n      }\n      {showChangePassword &&\n      <Overlay\n          title={'Change Password'}\n          closeOverlay={() => setShowChangePassword(false)}\n          cancelOverlay={() => setShowChangePassword(false)}\n          submitOverlay={() => onClickSetPassword()}\n          disableBtn={disableSaveButton}\n        >\n          <div className=\"row mb-4\">\n            <div className=\"col-lg-12\">\n              <Input\n                label={\"Current Password\"}\n                type={'password'}\n                value={currentPassword}\n                handleInputChange={(e) => setCurrentPassword(e.target.value)}\n                error={currentPasswordError}\n                errorMessage={ERROR_INVALID_CURRENT_PASSWORD}\n                preview={true}\n                autoComplete={`false`}\n              />\n            </div>\n            <div className=\"col-lg-12\">\n              <Input\n                label={\"New Password\"}\n                type={'password'}\n                value={newPassword}\n                handleInputChange={(e) => setNewPassword(e.target.value)}\n                error={newPasswordError}\n                errorMessage={ERROR_INVALID_NEW_PASSWORD}\n                preview={true}\n                autoComplete={`false`}\n              />\n            </div>\n            <div className=\"col-lg-12\">\n              <Input\n                label={\"Confirm New Password\"}\n                type={'password'}\n                value={confirmPassword}\n                handleInputChange={(e) => setConfirmPassword(e.target.value)}\n                error={passwordMisMatchError === true ? passwordMisMatchError : confirmPasswordError}\n                errorMessage={passwordMisMatchError === true ? ERROR_PASSWORD_MISMATCH : ERROR_INVALID_CONFIRM_NEW_PASSWORD}\n                preview={true}\n                autoComplete={`false`}\n              />\n            </div>\n            <div className=\"col-lg-12\">\n             <label className=\"reminderRow\" for=\"password-signin\">\n                <input id=\"password-signin\" type=\"checkbox\" onChange={e => handleChangeSignIn(e)} defaultChecked={changeSignIn} /> <span className=\"checkboxLabel\"> All devices will be required to sign in with new password</span>\n              </label>\n            </div>\n          </div>  \n        </Overlay>\n      }\n    </React.Fragment>\n  );\n};\n\nexport default Profile;","/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/web/pages/Admin/GroupDetails/GroupDetails.js",["296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316"],"import React, { useState, useEffect } from 'react'\nimport { useParams, Link } from \"react-router-dom\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport ToastUI from \"recruitment-components/ToastUI/ToastUI.js\";\nimport { useStoreActions, useStoreState } from 'easy-peasy';\nimport Overlay from \"recruitment-components/Overlay/Overlay.js\";\nimport NoRecord from \"recruitment-components/NoRecord/NoRecord.js\";\nimport MultiSelectDropDown from \"recruitment-components/MultiSelectDropDown/MultiSelectDropDown.js\";\nimport TableTwo from \"recruitment-components/TableTwo/TableTwo.js\";\nconst GroupDetails = () => {\n    let { id } = useParams();\n\n    const [showAddStudentOverlay, setShowAddStudentOverlay] = useState(false);\n    const getStudents = useStoreActions((actions) => actions.admin.getStudents);\n    const assignStudent = useStoreActions((actions) => actions.admin.assignStudent);\n    const removeTeacherFromGroup = useStoreActions((actions) => actions.admin.removeTeacherFromGroup);\n    const removeStudentFromGroup = useStoreActions((actions) => actions.admin.removeStudentFromGroup);\n    const getAllTeachersPerGroup = useStoreActions((actions) => actions.admin.getAllTeachersPerGroup);\n    const assignTeacher = useStoreActions((actions) => actions.admin.assignTeacher);\n    const group = useStoreState((state) => state.admin.group);\n    const students = useStoreState((state) => state.admin.students);\n    const subjectYearId = useStoreState((state) => state.admin.subjectYearId)\n    const allTeachersPerGroup = useStoreState((state) => state.admin.allTeachersPerGroup);\n    const getGroup = useStoreActions((actions) => actions.admin.getGroup);\n    const getTeachers = useStoreActions((actions) => actions.admin.getTeachers);\n    const teachers = useStoreState((state) => state.admin.teachers);\n    const setGroup = useStoreActions((actions)=> actions.admin.setGroup)\n\n    const [disableButton, setDisableButton] = useState(false);\n    const [showDelete, setShowDelete] = useState(false)\n    const [showAssignedTeacher, setShowAssignedTeacher] = useState(false);\n    const [inviteStudentList, setInviteStudentList] = useState([]);\n    const [teachersData, setTeachersData] = useState([]);\n    const [selectedTeachers, setSelectedTeachersToAssign] = useState([]);\n    //Assign-student\n    const [selectedStudents, setSelectedStudents] = useState([]);\n    const [showAssignTeacherOverlay, setShowAssignTeacherOverlay] = useState(false);\n    const [selectGroupStudent, setSelectGroupStudent] = useState([]);\n    const [searchStudent, setSearchStudents] = useState(\"\");\n    const [showDropDown, setShowDropDown] = useState(false);\n    const [getGroupPayload] = useState({ params: { id: id, page: 1, pagesize: 100,year_id: subjectYearId} })\n    //use-Effect\n    useEffect(() => {\n        let formData = { params: { id: id, page: 1, pagesize: 100,year_id: subjectYearId} }\n        getGroup(formData);\n        return async()=>{await setGroup(null)}   \n    }, [])\n\n    useEffect(() => {\n        if (group) {\n            let formData = { params: { page: 1, page_size: 100, year_id: group.year_id } }\n            getStudents(formData);\n            formData = { params: { id: id } }\n            getAllTeachersPerGroup(formData);\n        }\n    }, [group])\n    useEffect(() => {\n        if (students && group) {\n            const inviteStudent = []\n            students.data.map((studentList) => {\n                let flag = false;\n                group.data.map((list, idx) => {\n                    if (studentList.id === list.student_id) {\n                        flag = true\n                    }\n                })\n                if (!flag) {\n                    let newStudent = studentList;\n                    newStudent.full_name = studentList.first_name + ' ' + studentList.last_name\n                    inviteStudent.push(newStudent);\n                }\n            })\n            setInviteStudentList(inviteStudent)\n\n        }\n    }, [students])\n    useEffect(() => {\n        if (!teachers) {\n            let formData = { params: { page: 1, page_size: 200 } }\n            //getAllYears();\n            getTeachers(formData);\n        }\n    }, [])\n\n    useEffect(() => {\n        if (teachers) {\n            if (teachers.data && teachers.data.length) {\n                let teacherList = [];\n                teachers.data.map((teacher) => {\n                    let temp_teacher = teacher;\n                    temp_teacher.full_name = teacher.first_name + ' ' + teacher.last_name;\n                    teacherList.push(temp_teacher);\n                })\n                setTeachersData(teacherList);\n            } else {\n                setTeachersData([]);\n            }\n        }\n    }, [teachers])\n    //Functionality Methods\n    const addStudentsToGroup = async () => {\n        setDisableButton(true)\n        const selectedId = [];\n        selectedStudents.map((student, index) => {\n            selectedId.push({ id: student.id })\n        })\n        let formData = {\n            subject_id: group.subject_id,\n            subject_group_id: group.subject_group_id,\n            students: selectedId\n        }\n        await assignStudent(formData);\n        formData = { params: { id: id, page: 1, pagesize: 10 } }\n        getGroup(formData);\n        setDisableButton(false)\n        setShowAddStudentOverlay(false);\n        getGroup(getGroupPayload)\n    }\n    const selectAllData = (event) => {\n        let selectedId = [];\n        if (event.target.checked) {\n            group.data.map((item) => {\n                selectedId.push(item.id);\n            })\n        }\n        else {\n            selectedId = [];\n        }\n\n        setSelectGroupStudent(selectedId);\n    }\n    const onSelectSingleRow = (event, id) => {\n        let TempRow = [...selectGroupStudent];\n        if (!event.target.checked) {\n            TempRow = TempRow.filter(rowId => id != rowId);\n        }\n        else if (event.target.checked && !selectGroupStudent.includes(id)) {\n            TempRow.push(id);\n        }\n\n        setSelectGroupStudent(TempRow);\n    }\n    const deleteGroupStudentCall = async () => {\n        const deleteGroupStudentId = []\n        selectGroupStudent.map((studentGroupId, idx) => {\n            deleteGroupStudentId.push({ id: studentGroupId })\n        })\n        let formData = { subject_group_students: deleteGroupStudentId }\n        setDisableButton(true)\n        await removeStudentFromGroup(formData);\n        formData = { params: { id: id, page: 1, pagesize: 10 } }\n        getGroup(formData);\n        setSelectGroupStudent([]);\n        setDisableButton(false)\n        setShowDelete(false)\n        await getGroup(getGroupPayload)\n    }\n    const onClickRemoveTeacher = async (TeacherId) => {\n        let formData = { subject_group_teachers: [{ id: TeacherId }] }\n        setDisableButton(true)\n        await removeTeacherFromGroup(formData);\n        formData = { params: { id: id } }\n        await getAllTeachersPerGroup(formData);\n        setDisableButton(false)\n    }\n    const submitAssignTeacher = async (event) => {\n        const ids = selectedTeachers.map(teacher => {\n            const obj = { id: teacher.id }\n            return obj\n        })\n        let formData = { subject_id: group.subject_id, subject_group_id: group.subject_group_id, teachers: ids }\n        setDisableButton(true)\n        await assignTeacher(formData);\n        formData = { params: { id: id } }\n        await getAllTeachersPerGroup(formData);\n        setDisableButton(false);\n        setShowAssignTeacherOverlay(false);\n    }\n\n    return (\n        <>\n            <div className=\"section\">\n                <Link to=\"/subjects\" className=\"goBack backToClass\"><i className=\"uil uil-arrow-left\"></i> Back to Subjects</Link>\n                <div className=\"row\">\n                    <div className=\"col-lg-7\">\n                        <h1 className=\"pageTitle\">\n                            <span className=\"pr-4\">{group && `${group.subject_name} - ${group.subject_group_name}`}</span><span className=\"border-left pl-4\">{group && group.data.length}</span> <small>Students</small>\n                        </h1>\n                    </div>\n                    <div className=\"col-lg-5\">\n                        <div className=\"add-student\">\n                            <button className=\"topButton float-right\" onClick={() => setShowAddStudentOverlay(true)}><i className=\"fa fa-plus-circle\" />Add Student</button>\n                        </div>\n                        <div className=\"formField importCSV\">\n                            <a type=\"text\" className=\"fieldInput\" onClick={() => { setShowAssignedTeacher(true); }}><i className=\"fa fa-eye\"></i>Assigned Teachers</a>\n                        </div>\n                    </div>\n\n                </div>\n\n                <p className=\"titleInfo\">Here you can organise subjects and assign them to classes or individual students.</p>\n                <div className=\"menuDropdown ml-auto\" onClick={() => (selectGroupStudent.length > 0) ? setShowDropDown(!showDropDown) : \"\"}>\n                    <span className={`${(selectGroupStudent.length > 0) ? 'enabled' : \"\"} ${(showDropDown) ? 'active' : ''}`}><i className=\"uil uil-ellipsis-h\" /></span>\n                    \n                    {showDropDown && <div className=\"customDropdown max-h-150 d-block\">\n                        <a onClick={() => selectGroupStudent.length ? setShowDelete(true) : toast.error(<ToastUI message={'Please select students.'} type={\"Error\"} />, {\n                            toastId: 'toast-show'\n                        })}><i className=\"fa fa-trash-alt mr-2\" /> Remove Students</a>\n                    </div>}\n                </div>\n                {/* <div className=\"mb-4\">\n                <div className=\"menuDropdown\">\n                    <span className=\"deletegroupIcon active\" onClick={() => selectGroupStudent.length ? setShowDelete(true) : toast.error(<ToastUI message={'Please select students.'} type={\"Error\"} />)}><i className=\"fa fa-trash-alt\"></i></span>\n                    <span className=\"addgroupIcon\" onClick={() => setShowAddStudentOverlay(true)}><i className=\"fa fa-plus\"></i></span>\n                </div>\n            </div> */}\n            </div>\n            {showAddStudentOverlay &&\n                <Overlay\n                    title={'Add Student(s)'}\n                    subTitle={'Start typing a name to add students to the group'}\n                    closeOverlay={() => setShowAddStudentOverlay(false)}\n                    cancelOverlay={() => setShowAddStudentOverlay(false)}\n                    submitOverlay={() => addStudentsToGroup()}\n                    disableBtn={disableButton}\n                >\n                    <div className=\"formWrapper\">\n                        <MultiSelectDropDown\n                            options={students ? inviteStudentList : []}\n                            onSelect={(selectedData) => { setSelectedStudents(selectedData) }}\n                        />\n                    </div>\n                </Overlay>\n            }\n            {group && group.data.length ? <div className=\"table-responsive\">\n                <table className=\"table table-borderless fullTable\">\n                    <thead>\n                        <tr>\n                            <th className=\"checkTd\"><input type=\"checkbox\" onChange={selectAllData} checked={group && selectGroupStudent.length === group.data.length} /></th>\n                            <th className=\"pl-0\"><div className=\"tableSearch\"><img src=\"/images/search.svg\" /><input className=\"\" value={searchStudent} type=\"text\" placeholder=\"Search Student...\" onChange={(event) => { setSearchStudents(event.target.value) }} /></div></th>\n                            <th>Email Address</th>\n                            <th>Form</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {group && group.data.map((student, idx) => {\n                            return <>\n                                {student.student.first_name.includes(searchStudent) && <tr>\n                                    <td scope=\"row\"><input type=\"checkbox\" onChange={(event) => { onSelectSingleRow(event, student.id) }} checked={selectGroupStudent.includes(student.id)} /></td>\n                                    <td className=\"tableClientImg\">{student.student.image_url != ''?<img id=\"user-profile-avatar\" src={ `data:image/svg+xml;base64,${btoa(unescape(encodeURIComponent(student.student.image_url)))}` } />:<span style={{ background: 'url(\"/images/user.jpg\")' }} />}{student.student.first_name} {student.student.last_name}</td>\n                                    <td>{student.student.email}</td>\n                                    <td>{student.student.student_year_forms.form.name}</td>\n                                </tr>}\n                            </>\n                        })}\n                    </tbody>\n                </table>\n            </div> : <NoRecord\n                message=\"No Students\"\n                subMessage=\"Add a student to begin\"\n            />}\n            {showDelete &&\n                <Overlay\n                    title={\"Are you sure?\"}\n                    subTitle={\"Are you sure you want to delete this Student?\"}\n                    closeOverlay={() => setShowDelete(false)}\n                    cancelOverlay={() => setShowDelete(false)}\n                    submitOverlay={() => deleteGroupStudentCall()}\n                    disableBtn={disableButton}\n                    isDelete={true}\n                >\n\n                </Overlay>\n            }\n            {showAssignedTeacher &&\n                <Overlay\n                    title={\"Assigned Teachers\"}\n                    subTitle={`You have ${(allTeachersPerGroup && allTeachersPerGroup.length > 0 ? allTeachersPerGroup.length : 0)} teachers assigned to this subject group.`}\n                    closeOverlay={() => setShowAssignedTeacher(false)}\n                    cancelOverlay={() => setShowAssignedTeacher(false)}\n                    submitOverlay={() => { setShowAssignedTeacher(false) }}\n                    disableBtn={disableButton}\n                >\n                    {allTeachersPerGroup && allTeachersPerGroup.length > 0 && <div className=\"table-responsive\" >\n                        <table className=\"table table-borderless fullTable assignedTeacher\" style={{ minWidth: \"auto\" }}>\n                            <thead>\n                                <tr>\n                                    <th className=\"pl-0\">Assigned Teacher</th>\n                                    <th className=\"\">Email Address</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {allTeachersPerGroup && allTeachersPerGroup.map((teacher, idx) => {\n                                    return <tr>\n                                        <td className=\"tableClientImg\"><span style={{ backgroundImage: `url(/images/user.jpg)` }}></span>{teacher.first_name}</td>\n                                        <td>{teacher.email}</td>\n                                        <td className=\"pr-3 float-right\">\n                                            <a onClick={() => { onClickRemoveTeacher(teacher.subject_group_teacher.id) }} className=\"addField ml-2 text-center\"><i className=\"fa fa-trash-alt\"></i></a>\n                                        </td>\n                                    </tr>\n                                })}\n                            </tbody>\n                        </table>\n                    </div>}\n                    <h6 onClick={() => { setShowAssignTeacherOverlay(true); setShowAssignedTeacher(false) }} className=\"mt-2 mb-5\"><a className=\"importSubjectCSV\" style={{ color: \"#274D64\" }} ><i className=\"fa fa-plus-circle\"></i><label>&nbsp;&nbsp;Assign Teacher</label></a></h6>\n                </Overlay>\n            }\n            {showAssignTeacherOverlay && <Overlay\n                title={'Assign Teacher'}\n                subTitle={'Start entering the name of the teacher you would like to assign to the group'}\n                closeOverlay={() => setShowAssignTeacherOverlay(false)}\n                cancelOverlay={() => setShowAssignTeacherOverlay(false)}\n                submitOverlay={(event) => submitAssignTeacher(event)}\n                disableBtn={disableButton}\n            >\n                <div className=\"formWrapper\">\n                    <MultiSelectDropDown\n                        options={teachersData}\n                        onSelect={setSelectedTeachersToAssign}\n                    />\n                </div>\n            </Overlay>}\n        </>\n    )\n}\n\nexport default GroupDetails","/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/web/pages/Admin/Form/FormDetails.js",["317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340"],"import React, { useEffect, useState } from 'react'\nimport { useParams, Link } from \"react-router-dom\";\nimport { useStoreActions, useStoreState } from 'easy-peasy';\nimport NoRecord from \"recruitment-components/NoRecord/NoRecord.js\";\nimport CustomLoader from \"recruitment-components/CustomLoader/CustomLoader.js\";\nimport Overlay from \"recruitment-components/Overlay/Overlay.js\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport ToastUI from \"recruitment-components/ToastUI/ToastUI.js\";\nimport SingleSelect from \"recruitment-components/SingleSelect/SingleSelect.js\";\nfunction FormDetails() {\n    let { id } = useParams();\n    const [selectedStudents, setSelectedStudents] = useState([]);\n    const [studentList, setStudentList] = useState([]);\n    const [showSubmenu, setShowSubmenu] = useState(false);\n    const [selectFormStudent, setSelectFormStudent] = useState([]);\n    const [showLoader, setShowLoader] = useState(false);\n    const [showMoveStudents, setShowMoveStudents] = useState(false);\n    const [disableButton, setDisableButton] = useState(false);\n    const [showDelete, setShowDelete] = useState(false);\n    const [formsData, setFormsData] = useState([]);\n    const [selectedNewForm,setSelectedNewForm] = useState('');\n    const [searchStudents,setSearchStudents] = useState('')\n    //Store Action\n    const getFormDetails = useStoreActions((actions) => actions.admin.getFormDetails);\n    const getStudentByForm = useStoreActions((actions) => actions.admin.getStudentByForm);\n    const moveStudentToNewForm = useStoreActions((actions) => actions.admin.moveStudentToNewForm);\n    const getAllForms = useStoreActions((actions) => actions.admin.getAllForms);\n    const removeStudentFromForm = useStoreActions((actions) => actions.admin.removeStudentFromForm);\n    const [moveStudentData,setMoveStudentData] = useState({});\n    const getForms = useStoreActions((actions) => actions.admin.getForms);\n    //store state\n    const formDetails = useStoreState((state) => state.admin.formDetails);\n    const formStudentsList = useStoreState((state) => state.admin.formStudentsList);\n    const allForms = useStoreState((state) => state.admin.allForms);\n\n    useEffect(async () => {\n        setShowLoader(true);\n        await getFormDetails(id)\n        let formData = { params: { form_id: id } }\n        await getStudentByForm(formData);\n        setShowLoader(false);\n    }, [])\n    useEffect(async()=>{\n        let formData = { params: { form_id: id,q:searchStudents } }\n        await getStudentByForm(formData);\n    },[searchStudents])\n    useEffect(() => {\n        if (formDetails) {\n            getAllForms(formDetails.year.id)\n        }\n    }, [formDetails])\n    useEffect(async () => {\n        if (formStudentsList) {\n            setStudentList(formStudentsList.data)\n        }\n    }, [formStudentsList])\n    useEffect(() => {\n        if (allForms) {\n            let localForms = []\n            \n            allForms.map((obj, idx) => {\n                localForms.push({ id: obj.id, name: obj.form.name });\n            })\n            setFormsData(localForms);\n        }\n    }, [allForms])\n\n    const selectAllData = (event) => {\n        let selectedId = [];\n        if (event.target.checked) {\n            studentList.map((item) => {\n                selectedId.push(item.student.id);\n            })\n        }\n        else {\n            selectedId = [];\n        }\n        setSelectFormStudent(selectedId);\n    }\n    const onSelectSingleRow = (event, id) => {\n        let TempRow = [...selectFormStudent];\n        if (!event.target.checked) {\n            TempRow = TempRow.filter(rowId => id != rowId);\n        }\n        else if (event.target.checked && !selectFormStudent.includes(id)) {\n            TempRow.push(id);\n        }\n        setSelectFormStudent(TempRow);\n    }\n    const deleteFormStudentCall = async () => {\n        let deleteFormStudentId = selectFormStudent.map((studentFormId, idx) => {\n            return { id: studentFormId }\n        })\n        let formData = { form_id: id, students: deleteFormStudentId }\n        setDisableButton(true)\n        await removeStudentFromForm(formData);\n        formData = { params: { form_id: id } };\n        getFormDetails(id);\n        getStudentByForm(formData);\n        setSelectFormStudent([]);\n        setDisableButton(false)\n        setShowDelete(false)\n        setShowSubmenu(()=>false)\n    }\n    const moveStudent = async () => {\n        let moveFormStudentId = selectFormStudent.map((studentFormId, idx) => {\n            return { id: studentFormId }\n        })\n        let formData = {\n            year_id:formDetails.year.id,\n            form_id:selectedNewForm,\n            students:moveFormStudentId\n        }\n        setDisableButton(true)\n        await moveStudentToNewForm(formData);\n        formData = { params: { form_id: id } }\n        getFormDetails(id)\n        getStudentByForm(formData);\n        setSelectFormStudent([]);\n        setDisableButton(false)\n        setShowMoveStudents(false);\n        setShowSubmenu(()=>false);\n    }\n    return (\n        <div>\n            { showLoader &&\n                <CustomLoader />\n            }\n            <div className=\"section pb-0\">\n                <Link to=\"/forms\" className=\"goBack backToClass\"><i className=\"uil uil-arrow-left\"></i> Back to Forms</Link>\n                <h1 className=\"pageTitle\"><span className=\"pr-4\">{formDetails && `${formDetails.name}`}</span><span className=\"border-left pl-4\">{formDetails && formDetails.students_count}</span> <small>Students</small>\n                    {/* <button class=\"topButton float-right\"><i class=\"fa fa-plus-circle\"></i> Add Student</button> */}\n                </h1>\n                <p className=\"titleInfo\">Here you can Manage Student From this class.</p>\n                <div className=\"mb-4\">\n                    <div className=\"topFilters\">\n                        <div className=\"d-flex\">\n                            <div className=\"customField searchBox mr-4\">\n                                <i className=\"uil uil-search\"></i>\n                                <input type=\"text\" className=\"fieldInput\" placeholder=\"Search student...\" onChange={(e)=>{setSearchStudents(e.target.value)}}/>\n                            </div>\n                            <div className=\"menuDropdown ml-auto\">\n                                <span className={`${(selectFormStudent.length > 0) ? 'enabled' : \"\"} ${(showSubmenu) ? 'active' : ''}`} onClick={() => (selectFormStudent.length > 0 || showSubmenu) ? setShowSubmenu(!showSubmenu) : \"\" }><i className=\"uil uil-ellipsis-h\"></i></span>\n                                {showSubmenu && <div className=\"customDropdown max-h-150 d-block\">\n                                    <a onClick={() => { setShowMoveStudents(true) }}><img src=\"/images/assign.png\" /> Move students</a>\n                                    <a onClick={() => { setShowDelete(true) }}><i className=\"fa fa-trash-alt mr-2\"></i> Remove students</a>\n                                </div>}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            {\n                studentList && studentList.length ? <div className=\"table-responsive\">\n                    <table className=\"table table-borderless fullTable\">\n                        <thead>\n                            <tr>\n                                <th className=\"checkTd\"><input type=\"checkbox\" onChange={selectAllData} checked={studentList && selectFormStudent.length === studentList.length} /></th>\n                                <th className=\"pl-0\"><div className=\"tableSearch\">Select All</div></th>\n                                <th>Email Address</th>\n                                <th>Tutor</th>\n                                <th>Guardians</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {studentList && studentList.map((student, idx) => {\n                                return <>\n                                    <tr key={idx}>\n                                        <td scope=\"row\"><input type=\"checkbox\" onChange={(event) => { onSelectSingleRow(event, student.student.id) }} checked={selectFormStudent.includes(student.student.id)} /></td>\n                                        <td className=\"tableClientImg\">{student.student.image_url != ''?<img id=\"user-profile-avatar\" src={ `data:image/svg+xml;base64,${btoa(unescape(encodeURIComponent(student.student.image_url)))}` } />:<span style={{ background: 'url(\"/images/user.jpg\")' }} />} {student.student.first_name}</td>\n                                        <td>{student.student.email}</td>\n                                        <td>{(student.student.student_tutor.length == 0)?'':student.student.student_tutor[0].first_name}</td>\n                                        <td>{student.student.guardians_count}</td>\n                                    </tr>\n                                </>\n                            })}\n                        </tbody>\n                    </table>\n                </div> : <NoRecord\n                        message=\"No Students\"\n                        subMessage=\"Add a student to begin\"\n                    />\n            }\n            {showMoveStudents &&\n                <Overlay\n                    title={\"Move Students\"}\n                    subTitle={\"Select the class that you would like to move the students to do.\"}\n                    closeOverlay={() => setShowMoveStudents(false)}\n                    cancelOverlay={() => setShowMoveStudents(false)}\n                    submitOverlay={() => {moveStudent()}}\n                    disableBtn={disableButton}\n                >\n                    <SingleSelect\n                        placeholder={'Select Class'}\n                        extraClasses={'mb-4'}\n                        options={formsData}\n                        changeOption={(id) => setSelectedNewForm(id)}\n                    />\n                </Overlay>}\n            {showDelete &&\n                <Overlay\n                    title={\"Are you sure?\"}\n                    subTitle={\"Are you sure you want to delete this Student?\"}\n                    closeOverlay={() => setShowDelete(false)}\n                    cancelOverlay={() => setShowDelete(false)}\n                    submitOverlay={() => deleteFormStudentCall()}\n                    disableBtn={disableButton}\n                    isDelete={true}\n                >\n\n                </Overlay>\n            }\n        </div >\n    )\n}\n\nexport default FormDetails\n","/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/web/pages/Admin/Dashboard.js",["341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361","362","363","364","365","366","367","368","369"],"import React, { useState, useEffect } from 'react';\nimport { useStoreState, useStoreActions } from 'easy-peasy';\nimport { Link } from \"react-router-dom\";\nimport Sidebar from \"recruitment-components/Sidebar/Sidebar.js\";\nimport { Pie, Line } from 'react-chartjs-2';\nimport Tabs, { TabPane } from 'rc-tabs';\nimport 'rc-tabs/assets/index.css';\nimport moment from 'moment';\nimport NoDocImg from \"recruitment-images/no-documents.svg\";\nimport UserImg from \"recruitment-images/user.jpg\";\nimport NoConnections from \"recruitment-images/no-connection.svg\";\nimport { clearUserData} from \"../../../lib/utils/Service\"\nimport {useHistory} from \"react-router-dom\"\nimport { set } from 'js-cookie';\nimport CustomLoader from \"recruitment-components/CustomLoader/CustomLoader.js\";\n\nconst pieOptions = {\n  layout: {\n    padding: {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }\n  },\n  tooltips: {\n    enabled: false\n  },\n  legend: {\n    display: true,\n    position: 'right',\n    rtl: false,\n    labels: {\n      usePointStyle: true\n    }\n  },\n  elements: {\n    arc: {\n      borderWidth: 0\n    }\n  }\n};\n\nconst lineOptions = {\n  legend: {\n    display: false\n  },\n  scales: {\n    yAxes: [\n      {\n        ticks: {\n          beginAtZero: false,\n          callback: function(value) {\n            return `${value}%`;\n          },\n          max: 100,\n          min: 0,\n          stepSize: 10\n        }\n      }\n    ]\n  }\n};\n\nconst Dashboard = (props) => {\n  const history = useHistory()\n  const [customLoader,setCustomLoader] = useState(false)\n  const [forename, setForename] = useState('');\n  const [todayDate, setTodayDate] = useState('');\n  const [avtarGenderMale, setAvtarGenderMale] = useState(true);\n  const userProfile = useStoreState((state) => state.admin.userProfile);\n  const getUserProfile = useStoreActions((actions) => actions.admin.getUserProfile);\n  const setShowProgressBar = useStoreActions((actions) => actions.classimize.setShowProgressBar);\n  const getStudentsStatus = useStoreActions((actions) => actions.admin.getStudentsStatus);\n  const studentStatus = useStoreState((state) => state.admin.studentStatus);\n  const getTeacherStatus = useStoreActions((actions) => actions.admin.getTeacherStatus);\n  const teacherStatus = useStoreState((state) => state.admin.teacherStatus);\n  const [studentChartData, setStudentChartData] = useState({});\n  const [teacherChartData, setTeacherChartData] = useState({});\n  const [lineChartData, setLineChartData] = useState([]);\n  const [showLineChart, setShowLineChart] = useState(false);\n  // const getTeacherTopPerformance = useStoreActions((actions) => actions.admin.getTeacherTopPerformance);\n  const teacherTopPerformance = useStoreState((state) => state.admin.teacherTopPerformance);\n  const getStudentTopPerformance = useStoreActions((actions) => actions.admin.getStudentTopPerformance);\n  const studentTopPerformance = useStoreState((state) => state.admin.studentTopPerformance);\n  const [topStudentData, setTopStudentData] = useState([]);\n  const [topTeachertData, setTopTeachertData] = useState([]);\n  const [weeklyPerformance, setWeeklyPerformance] = useState({})\n\n\n  \n  setInterval(function(){ \n    const time = localStorage.getItem('session')\n      if(Number(time) <= Date.now()){\n        clearUserData()\n        history.push(\"/login\")\n      }\n    }, 5000);\n\n  useEffect(async() => {\n   \n  }, []);\n  useEffect(() => {\n    if (studentStatus) {\n      setStudentChartData({\n        maintainAspectRatio: false,\n        responsive: true,\n        labels: [`${studentStatus.inactive_students} Inactive`,`${studentStatus.active_students} Online`, ],\n        datasets: [\n          {\n            data: [studentStatus.inactive_students,studentStatus.active_students],\n            backgroundColor: [\"#0c0058\",\"#61c788\"],\n            borderColor: \"#fff\",\n            borderWidth: 5,\n            weight: 291\n          }\n        ]\n      })\n    }\n  }, [studentStatus]);\n  useEffect(() => {\n    if (teacherStatus) {\n      setTeacherChartData({\n        maintainAspectRatio: false,\n        responsive: false,\n        labels: [`${teacherStatus.inactive_teachers} Inactive`, `${teacherStatus.active_teachers} Online`],\n        datasets: [\n          {\n            data: [teacherStatus.inactive_teachers, teacherStatus.active_teachers],\n            backgroundColor: [\"#0c0058\", \"#2dadb5\"],\n            borderColor: \"#fff\",\n            borderWidth: 5,\n            weight: 291\n          }\n        ]\n      })\n    }\n  }, [teacherStatus]);\n\n  // TEACHER PERFORMANCE\n  useEffect(() => {\n    if(teacherTopPerformance) {\n      setTopTeachertData(teacherTopPerformance);\n    }\n  }, [teacherTopPerformance])\n\n  // STUDENT PERFORMANCE\n  useEffect(async() => {\n    if(studentTopPerformance) {\n     await setTopStudentData(studentTopPerformance.top_performing_students);\n     await setWeeklyPerformance(studentTopPerformance.weekly_school_performance);\n    }\n  }, [studentTopPerformance])\n\n  useEffect(()=>{getLineChartData();},[weeklyPerformance])\n\n  useEffect(() => {\n    //getUserProfile();\n  }, [avtarGenderMale])\n  useEffect(() => {\n    var today = new Date();\n    var dd = String(today.getDate()).padStart(2, '0');\n    var mm = today.toLocaleString('default', { month: 'long' }); //January is 0!\n    var yyyy = today.getFullYear();\n\n    today = dd + ' ' + mm + ' ' + yyyy;\n    setTodayDate(today)\n    if (userProfile) {\n      setForename(userProfile.first_name)\n    }\n  }, [userProfile])\n\n  const getLineChartData = () => {\n    const data = {\n      labels: Object.keys(weeklyPerformance).reverse(),\n      datasets: [\n        {\n          data: Object.values(weeklyPerformance).reverse(),\n          fill: true,\n          backgroundColor: \"rgba(75,192,192,0.2)\",\n          borderColor: \"#0c0058\"\n        }\n      ]\n    };\n    setShowLineChart(true)\n    setLineChartData(data)\n  }\n\n  const greeting = () => {\n    const hour = moment().hour();\n    if (hour > 16){\n      return \"Good evening\";\n    }\n    if (hour > 11){\n      return \"Good afternoon\";\n    }\n    return 'Good morning';\n  }\n\n  const getGetOrdinal = (n) => {\n    var s=[\"th\",\"st\",\"nd\",\"rd\"],\n        v=n%100;\n    return n+(s[(v-20)%10]||s[v]||s[0]);\n }\n\n  const getPerformanceStudent = () => {\n    return (\n    <>\n      {(topStudentData && topStudentData.length > 0) ?\n      <>\n      <div className=\"table-responsive\">\n        <table className=\"table table-borderless\">\n          <thead>\n            <tr>\n              <th />\n              <th className=\"pl-0\">Student</th>\n              <th>Year</th>\n              <th>Avg. performance</th>\n            </tr>\n          </thead>\n          <tbody>\n            {topStudentData.map((obj, idx) => (\n            <tr>\n              <td scope=\"row\" className=\"tableRankOuter\"><div className=\"tableRank\">{(idx+1) <4 ? <img src=\"images/star.png\" /> : null }<b>{(getGetOrdinal(idx+1))}</b></div></td>\n              <td className=\"tableClientImg\"><span style={{ background: 'url(\"'+ ((typeof obj.profile_image != \"undefined\" && obj.profile_image != \"\") ? `data:image/svg+xml;base64,${btoa(unescape(encodeURIComponent(obj.profile_image)))}` : UserImg) +'\")' }} /> {obj.name}</td>\n              <td>{obj.year}</td>\n              <td>{obj.average}%</td>\n            </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n      </>\n      :\n      <>\n      <div className=\"mt-3 mb-3\" style={{textAlign:'center', color: '#0c0058'}}>\n        <img src={NoConnections} /> \n        <h4 style={{ color: '#0c0058', marginBottom: \"5px\", fontFamily: \"neue_helveticabold\" }}>Nothing new here</h4>\n        <p>Assign some work to your class to begin.</p>\n      </div>\n      </>\n      }\n    </>\n    );\n  }\n\n  const getPerformanceTeacher = () => {\n    return (\n    <>\n      {(topTeachertData && topTeachertData.length > 0) ?\n      <>\n      <div className=\"table-responsive\">\n        <table className=\"table table-borderless\">\n          <thead>\n            <tr>\n              <th />\n              <th className=\"pl-0\">Teacher</th>\n              <th>Subject</th>\n              <th>Year</th>\n              <th>Avg. performance</th>\n            </tr>\n          </thead>\n          <tbody>\n            {topTeachertData.map((obj, idx) => (\n            <tr>\n              <td scope=\"row\" className=\"tableRankOuter\"><div className=\"tableRank\">{(idx+1) <4 ? <img src=\"images/star.png\" /> : null }<b>{(getGetOrdinal(idx+1))}</b></div></td>\n              <td className=\"tableClientImg\"><span style={{ background: 'url(\"'+ ((typeof obj.profile_image != \"undefined\" && obj.profile_image != \"\") ? `data:image/svg+xml;base64,${btoa(unescape(encodeURIComponent(obj.profile_image)))}` : UserImg) +'\")' }} /> {obj.name}</td>\n              <td>{obj.subject}</td>\n              <td>{obj.year}</td>\n              <td>{obj.average}%</td>\n            </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n      </>\n      :\n      <div className=\"mt-3 mb-3\" style={{textAlign:'center', color: '#0c0058'}}>\n        <img src={NoConnections} /> \n        <h4 style={{ color: '#0c0058', marginBottom: \"5px\", fontFamily: \"neue_helveticabold\" }}>Nothing new here</h4>\n        <p>Assign some work to your class to begin.</p>\n      </div>      \n      }\n    </>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      {/* { customLoader &&\n        <CustomLoader />\n      } */}\n      <div className=\"goBack backToClass\">{todayDate}</div>\n      <h1 className=\"pageTitle\">{greeting()} <b>{forename}</b>\n        <div className=\"exportDataOuter\">\n          <button className=\"topButton d-none float-right\"><img src=\"images/export.png\" /> Export data</button>\n          <div className=\"formFieldOuter d-none dateTrem\">\n            <label className=\"fieldLabel\">Data/Terms</label>\n            <div className=\"formField\">\n              <input type=\"text\" className=\"fieldInput\" placeholder=\"Jan - Mar 2021\" />\n              <i className=\"uil uil-angle-down arrow\" />\n            </div>\n          </div>\n        </div>\n      </h1>\n      <p className=\"titleInfo\">Welcome to your Dashboard.</p>\n      <div className=\"row dashboardSectionRow\">\n        <div className=\"col-xl-3 col-md-6 col-12\">\n          <div className=\"cardContainer\">\n            <div className=\"statsTitle mb-4\">\n              <label>Total Clients</label>\n              <span>{studentStatus ? studentStatus.active_students + studentStatus.inactive_students : 0}</span>\n            </div>\n            <Pie\n              data={studentChartData}\n              options={pieOptions}\n            />\n            {/* <img src=\"images/graph1.png\" className=\"smallGraph\" /> */}\n          </div>\n        </div>\n        <div className=\"col-xl-3 col-md-6 col-12\">\n          <div className=\"cardContainer\">\n            <div className=\"statsTitle mb-4\">\n              <label>Total Registered Candidates</label>\n              <span>{teacherStatus ? teacherStatus.active_teachers + teacherStatus.inactive_teachers : 0}</span>\n            </div>\n            <Pie\n              data={teacherChartData}\n              options={pieOptions}\n            />\n            {/* <img src=\"images/graph2.png\" className=\"smallGraph\" /> */}\n          </div>\n        </div>\n        <div className=\"col-xl-6 col-md-12\">\n          <div className=\"cardContainer schoolPerformanceChart\">\n            <div className=\"statsTitle\">\n              <label>Overall recruitment performance</label>\n            </div>\n            {(showLineChart) ?\n            <>\n            <Line \n              data={lineChartData}\n              options={lineOptions}\n            />\n            </>\n            :\n            <div className=\"noReminder\" style={{background: \"#fff\", borderRadius: \"7px\"}}>\n              <img style={{width: \"120px\"}} src={NoDocImg} />\n              <h1>No data to show</h1>\n              <p style={{color: \"#222e68\"}}>Assign some work to your class to begin.</p>\n            </div>\n            }\n          </div>\n        </div>\n      </div>\n      {/*<div className=\"cardContainer p-0\">\n        <div className=\"tableFilterTopOuter tabsPerformance\" style={{ paddingBottom: \"45px\"}}>\n          <Tabs defaultActiveKey=\"1\">\n            <TabPane tab=\"Top Performing Students\" key=\"1\">\n              {getPerformanceStudent()}\n            </TabPane>\n            \n          </Tabs>\n        </div>\n        \n      </div>*/}\n\n    </React.Fragment>\n  );\n};\n\nexport default Dashboard;\n","/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/web/pages/Authentication/ForgotPassword.js",["370","371","372","373","374","375","376"],"import React, { useState, useEffect } from 'react';\nimport Logo from \"recruitment-images/h1.png\";\nimport LoginBg from \"recruitment-images/wallpaper.jpg\";\nimport Input from \"recruitment-components/Input/Input.js\";\nimport { useStoreActions } from 'easy-peasy';\nimport Button from \"recruitment-components/Button/Button.js\";\nconst ForgotPassword = (props) => {\n  const [email, setEmailAddress] = useState('');\n  const [emailError, setEmailError] = useState(false);\n  const [disableButton, setDisableButton] = useState(false);\n  const forgetPassword = useStoreActions((actions) => actions.authentication.forgetPassword);\n\n  const forgetUser = async () => {\n    setEmailError(false);\n\n    if (email.trim() == '') {\n      setEmailError(true);\n      return false;\n    }\n    let host = window.location.hostname;\n    let domain = ''\n    if (host == 'localhost') {\n      domain = 'dps'\n    } else {\n      domain = host\n    }\n    setDisableButton(true);\n    let formData = { domain: domain, email: email }\n    let response = await forgetPassword(formData);\n    setDisableButton(false);\n    // if(response) {\n    //   history.push('/dashboard');\n    // }\n  }\n  return (\n    <React.Fragment>\n      <a className=\"loginLogo\"><img src={Logo} /></a>\n      {/*<h2 className=\"loginLogo formTitle\">Recruitment AI</h2>*/}\n      <div className=\"container GuestOuter\">\n        <div className=\"row white-bg\">\n          <div className=\"col-md-7 col-lg-7  loginImgLeft\">\n            <img src={LoginBg} />\n          </div>\n          <div className=\"col-md-5 col-lg-5  loginForm\">\n            <form>\n              <h1 className=\"formTitle\">Forgot Password</h1>\n              <Input\n                label={\"Email Address\"}\n                type={'text'}\n                value={email}\n                handleInputChange={(e) => setEmailAddress(e.target.value)}\n                handleInputKeyPress={(event)=>(event.key === 'Enter'?forgetUser():'')}\n                error={emailError}\n                errorMessage={\"Please enter valid email.\"}\n              />\n              <div className=\"row\">\n                <div className=\"col-sm-8\">\n                  <Button type={'theme-button'} extraClasses={`w-100 theme-button ${disableButton ? \"loaderBtn disable\" : \"\"}`} onClick={() => disableButton ? \"\" : forgetUser()} label={\"Submit\"} disableBtn={disableButton} />\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n        {/*<div className=\"loginFooter\">\n          <div className=\"container\">\n            By setting up an account you agree to our <a>Terms of Conditions</a> and <a>Privacy Policy</a>\n          </div>\n        </div>*/}\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default ForgotPassword;\n","/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/web/pages/Authentication/Login.js",["377","378","379","380","381","382","383","384","385","386","387","388","389","390","391","392"],"import React, { useState, useEffect } from 'react';\nimport { Link, useHistory } from \"react-router-dom\";\nimport Logo from \"recruitment-images/h1.png\";\nimport LoginBg from \"recruitment-images/wallpaper.jpg\";\nimport Input from \"recruitment-components/Input/Input.js\";\nimport Button from \"recruitment-components/Button/Button.js\";\nimport Cookies from 'js-cookie';\nimport OtpInput from 'react-otp-input'\nimport ToastUI from \"recruitment-components/ToastUI/ToastUI.js\";\nimport {validateEmail} from \"recruitment-validation\";\nimport { useStoreActions } from 'easy-peasy';\nimport { ERROR_INVALID_EMAIL, ERROR_INVALID_PASSWORD } from 'recruitment-message';\nimport { ToastContainer, toast } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Login = (props) => {\n\n  const history = useHistory();\n  const [email, setEmailAddress] = useState('');\n  const [emailError, setEmailError] = useState(false);\n  const [password, setPassword] = useState('');\n  const [passwordError, setPasswordError] = useState(false);\n  const [disableButton, setDisableButton] = useState(false);\n  const [MFA, setMFA] = useState(false)\n  const [otp, setOtp] = useState(\"\")\n  const loginUser = useStoreActions((actions) => actions.authentication.loginUser);\n  const browserData = useStoreActions((actions) => actions.authentication.browserDATA);\n  const submitOTP = useStoreActions((actions) => actions.authentication.submitOTP);\n  const resendOTP = useStoreActions((actions) => actions.authentication.resendOTP);\n  const [needMFA, setNeedMFA] = useState(true)\n  const [userData, setUserData] = useState(\"\")\n  const secretKeyAdmin = \"JdfvibauJbvVkwgKGY41864GCgvbufsdjvb5fsv4wguvHFFfbu5269\"\n\n  const checkCookie = async () => {\n    const cookiee = Cookies.get('__MFToken')\n    if (cookiee) {\n      if (cookiee === secretKeyAdmin) {\n        await setNeedMFA(false)\n        return\n      }\n    }\n    await setNeedMFA(true)\n  }\n  useEffect(() => {\n    checkCookie()\n  }, [])\n\n  const authenticateUser = async () => {\n    setEmailError(false);\n    setPasswordError(false);\n\n    if (email.trim() == '' || !validateEmail(email)) {\n      setEmailError(true);\n      return false;\n    }\n    if (password.trim() == '') {\n      setPasswordError(true);\n      return false;\n    }\n    \n    setDisableButton(true);\n    await checkCookie()\n    let formData = { email: email, password: password }\n    let response = await loginUser(formData);\n    console.log(response);\n    //setUserData(response)\n    setDisableButton(false);\n    if (response) {\n      browserData(response);\n      history.push('/dashboard');\n    }\n  }\n  const enteredOTP = async () => {\n    if (otp.trim().length !== 6) {\n      toast.error(<ToastUI message={\"Enter Valid OTP\"} type={\"Error\"} />)\n      return false\n    }\n    let host = window.location.hostname;\n    let domain = ''\n    if (host == 'localhost') {\n      domain = 'dev'\n    } else {\n      domain = host\n    }\n    let formData = { otp: otp, domain: domain, user_type: 'admin', id: userData.id }\n    setDisableButton(true);\n    let response = await submitOTP(formData)\n    if (response) {\n      Cookies.set('__MFToken', secretKeyAdmin, { expires: 7, path: '' })\n      browserData(userData)\n      setDisableButton(false);\n      history.push('/dashboard');\n      return\n    }\n    setDisableButton(false);\n    setOtp(\"\")\n  }\n  const Entered = (e) => {\n    if (e.key === 'Enter') {\n      enteredOTP()\n    }\n  }\n  const reesendOTP = async () => {\n    let host = window.location.hostname;\n    let domain = ''\n    if (host == 'localhost') {\n      domain = 'dev'\n    } else {\n      domain = host\n    }\n    let formData = { domain: domain, user_type: 'admin', id: userData.id }\n    await resendOTP(formData)\n  }\n \n  return (\n    <React.Fragment>\n      <a className=\"loginLogo\"><img src={Logo} /></a>\n      {/*<h2 className=\"loginLogo formTitle\">Recruitment AI</h2>*/}\n      <div className=\"container GuestOuter\">\n        <div className=\"row white-bg\">\n          <div className=\"col-md-7 col-lg-7  loginImgLeft\">\n            <img src={LoginBg} />\n          </div>\n            <>\n              <div className=\"col-md-5 col-lg-5  loginForm\">\n                <form>\n                  <h1 className=\"formTitle\">Log In</h1>\n                  <Input\n                    label={\"Email Address\"}\n                    type={'text'}\n                    value={email}\n                    handleInputChange={(e) => setEmailAddress(e.target.value)}\n                    handleInputKeyPress={(event) => (event.key === 'Enter' ? authenticateUser() : '')}\n                    error={emailError}\n                    placeholder={\"Email address\"}\n                    errorMessage={ERROR_INVALID_EMAIL}\n                  />\n                  <Input\n                    label={\"Password\"}\n                    type={'password'}\n                    value={password}\n                    placeholder={\"Password\"}\n                    handleInputChange={(e) => setPassword(e.target.value)}\n                    handleInputKeyPress={(event) => (event.key === 'Enter' ? authenticateUser() : '')}\n                    error={passwordError}\n                    errorMessage={ERROR_INVALID_PASSWORD}\n                  />\n                  <div className=\"formFieldOuter forgotPwd\">\n                    <a onClick={()=>history.push(\"/forgot-password\")}>Forgot Password?</a>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-sm-8\">\n                      <Button type={'theme-button'} extraClasses={`w-100 theme-button ${disableButton ? \"loaderBtn disable\" : \"\"}`} onClick={() => disableButton ? \"\" : authenticateUser()} label={\"Log In\"} disableBtn={disableButton} />\n                    </div>\n                  </div>\n                </form>\n              </div>\n            </>\n        </div>\n      </div>\n      <ToastContainer position=\"bottom-center\" autoClose={3000} hideProgressBar={false} newestOnTop={false} closeOnClick rtl={false} pauseOnVisibilityChange draggable pauseOnHover />\n    </React.Fragment>\n  );\n};\n\nexport default Login;\n","/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/web/pages/Authentication/ResetPassword.js",["393","394","395","396","397","398"],"import React,{useState} from 'react'\nimport {useHistory} from 'react-router-dom'\nimport Logo from \"recruitment-images/h1.png\";\nimport LoginBg from \"recruitment-images/wallpaper.jpg\";\nimport Input from \"recruitment-components/Input/Input.js\";\nimport { useStoreActions } from 'easy-peasy';\nimport {ERROR_INVALID_PASSWORD, ERROR_PASSWORD_NOT_MATCH } from 'recruitment-message';\nimport Button from \"recruitment-components/Button/Button.js\";\nfunction ResetPassword(props) {\n    const history =  useHistory();\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [passwordError, setPasswordError] = useState(false);\n    const [disableButton, setDisableButton] = useState(false);\n    const [confirmPasswordError, setConfirmPasswordError] = useState(false);\n\n    const resetPassword = useStoreActions((actions) => actions.authentication.resetPassword);\n\n    const resetUser = async () => {\n        setPasswordError(false);\n        setConfirmPasswordError(false);\n        if (password.trim() == '') {\n            setPasswordError(true);\n            return false;\n        }\n        if(confirmPassword!==password){\n            setConfirmPasswordError(true);\n            return false;\n        }\n        let host = window.location.hostname;\n        let domain = ''\n        if (host == 'localhost') {\n          domain = 'dps'\n        } else {\n          domain = host\n        }\n        setDisableButton(true);\n        let formData = { domain: domain,forgot_password_token:props.match.params.token,password:password}\n        let response = await resetPassword(formData);\n        setDisableButton(false);\n        if(response) {\n          history.push('/login');\n        }\n      }\n    return (\n    <React.Fragment>\n        <a className=\"loginLogo\"><img src={Logo} /></a>\n        {/*<h2 className=\"loginLogo formTitle\">Recruitment AI</h2>*/}\n        <div className=\"container GuestOuter\">\n        <div className=\"row white-bg\">\n                <div className=\"col-md-7 col-lg-7  loginImgLeft\">\n                    <img src={LoginBg} />\n                </div>\n                <div className=\"col-md-5 col-lg-5  loginForm\">\n                    <form>\n                        <h1 className=\"formTitle\">Set a new password</h1>\n                        <Input\n                            label={\"Password\"}\n                            type={'password'}\n                            value={password}\n                            // placeholder={\"Password\"}\n                            handleInputChange={(e) => setPassword(e.target.value)}\n                            handleInputKeyPress={(event)=>(event.key === 'Enter'|| !disableButton)?resetUser():''}\n                            error={passwordError}\n                            errorMessage={ERROR_INVALID_PASSWORD}\n                        />\n                        <Input\n                            label={\"Confirm Password\"}\n                            type={'password'}\n                            value={confirmPassword}\n                            // placeholder={\"Password\"}\n                            handleInputChange={(e) => setConfirmPassword(e.target.value)}\n                            handleInputKeyPress={(event)=>(event.key === 'Enter'?resetUser():'')}\n                            error={confirmPasswordError}\n                            errorMessage={ERROR_PASSWORD_NOT_MATCH}\n                        />\n                        <div className=\"row\">\n                            <div className=\"col-sm-8\">\n                                <Button type={'theme-button'} extraClasses={`w-100 theme-button ${disableButton ? \"loaderBtn disable\" : \"\"}`} onClick={() => disableButton ? \"\" : resetUser()} label={\"Submit\"} disableBtn={disableButton} />\n                            </div>\n                        </div>\n                        <a className=\"goBack\" onClick={()=>{history.goBack()}}><i className=\"uil uil-arrow-left\"></i> Go back</a>\n                    </form>\n                </div>\n            </div>\n            {/*<div className=\"loginFooter\">\n                <div className=\"container\">\n                    By setting up an account you agree to our <a>Terms of Conditions</a> and <a>Privacy Policy</a>\n                </div>\n            </div>*/}\n        </div>\n    </React.Fragment>\n    )\n}\n\nexport default ResetPassword\n","/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/lib/utils/Validators.js",["399","400"],"export const isNotEmpty = value => {\n  return !(!value || /^\\s*$/.test(value));\n};\n\nexport const validateEmail = mail => {\n  mail = mail.toLowerCase();\n  if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*\\.(\\w{2,4}|capital)$/.test(mail)) {\n    return true;\n  }\n  return false;\n};\n\nexport const matchValues = (first, second) => {\n  return first === second ? true : false;\n};\n\nexport const validateUrl = str => {\n  try {\n    new URL(str);\n  } catch (_) {\n    return false;\n  }\n  return true;\n};\nexport const isValidDate=(dateObject)=>{\n  return new Date(dateObject).toString() !== 'Invalid Date';\n}\nexport const isPhoneNumberValid = (number) =>{\n  var phoneRegExp = /^[0-9]*$/gm\n  if (number.match(phoneRegExp)) {\n    return true\n  }\n  else {\n    return false\n  }\n}","/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/web/components/Overlay/Overlay.js",["401","402","403","404","405","406"],"import React, { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport Button from \"recruitment-components/Button/Button.js\";\n\nconst Overlay = (props) => {\n  const { title, closeOverlay, cancelOverlay, subTitle, submitOverlay, backOverlay } = props;\n  return (\n    <React.Fragment>\n      <div className=\"popupOverlay\">\n        <div className=\"popupWrapper\">\n          <a className=\"cross\" onClick={() => { closeOverlay() }}><i className=\"fa fa-times\" /></a>\n          <h1 className=\"popupTitle\">{title}</h1>\n          {subTitle && <p className=\"popupSubTitle mb-4\">{subTitle}</p> }\n          {props.children}\n          <div className=\"text-center pt-2 d-block\">\n\n            <button className=\"lineBtn\" onClick={() => cancelOverlay()}>{(props.isBackBtn) ? \"Back\" : \"Close\"}</button>\n            <Button\n              type={'blue-button'}\n              extraClasses={`${props.disableBtn ? \"loaderBtn disable ml-2\" : \"ml-2\"}`}\n              onClick={() => props.disableBtn ? \"\" : submitOverlay()}\n              label={(props.isDelete) ? \"Delete\" : props.btnLabel ? props.btnLabel : \"Save\"}\n              disableBtn={props.disableBtn}\n            />\n            {/*<button className=\"blueBtn ml-2\" onClick={() => submitOverlay()}>Save</button>*/}\n          </div>\n          {props.footer && <div className=\"popupFooter text-center mt-4\" onClick={props.onClickFooter}><b><a className=\"hyperLink\">{props.footer}</a></b></div>}\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Overlay;\n","/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/web/components/Input/Input.js",["407","408"],"import React, { useState, useEffect } from 'react';\n\nconst Input = (props) => { \n  \n  return (\n    <React.Fragment>\n      <div className=\"formFieldOuter\">\n        <label className=\"fieldLabel\">{props.label}</label>\n\n        <div className=\"formField\">\n            <input \n              type={props.type} \n              className={props.error ? \"fieldInput error\" : \"fieldInput\"} \n              name={props.name}\n              value={props.value} \n              onChange={(e) => props.handleInputChange(e)}\n              onKeyPress={(e)=>props.handleInputKeyPress?props.handleInputKeyPress(e):()=>{}}\n              onFocus={props.handleInputFocus}\n              onBlur={props.handleInputBlur}\n              placeholder={props.placeholder}\n              disabled={props.disabled}\n              autocomplete={props.autoComplete?props.autoComplete:true}\n            />\n            {props.error && \n                <div className=\"errorMsg\">\n                  <span>!</span> \n                  <label>{props.errorMessage}</label>\n                </div>\n            }\n            {props.children}\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Input;\n","/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/web/components/NoRecord/NoRecord.js",["409","410","411"],"import React, { useState, useEffect } from 'react';\n\nconst Input = (props) => { \n  \n  return (\n    <React.Fragment>\n      <div className=\"flterByYear mt-5\">\n        <img src=\"/images/no-search-result.svg\"/>\n        <h4>{props.message}</h4>\n        <p>{props.subMessage}</p>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Input;\n",["412","413"],"/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/web/components/TableOne/TableOne.js",["414","415","416","417","418","419","420","421"],"import React, { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport DataTable from 'react-data-table-component';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nconst TableOne = (props) => {\n\n  const [showLoader, setShowLoader] = useState(false);\n  const [showOverlay, setShowOverlay] = useState(false);\n\n  return (\n    <React.Fragment>\n      <div className=\"positivly-datatable\">\n        {props.emptyText && props.data.length == 0 ? (\n          <div className=\"highlight-empty-text\">{props.emptyText}</div>\n        ) : (\n          <DataTable\n            responsive\n            columns={props.columns}\n            data={props.data}\n            noHeader={true}\n            pagination={true}\n            onChangePage={props.onChangePage}\n            paginationPerPage={props.perPage}\n            selectableRows={props.selectableRows}\n            selectableRowsComponent={props.Checkbox}\n            onSelectedRowsChange={props.onSelectedRowsChange}\n            expandableRowExpanded={row => row.defaultExpanded}\n            expandableRows={props.expandableRows ? props.expandableRows : false}\n            expandableRowsComponent={props.expandableRows ? props.expandableRowsComponent : null}\n          />\n        )}\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default TableOne;\n","/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/web/components/Button/Button.js",["422","423","424","425","426","427"],"import React, { useState, useEffect } from 'react';\n\nconst Button = (props) => {  \n\n  const [btnClass, setBtnClass] = useState(\"blueBtn\");\n  const [loadingMsg, setLoadingMsg] = useState(\"Processing...\");\n\n  useEffect(() => {\n    let className = '';\n    if(props.type == 'line-button') {\n      className += 'lineBtn ';\n    } else if(props.type == 'blue-button') {\n      className += 'blueBtn ';\n    } else if(props.type == 'theme-button') {\n      className += 'themeBtn ';\n    } else if(props.type == 'top-button') {\n      className += 'topButton ';\n    }\n\n    if(props.extraClasses) {\n      className = className+' '+props.extraClasses  \n    }\n    setBtnClass(className)\n  }, [props])\n\n  return (\n    <React.Fragment>\n      <button type=\"button\" className={btnClass} onClick={() =>  props.onClick()}>\n        {props.label}\n        {props.disableBtn && \n          <div className=\"spinner-border \" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n          </div>\n        }\n      </button>\n    </React.Fragment>\n  );\n};\n\nexport default Button;\n","/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/web/components/CustomMobile/CustomMobile.js",["428","429","430"],"import React, { useState, useEffect } from 'react';\nimport IntlTelInput from 'react-intl-tel-input';\nimport 'react-intl-tel-input/dist/main.css';\n\n\nconst CustomMobile = (props) => { \n\n  return (\n    <React.Fragment>\n      <div className=\"formFieldOuter\">\n        <label className=\"fieldLabel\">{props.label}</label>\n\n        <div className=\"formField\">\n            {/* <IntlTelInput\n              containerClassName=\"intl-tel-input\"\n              value={props.value}\n              inputClassName={props.error ? \"fieldInput error\" : \"fieldInput\"} \n              onPhoneNumberChange={(a,b,c,d) => props.handlePhoneChange(a,b,c,d)}\n              onPhoneNumberBlur={(a,b,c,d) => props.handlePhoneChange(a,b,c,d)}\n            />         */}\n            <input \n              className={props.error ? \"fieldInput error\" : \"fieldInput\"} \n              name={props.name} \n              type=\"tel\" value={props.value} \n              onChange={(event)=>{props.handlePhoneChange(event)}}\n              onKeyPress={(e)=>props.handleInputKeyPress?props.handleInputKeyPress(e):()=>{}}\n              placeholder=\"Enter Phone Number\"\n              />\n              \n            {props.error && \n                <div className=\"errorMsg\">\n                  <span>!</span> \n                  <label>{props.errorMessage}</label>\n                </div>\n            }\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default CustomMobile;\n","/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/web/components/Textarea/Textarea.js",["431","432"],"import React, { useState, useEffect } from 'react';\n\nconst Textarea = (props) => { \n  \n  return (\n    <React.Fragment>\n      <div className=\"formFieldOuter\">\n        <label className=\"fieldLabel\">{props.label}</label>\n\n        <div className=\"formField\">\n            <textarea  \n              type={props.type} \n              className={props.error ? \"fieldInput textarea error\" : \"fieldInput textarea\"} \n              value={props.value} \n              onChange={(e) => props.handleInputChange(e)}\n              placeholder={props.placeholder}\n            />\n            {props.error && \n                <div className=\"errorMsg\">\n                  <span>!</span> \n                  <label>{props.errorMessage}</label>\n                </div>\n            }\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Textarea;\n","/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/web/components/CustomLoader/CustomLoader.js",["433"],"import React from \"react\"\n//import ContentLoader from \"react-content-loader\"\nimport ContentLoader from \"recruitment-images/content-loader.svg\";\nconst CustomLoader = (props) => (\n  <div className=\"loader\">\n    <div className=\"spinner-border text-primary\" role=\"status\">\n      <span className=\"sr-only\">Loading...</span>\n    </div>\n    <p>Loading...</p>\n  </div>\n)\n\nexport default CustomLoader\n\n","/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/web/components/CustomDatepicker/CustomDatepicker.js",[],"/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/web/components/ToastUI/ToastUI.js",["434","435","436","437","438","439"],"import React, { useState, useEffect } from 'react';\n\nconst ToastUI = (props) => { \n  \n  return (\n    <React.Fragment>\n      <div className=\"successMessage\">\n        <div className={props.type == \"Success\" ? \"successIcon\" : \"errorIcon\"}>\n        {props.type == \"Success\" ? <i className=\"fa fa-check\" /> : <i className=\"fa fa-times\" />}\n        </div>\n        <h5>{props.type}</h5>\n        <p>{props.message}</p>\n        <a className=\"alertCross\"><img src=\"/images/cross1.svg\" /></a>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default ToastUI;\n","/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/web/components/SingleSelect/SingleSelect.js",["440","441","442","443","444"],"import React, { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\n\nconst SingleSelect = (props) => {\n  \n  const [showOptions, setShowOptions] = useState(false); \n  const [showOverlay, setShowOverlay] = useState(false);\n\n  const [label, setLabel] = useState(props.placeholder);\n  useEffect(() => {\n    if(props.value) {\n      let selectedValue = props.options.find(e => e.id.toString().toUpperCase() === props.value.toString().toUpperCase());\n      if(selectedValue){\n        setLabel(selectedValue.name);\n      }\n    }\n    else{\n      setLabel(props.placeholder);\n    }\n  }, [props.value,props.options])\n\n  const changeOption = (obj) => {\n    setShowOptions(false);\n    setLabel(obj.name);\n    props.changeOption(obj.id);\n  } \n\n  return (\n    <React.Fragment>\n      {(props.label) && <label className=\"fieldLabel\">{props.label}</label> }\n      <div className={`formField ${props.extraClasses}`}>\n        <button  className=\"fieldInput d-flex\" style={{alignItems:\"center\"}} onClick={() => setShowOptions(!showOptions)} onBlur={()=>{setShowOptions(false)}}><span>{label}</span><i className={showOptions ? \"uil uil-angle-up arrow\" : \"uil uil-angle-down arrow\"} />\n        {showOptions && props.options.length > 0 && \n          <div className={`customDropdown max-h-150 text-left ${props.DropUpClass}`} style={{fontFamily: 'neue_helveticaroman'}}>\n            {props.options && props.options.map((obj, idx) => {\n                return (<label key={idx} onClick={() => changeOption(obj)}> {obj.name}</label>)\n            })}\n          </div>\n        }\n        {showOptions && props.options.length == 0 &&\n          <div className=\"customDropdown max-h-150\"> \n            <label> No {props.placeholder}</label>\n          </div>\n        }\n        </button>\n        {/* <div  className=\"fieldInput\" onClick={() => setShowOptions(!showOptions)}>{label}<i className={showOptions ? \"uil uil-angle-up arrow\" : \"uil uil-angle-down arrow\"} /></div> */}\n        {props.error && \n                <div className=\"errorMsg\">\n                  <span>!</span> \n                  <label>{props.errorMessage}</label>\n                </div>\n        }\n        \n        {/* {showOptions && props.options.length > 0 && \n          <div className=\"customDropdown max-h-150\">\n            {props.options && props.options.map((obj, idx) => {\n                return (<label key={idx} onClick={() => changeOption(obj)}> {obj.name}</label>)\n            })}\n          </div>\n        }\n        {showOptions && props.options.length == 0 &&\n          <div className=\"customDropdown max-h-150\"> \n            <label> No data</label>\n          </div>\n        } */}\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default SingleSelect;\n","/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/web/components/Timepicker/Timepicker.js",["445","446","447","448"],"import React, { useState, useEffect } from 'react';\nimport DatePicker from \"react-datepicker\";\nimport moment from 'moment';\nimport { TimePicker } from 'antd';\nimport 'antd/dist/antd.css';\n\n\nconst Timepicker = (props) => { \n  const [startDate, setStartDate] = useState(props.value);\n  const format = 'h:mm a';\n  return (\n    <React.Fragment>\n      <TimePicker \n        className={props.className}\n        format={format}\n        value={moment(props.value, format)} \n        onChange={props.slotChange}\n        defaultValue={moment('13:30:56', format)}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default Timepicker;\n","/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/web/components/ToggleSwitch/ToggleSwitch.js",["449"],"import React, { Component } from 'react';\n\nconst ToggleSwitch =(props)=> {\n    return (\n      <div className=\"toggle-switch small-switch\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle-switch-checkbox\"\n          name={props.Name}\n          id={props.Name}\n          checked={props.checked}\n          onChange={e=> props.onChange(e.target.checked)}\n        />\n        <label className=\"toggle-switch-label\" htmlFor={props.Name}>\n          <span className=\"toggle-switch-inner\" />\n          <span className=\"toggle-switch-switch\" />\n        </label>\n      </div>\n    );\n  }\n\n\nexport default ToggleSwitch;","/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/web/components/Sidebar/Sidebar.js",["450","451","452","453","454","455","456","457","458","459","460","461","462","463","464","465","466","467","468","469","470","471","472","473","474"],"import React, { useState, useEffect } from 'react';\nimport { useStoreActions, useStoreState } from 'easy-peasy';\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\nimport { logoutCompletely } from 'recruitment-utils/Service.js';\nimport Logo from \"recruitment-images/h1.png\";\nimport smallLogo from \"recruitment-images/iso3.png\";\nimport UsersImg from \"recruitment-images/user.jpg\";\nimport graphImg from \"recruitment-images/graph-bar.svg\";\nimport StudentsImg from \"recruitment-images/students.svg\";\nimport TeacherImg from \"recruitment-images/teachers.svg\";\nimport SubjectsImg from \"recruitment-images/subjects.svg\";\nimport TimetableImg from \"recruitment-images/timetable.svg\";\nimport SchoolImg from \"recruitment-images/school.svg\";\nimport MsgImg from \"recruitment-images/messages.svg\";\nimport LeftArrowImg from \"recruitment-images/left_arrow.svg\";\nimport RightArrowImg from \"recruitment-images/right_arrow.svg\";\n\nconst Sidebar = (props) => {\n\n  const history = useHistory();\n  const location = useLocation();\n  const logoutUser = useStoreActions((actions) => actions.authentication.logoutUser);\n  const [showSubmenu, setShowSubMenu] = useState(false)\n  const [hideLeftSection, setHideLeftSection] = useState(false)\n  const [menu, setMenu] = useState('')\n  const [loggedInUser, setLoggedInUser] = useState({})\n  const [showProfileMenu, setShowProfileMenu] = useState(false);\n  const [profileImg, setProfileImg] = useState(\"\");\n  const setUserProfile = useStoreActions((actions) => actions.admin.setUserProfile);\n  const getUserProfile = useStoreActions((actions) => actions.admin.getUserProfile);\n  const userProfile = useStoreState((state) => state.admin.userProfile);\n  const [disableLogout, setDisableLogout] = useState(false);\n\n  useEffect(() => {\n    if (localStorage.getItem('leftSection')) {\n      props.handleSidebar(localStorage.getItem('leftSection') == 'true' ? true : false);\n      setHideLeftSection(localStorage.getItem('leftSection') == 'true' ? true : false);\n    }\n\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('leftSection', hideLeftSection);\n  }, [hideLeftSection])\n\n  useEffect(() => {\n    let path = location.pathname.replace('/', '');\n    setMenu(path);\n    let submenu = ['forms', 'years', 'students', 'teachers'];\n    if (submenu.indexOf(path) > -1) {\n      setShowSubMenu(true);\n    }\n    let user = JSON.parse(localStorage.getItem('loggedInUser'));\n    if(user) {\n      //let name = user.firstname + \" \" + user.lastname;\n      setLoggedInUser(user.user);\n      setUserProfile(user.user);\n      getUserProfile({email: user.user.email});      \n    } else {\n      history.push('/login');\n    }\n  }, [])\n/*  useEffect(() => {\n    if (userProfile) {\n      let name = userProfile.firstname + \" \" + userProfile.lastname;\n      setLoggedInUser(name);\n      //setProfileImg(userProfile.image_url);\n    }\n  }, [userProfile])\n*/\n  const logMeOut = async () => {\n    setDisableLogout(true);\n    let response = await logoutUser({email:userProfile.email});\n    if (response) {\n      logoutCompletely();\n      history.push('/login');\n    }  else {\n      logoutCompletely();\n      history.push('/login');\n    }\n    setDisableLogout(false)\n  }\n\n  const toggleMenu = () => {\n    setShowSubMenu(!showSubmenu);\n  }\n  const haldleLeftSelection = () => {\n    props.handleSidebar(!hideLeftSection)\n    setHideLeftSection(!hideLeftSection)\n  }\n  return (\n    <React.Fragment>\n      <div className={hideLeftSection ? \"leftNevbar hideLeftSection\" : \"leftNevbar\"}>{/*hideLeftSection*/}\n        {!hideLeftSection && <a className=\"minimizeSection\" onClick={() => haldleLeftSelection()}><img src={RightArrowImg} /></a>}\n        {hideLeftSection && <a className=\"maximizeSection\" onClick={() => haldleLeftSelection()}><img src={LeftArrowImg} /></a>}\n        <span className=\"leftLogo large-logo\"><Link to={`/dashboard`}><img src={Logo} /></Link></span>\n        <span className=\"leftLogo small-logo\"><Link to={`/dashboard`}><img src={smallLogo} /></Link></span>\n        {/* <div className=\"userSection\">\n            <span className=\"userPic\" style={{background: 'url('+UsersImg+')'}} />\n            <h5><div className=\"text-ellipsis\">{loggedInUser}</div></h5>\n            <p>Admin</p>\n            <i className=\"uil uil-angle-down\" />\n            <div className=\"customDropdown\">\n              <Link to=\"/profile\">My profile</Link>\n              <Link to=\"/school-terms\">School information</Link>\n              <div className=\"border-top\" />\n              <a onClick={() => logMeOut()}>Log out</a>\n            </div>\n          </div> */}\n        <div className=\"userSection\">\n          <button className=\"userSectionButton\" onClick={() => { setShowProfileMenu(!showProfileMenu) }} onBlur={() => { setShowProfileMenu(false) }}>\n            <span className=\"userPic\" style={{ background: `url(${profileImg ? 'data:image/svg+xml;base64,' + btoa(unescape(encodeURIComponent(profileImg))) : UsersImg})` }} />\n            <h5><div className=\"text-ellipsis\">{loggedInUser.firstname ? loggedInUser.firstname + \" \" + loggedInUser.lastname : \"\"}</div></h5>\n            <p>{loggedInUser.username}</p>\n            <i className={showProfileMenu? \"uil uil-angle-up\":\"uil uil-angle-down\"} />\n          </button>\n          <div className={showProfileMenu ? \"customDropdown d-block\" : \"customDropdown\"}>\n            <Link to=\"/profile\">My Profile</Link>\n            <div className=\"border-top\" />\n              <a disabled={disableLogout} className={disableLogout ? \"disable\" : \"\"} onClick={() => logMeOut()}>\n                {(disableLogout ? \n                <>\n                  <div className=\"spinner-border\" style={{width: \"1rem\", height: \"1rem\", marginRight: \"5px\"}} role=\"status\">\n                    <span className=\"sr-only\">Loading...</span>\n                   </div>\n                    Logging Out..\n                </>\n                : \"Log Out\")}\n              </a> \n          </div>\n        </div>\n        <ul className=\"customNav\">\n          <li><Link to={'/dashboard'} className={menu == 'dashboard' ? \"active\" : \"\"}><img src={graphImg} /><span>Dashboard</span></Link></li>\n          {/*<li><a onClick={() => toggleMenu()}><img src={SchoolImg} /><span>School</span></a>\n            <ul style={{ display: (showSubmenu) ? \"block\" : \"none\" }}>\n              <li><Link className={menu == 'years' ? \"active\" : \"\"} to={'/years'}>Years</Link></li>\n              <li><Link className={menu == 'forms' ? \"active\" : \"\"} to={'/forms'}>Forms</Link></li>\n              <li><Link className={menu == 'students' ? \"active\" : \"\"} to={'/students'}>Students</Link></li>\n              <li><Link to={'/teachers'} className={menu == 'teachers' ? \"active\" : \"\"}>Teachers</Link></li>\n            </ul>\n          </li>*/}\n          <li><Link className={menu == 'clients' ? \"active\" : \"\"} to={'/clients'}><img src={SubjectsImg} /><span>Clients</span></Link></li>\n          <li><Link className={menu == 'time-table' ? \"active\" : \"\"} to={'/time-table'}><img src={TimetableImg} /><span>Candidates</span></Link></li>\n          <li ><a className={menu == 'messages' ? \"active\" : \"\"}><img src={MsgImg} /><span>Report Templates</span></a></li>\n        </ul>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Sidebar;\n","/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/web/components/TimeTableField/TimeTableField.js",["475","476","477","478","479","480"],"import React, { useState } from 'react'\nimport OutsideClickHandler from 'react-outside-click-handler';\nconst TimetableFiled = ({ subjects, onClickSubjectName, schedulesData, oncheckGroup, day, id }) => {\n  const [subjectMenu, setSubjectMenu] = useState(false);\n  const [groupMenu, setGroupMenu] = useState(false);\n  return (\n    <OutsideClickHandler\n      onOutsideClick={() => { setSubjectMenu(false); setGroupMenu(false) }}\n    >\n      <div className=\"formField\" >\n        <div className=\"timetableField d-flex\" style={{ width: \"100%\", backgroundColor: \"transparent\", border: \"none\" }} onClick={() => { setSubjectMenu(!subjectMenu); setGroupMenu(false) }}>\n          {!schedulesData.subjects.name &&\n            <div className=\"typeSubject\"><span className=\"subjectInput\">Select a subject</span></div>}\n          {schedulesData.subjects.name &&\n            <React.Fragment>\n              <div className=\"subjectGroup\" style={{ borderLeftColor: '#c6ecf6!important' }}>\n                <div className=\"left_border\">\n                  {schedulesData.subject_groups && schedulesData.subject_groups.map((item) => {\n                    return <div style={{ width: '6px', height: `${schedulesData.subject_groups.length > 0 ? 72 / schedulesData.subject_groups.length : 72}px`, backgroundColor: `${item.color}` }}></div>\n                  })}\n                </div>\n                <span>{schedulesData.subjects.name}</span>\n                <p className=\"group-button\">\n                  {schedulesData.subject_groups && schedulesData.subject_groups.map((item, index) => {\n                    return <React.Fragment>{schedulesData.subject_groups.length - 1 === index ? `${item.name}` : `${item.name},`}</React.Fragment>\n                  })}\n                </p>\n                {schedulesData.slot && <p className=\"group-button\"><b>{`${schedulesData.slot.time_start} - ${schedulesData.slot.time_end}`}</b></p>}\n              </div>\n            </React.Fragment>\n          }\n          {subjectMenu && !groupMenu && <div className={\"customDropdown max-h-150\"}>\n            {subjects && (subjects.data.length !== 0) ? subjects.data.map((suggestion, index) => {\n              return <a onClick={(e) => { e.stopPropagation(); setGroupMenu(true); onClickSubjectName(e, day, schedulesData.slot.time_start, suggestion, schedulesData.slot.time_end) }}>{suggestion.name}</a>\n            }) : <a onClick={(e) => { }}>No Subject Found</a>\n            }\n          </div>}\n          {subjectMenu && groupMenu && <div className={\"customDropdown max-h-150 text-left\"}>\n\n            {subjects && subjects.data.map((suggestion, index) => {\n              if (suggestion.id === schedulesData.subjects.id) {\n                if (suggestion.subject_groups.length !== 0) {\n                  return suggestion.subject_groups.map((group, index) => {\n                    return (<a onClick={(e) => { e.stopPropagation() }}>\n                      <input key={index} type=\"checkbox\" id={index} checked={schedulesData.subject_groups ? schedulesData.subject_groups.some((obj_check) => {\n                        return obj_check.id == group.id;\n                      }) : false} onChange={(e) => { e.stopPropagation(); oncheckGroup(e, day, schedulesData.slot.time_start, group, schedulesData.slot.time_end) }} />\n                      <label htmlFor={index} style={{display: \"inline-block\"}}><span>{group.name}</span></label>\n                    </a>)\n                  })\n                }\n                else {\n                  return (<a onClick={(e) => { }} ><span className=\"pl-2\">No Group Found</span></a>)\n                }\n              }\n            })}\n          </div>}\n        </div>\n      </div>\n    </OutsideClickHandler>\n  )\n}\nexport default TimetableFiled;","/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/web/components/TableTwo/TableTwo.js",["481","482","483","484","485","486","487","488","489","490","491","492","493","494","495","496","497","498","499","500","501","502"],"import React, { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport TableOneRow from \"../TableOneRow/TableOneRow.js\";\nimport { useStoreActions, useStoreState } from 'easy-peasy';\nimport CustomLoader from \"recruitment-components/CustomLoader/CustomLoader.js\";\n\nconst TableTwo = (props) => {\n\n  const getStudents = useStoreActions((actions) => actions.admin.getStudents);\n  const [showLoader, setShowLoader] = useState(false);\n  const [showOverlay, setShowOverlay] = useState(false);\n  const [selectedRow, setSelectedRow] = useState([]);\n  const [click,setClick] = useState(false);\n  const [showFullPageLoader, setShowFullPageLoader] = useState(false);\n\n  useEffect(()=>{\n    setSelectedRow(props.selectedRow);\n  },[props])\n  const selectAllData = (event) => {\n    let selectedId = [];\n    if (event.target.checked) {\n      props.rows.map((item) => {\n        selectedId.push(item.id);\n      })\n    }\n    else {\n      selectedId = [];\n    }\n    setSelectedRow(selectedId);\n    props.onSelect(selectedId);\n  }\n  const onSelectSingleRow = (event, id) => {\n    let TempRow = [...selectedRow];\n    if (!event.target.checked) {\n      TempRow = TempRow.filter(rowId => id != rowId);\n    }\n    else if(event.target.checked && !selectedRow.includes(id)){\n      TempRow.push(id);\n    }\n    setSelectedRow(TempRow);\n    props.onSelect(TempRow);\n  }\n\n  const htmlEntities = (str) => {\n    if(str == \"&laquo; Previous\")\n      return \"Previous\";\n    else if(str == \"Next &raquo;\")\n      return \"Next\";\n    else\n      return str;\n  }\n\n  const getPageData = async(url, label) => {\n    if(url !== null){\n      setShowFullPageLoader(true)\n      const urlParams = new URLSearchParams(url);\n      let pageName = '';\n      for (const [key, value] of urlParams) {\n        pageName = value;\n      }\n      let formData = { params: { page: pageName, pagesize: 20, q: '', year_id: props.yearId, form_id: props.formId } }\n      await getStudents(formData);\n      setShowFullPageLoader(false)\n    }\n  }\n\n\n  return (\n    <React.Fragment>\n      {showFullPageLoader && <CustomLoader/>}\n      {props.rows && props.rows.length > 0 &&\n        <div className=\"table-responsive\">\n          <table className=\"table table-borderless fullTable\">\n            <thead>\n              <tr>\n                <th className=\"checkTd\"><input type=\"checkbox\" onChange={(event) => {event.stopPropagation();selectAllData(event)}} checked={selectedRow.length === props.rows.length} /></th>\n                {props.columnsHeader && props.columnsHeader.length > 0 &&\n                  props.columnsHeader.map((obj, idx) => {\n                    return (\n                      <th className={(obj == \"Select all\") ? \"pl-0\" : \"\"}>{obj}</th>\n                    )\n                  })\n                }\n              </tr>\n            </thead>\n            <tbody>\n              {props.rows && props.rows.length > 0 && props.rows.map((obj, idx) => {\n                return (\n\n                  <tr className=\"formRowAction\" key={idx} onClick={() => props.editAction ? props.editAction(obj.id) : \"\"}>\n                    {props.columnsToShow && props.columnsToShow.length > 0 && props.columnsToShow.map((objInner, idxInner) => {\n                      return (\n                        <React.Fragment>\n                          {idxInner === 0 ? <React.Fragment>\n                            <td scope=\"row\" onClick={(event)=>{event.stopPropagation()}}><input type=\"checkbox\" onChange={(event) => {onSelectSingleRow(event, obj.id) }} checked={selectedRow.includes(obj.id)} /></td>\n                            <td className=\"tableClientImg\">\n                            {obj['image_url'] && obj['image_url'] != ''?<img id=\"user-profile-avatar\" src={ `data:image/svg+xml;base64,${btoa(unescape(encodeURIComponent(obj['image_url'])))}` } />:<span style={{ background: 'url(\"/images/user.jpg\")' }} />}\n                              \n                              {objInner===\"first_name\"?obj[objInner]+ \" \" +obj['last_name'] :obj[objInner]}</td>\n                          </React.Fragment>:<td>{obj[objInner]}</td>}\n                        </React.Fragment>\n                      )\n                    })\n                    }\n                    <td className=\"position-relative\">\n                      <div className=\"formRowRightAction\">\n                        {props.showActions && props.actions.indexOf('edit') > -1 &&\n                          <a className=\"addField\" onClick={() => props.editAction(obj.id)}><i className=\"fa fa-pen fa-w-16\"></i></a>\n                        }\n                        {props.showActions && props.actions.indexOf('delete') > -1 &&\n                          <a className=\"addField ml-2\" onClick={() => props.deleteAction(obj.id)}><i className=\"fa fa-trash fa-w-16\"></i></a>\n                        }\n                      </div>\n                    </td>\n                  </tr>\n                )\n              })}\n            </tbody>\n          </table>\n          {props.fullData && props.rows && props.rows.length < props.fullData.total && \n          <div className=\"row w-100\">\n            <div className=\"col-lg-12 paginationBlock\">\n              <ul className=\"pagination text-center justify-content-center\">\n\n                {props.fullData && props.fullData.links  && (props.fullData.links).map((obj, idx) => {\n                  return <li className={`page-item ${(obj.active == true) ? 'active': ''} ${(obj.url == null) ? 'disable': ''} `}><a disabled={obj.url == null?true:false} className=\"page-link\" href=\"#\" onClick={()=>getPageData(obj.url, obj.label)} >{htmlEntities(obj.label)}</a></li>\n                }) }\n              </ul>\n            </div>\n          </div>\n          }\n          <br/>\n        </div>\n      }\n    </React.Fragment>\n  );\n};\n\nexport default TableTwo;\n","/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/web/components/MultiSelectDropDown/MultiSelectDropDown.js",["503","504"],"import React, { useState } from 'react'\nimport { Multiselect } from 'multiselect-react-dropdown'\n\nfunction MultiSelectDropDown(props) {\n    const [selectedValue, setSelectedValue] = useState([]);\n    return (\n        <div className=\"formField\">\n            <Multiselect\n                options={props.options} // Options to display in the dropdown\n                onSelect={props.onSelect} // Function will trigger on select event\n                // onRemove={this.onRemove} // Function will trigger on remove event\n                onRemove={props.onSelect}\n                showCheckbox={true}\n                displayValue=\"full_name\"\n                closeOnSelect={false}\n                loading={props.loading}\n            />\n        </div>\n    )\n}\n\nexport default MultiSelectDropDown\n","/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/api/AdminApi.js",["505","506","507","508","509","510","511","512","513","514"],"import axios from 'axios';\nimport { getToken, setToken, handleInvalidToken } from 'recruitment-utils/Service.js';\nconst AdminInstance = axios.create();\nAdminInstance.interceptors.response.use(function (response) {\n\tif (response.headers) {\n\t\t//localStorage.setItem('api_token', response.headers.api_token);\n\t}\n\tlet msg = response.data.message;\n\t// console.log(msg)\n\tif (msg == 'Unauthenticated' || msg == 'session_timeout' || msg == 'server_error' || msg == 'token_not_found') {\n\t\thandleInvalidToken();\n\t}\n\treturn response;\n}, function (error) {\n\tif (!error.response) {\n\t\treturn { data: { data: \"\", message: \"server_error\", status: 500 } }\n\t} else {\n\t\tif (error.response.status == 500) {\n\t\t\treturn { data: { data: \"\", message: \"server_error\", status: 500 } }\n\t\t}\n\t\tlet msg = error.response.data.message;\n\t\tconsole.log(msg)\n\t\tif (msg == 'Unauthenticated' || msg == 'session_timeout' || msg == 'server_error' || msg == 'token_not_found') {\n\t\t\thandleInvalidToken();\n\t\t}\n\n\t\treturn Promise.reject(error);\n\t}\n});\n\nAdminInstance.interceptors.request.use(function (config) {\n\tconst token = getToken();\n\tif (token) {\n\t\tconfig.headers.Authorization = token;\n\t}\n\n\treturn config;\n});\n\nconst apiUrl = process.env.REACT_APP_RECRUITMENT_API;\n\nexport const getYears = async (formData) => {\n\ttry {\n\t\tlet response = await AdminInstance.get(apiUrl + '/admin/get-years', formData);\n\t\treturn response.data;\n\t} catch (error) {\n\t\treturn error.response.data;\n\t}\n};\nexport const getAllYears = async (formData) => {\n\ttry {\n\t\tlet response = await AdminInstance.get(apiUrl + '/common/get-all-years', formData);\n\t\treturn response.data;\n\t} catch (error) {\n\t\treturn error.response.data;\n\t}\n};\nexport const changePassword = async (formData) => {\n\ttry {\n\t\tlet response = await AdminInstance.put(apiUrl + '/admin/change-password', formData);\n\t\treturn response.data;\n\t} catch (error) {\n\t\treturn error.response.data;\n\t}\n}\nexport const createYear = async (formData) => {\n\ttry {\n\t\tlet response = await AdminInstance.post(apiUrl + '/admin/create-year', formData);\n\t\treturn response.data;\n\t} catch (error) {\n\t\treturn error.response.data;\n\t}\n};\nexport const deleteYear = async (formData) => {\n\ttry {\n\t\tlet response = await AdminInstance.post(apiUrl + '/admin/delete-year', formData);\n\t\treturn response.data;\n\t} catch (error) {\n\t\treturn error.response.data;\n\t}\n};\n\nexport const updateYear = async (formData) => {\n\ttry {\n\t\tlet response = await AdminInstance.put(apiUrl + '/admin/update-year', formData);\n\t\treturn response.data;\n\t} catch (error) {\n\t\treturn error.response.data;\n\t}\n};\n\nexport const getForms = async (formData) => {\n\ttry {\n\t\tlet response = await AdminInstance.get(apiUrl + '/admin/get-forms', formData);\n\t\treturn response.data;\n\t} catch (error) {\n\t\treturn error.response.data;\n\t}\n};\nexport const getAllForms = async (id) => {\n\ttry {\n\t\tlet response = await AdminInstance.get(apiUrl + '/common/get-forms-by-year/' + id,);\n\t\treturn response.data;\n\t} catch (error) {\n\t\treturn error.response.data;\n\t}\n};\nexport const createForm = async (formData) => {\n\ttry {\n\t\tlet response = await AdminInstance.post(apiUrl + '/admin/create-form', formData);\n\t\treturn response.data;\n\t} catch (error) {\n\t\treturn error.response.data;\n\t}\n};\n\nexport const deleteForm = async (formData) => {\n\ttry {\n\t\tlet response = await AdminInstance.post(apiUrl + '/admin/delete-form', formData);\n\t\treturn response.data;\n\t} catch (error) {\n\t\treturn error.response.data;\n\t}\n};\n\nexport const updateForm = async (formData) => {\n\ttry {\n\t\tlet response = await AdminInstance.put(apiUrl + '/admin/update-form', formData);\n\t\treturn response.data;\n\t} catch (error) {\n\t\treturn error.response.data;\n\t}\n};\n\nexport const getSubjects = async (formData) => {\n\ttry {\n\t\tlet response = await AdminInstance.get(apiUrl + '/admin/get-subjects', formData);\n\t\treturn response.data;\n\t} catch (error) {\n\t\treturn error.response.data;\n\t}\n};\nexport const createSubject = async (formData) => {\n\ttry {\n\t\tlet response = await AdminInstance.post(apiUrl + '/admin/create-subject', formData);\n\t\treturn response.data;\n\t} catch (error) {\n\t\treturn error.response.data;\n\t}\n};\n\nexport const updateSubject = async (formData) => {\n\ttry {\n\t\tlet response = await AdminInstance.put(apiUrl + '/admin/update-subject', formData);\n\t\treturn response.data;\n\t} catch (error) {\n\t\treturn error.response.data;\n\t}\n};\n\nexport const deleteSubject = async (formData) => {\n\ttry {\n\t\tlet response = await AdminInstance.post(apiUrl + '/admin/delete-subject', formData);\n\t\treturn response.data;\n\t} catch (error) {\n\t\treturn error.response.data;\n\t}\n};\n\nexport const saveSubjectImage = async (formData) => {\n\ttry {\n\t\tlet response = await AdminInstance.post(apiUrl + '/common/upload-media', formData);\n\t\treturn response.data;\n\t} catch (error) {\n\t\treturn error.response.data;\n\t}\n};\n\nexport const getGroup = async (formData) => {\n\ttry {\n\t\tlet response = await AdminInstance.get(apiUrl + '/admin/get-students-per-group', formData);\n\t\tconsole.log(\"response.data\", response.data)\n\t\treturn response.data;\n\t} catch (error) {\n\t\treturn error.response.data;\n\t}\n};\n\nexport const getGroups = async (formData) => {\n\ttry {\n\t\tlet response = await AdminInstance.get(apiUrl + '/admin/get-students-per-group', formData);\n\t\treturn response.data;\n\t} catch (error) {\n\t\treturn error.response.data;\n\t}\n};\nexport const createGroup = async (formData) => {\n\ttry {\n\t\tlet response = await AdminInstance.post(apiUrl + '/admin/create-group', formData);\n\t\treturn response.data;\n\t} catch (error) {\n\t\treturn error.response.data;\n\t}\n};\nexport const updateGroup = async (formData) => {\n\ttry {\n\t\tlet response = await AdminInstance.put(apiUrl + '/admin/update-group', formData);\n\t\treturn response.data;\n\t} catch (error) {\n\t\treturn error.response.data;\n\t}\n};\nexport const deleteGroup = async (formData) => {\n\ttry {\n\t\tlet response = await AdminInstance.post(apiUrl + '/admin/delete-group', formData);\n\t\treturn response.data;\n\t} catch (error) {\n\t\treturn error.response.data;\n\t}\n};\nexport const assignClient = async (formData) => {\n\ttry {\n\t\tlet response = await AdminInstance.post(apiUrl + '/admin/assign-client', formData);\n\t\treturn response.data;\n\t} catch (error) {\n\t\treturn error.response.data;\n\t}\n};\nexport const createClient = async (formData) => {\n\ttry {\n\t\tlet response = await AdminInstance.post(apiUrl + '/admin/create-client', formData);\n\t\treturn response.data;\n\t} catch (error) {\n\t\treturn error.response.data;\n\t}\n};\nexport const getClients = async (formData) => {\n\ttry {\n\t\tlet response = await AdminInstance.get(apiUrl + '/admin/get-clients', formData);\n\t\treturn response.data;\n\t} catch (error) {\n\t\treturn error.response.data;\n\t}\n};\n\nexport const deleteClient = async (formData) => {\n\ttry {\n\t\tlet response = await AdminInstance.post(apiUrl + '/admin/delete-client', formData);\n\t\treturn response.data;\n\t} catch (error) {\n\t\treturn error.response.data;\n\t}\n};\n\nexport const getClient = async (formData) => {\n\ttry {\n\t\tlet response = await AdminInstance.get(apiUrl + '/admin/get-client/' + formData.id, formData);\n\t\treturn response.data;\n\t} catch (error) {\n\t\treturn error.response.data;\n\t}\n};\n\nexport const updateClient = async (formData) => {\n\ttry {\n\t\tlet response = await AdminInstance.put(apiUrl + '/admin/update-client', formData);\n\t\treturn response.data;\n\t} catch (error) {\n\t\treturn error.response.data;\n\t}\n};\n\nexport const getStudents = async (formData) => {\n\ttry {\n\t\tlet response = await AdminInstance.get(apiUrl + '/admin/get-students', formData);\n\t\treturn response.data;\n\t} catch (error) {\n\t\treturn error.response.data;\n\t}\n};\n\nexport const getStudent = async (formData) => {\n\ttry {\n\t\tlet response = await AdminInstance.get(apiUrl + '/admin/get-student/' + formData.id, formData);\n\t\treturn response.data;\n\t} catch (error) {\n\t\treturn error.response.data;\n\t}\n};\n\nexport const createStudent = async (formData) => {\n\ttry {\n\t\tlet response = await AdminInstance.post(apiUrl + '/admin/create-student', formData);\n\t\treturn response.data;\n\t} catch (error) {\n\t\treturn error.response.data;\n\t}\n};\n\nexport const updateStudent = async (formData) => {\n\ttry {\n\t\tlet response = await AdminInstance.put(apiUrl + '/admin/update-student', formData);\n\t\treturn response.data;\n\t} catch (error) {\n\t\treturn error.response.data;\n\t}\n};\nexport const deleteStudent = async (formData) => {\n\ttry {\n\t\tlet response = await AdminInstance.post(apiUrl + '/admin/delete-student', formData);\n\t\treturn response.data;\n\t} catch (error) {\n\t\treturn error.response.data;\n\t}\n};\nexport const updateProfile = async (formData) => {\n\ttry {\n\t\tlet response = await AdminInstance.put(apiUrl + '/admin/update-my-profile', formData);\n\t\treturn response.data;\n\t} catch (error) {\n\t\treturn error.response.data;\n\t}\n};\nexport const updateTerm = async (formData) => {\n\ttry {\n\t\tlet response = await AdminInstance.put(apiUrl + '/admin/update-school-profile', formData);\n\t\treturn response.data;\n\t} catch (error) {\n\t\treturn error.response.data;\n\t}\n};\nexport const getTerm = async (formData) => {\n\ttry {\n\t\tlet response = await AdminInstance.get(apiUrl + '/admin/school-profile', formData);\n\t\treturn response.data;\n\t} catch (error) {\n\t\treturn error.response.data;\n\t}\n};\nexport const getUserProfile = async (formData) => {\n\ttry {\n\t\tlet response = await AdminInstance.post(apiUrl + '/admin/profile', formData);\n\t\treturn response.data;\n\t} catch (error) {\n\t\treturn error.response.data;\n\t}\n};\nexport const getAllClients = async (formData) => {\n\ttry {\n\t\tlet response = await AdminInstance.get(apiUrl + '/common/get-all-clients', formData);\n\t\treturn response.data;\n\t} catch (error) {\n\t\treturn error.response.data;\n\t}\n};\nexport const getAllTerms = async (formData) => {\n\ttry {\n\t\tlet response = await AdminInstance.get(apiUrl + '/common/get-terms', formData);\n\t\treturn response.data;\n\t} catch (error) {\n\t\treturn error.response.data;\n\t}\n};\nexport const assignStudent = async (formData) => {\n\ttry {\n\t\tlet response = await AdminInstance.post(apiUrl + '/admin/assign-student', formData);\n\t\treturn response.data;\n\t} catch (error) {\n\t\treturn error.response.data;\n\t}\n}\nexport const removeStudentFromGroup = async (formData) => {\n\ttry {\n\t\tlet response = await AdminInstance.post(apiUrl + '/admin/remove-student-from-group', formData);\n\t\treturn response.data;\n\t} catch (error) {\n\t\treturn error.response.data;\n\t}\n}\nexport const getAllClientsPerGroup = async (formData) => {\n\ttry {\n\t\tlet response = await AdminInstance.get(apiUrl + '/admin/get-all-clients-per-group', formData);\n\t\treturn response.data;\n\t}\n\tcatch (error) {\n\t\treturn error.response.data;\n\t}\n}\n\nexport const removeClientFromGroup = async (formData) => {\n\ttry {\n\t\tlet response = await AdminInstance.post(apiUrl + '/admin/remove-client-from-group', formData);\n\t\treturn response.data;\n\t}\n\tcatch (error) {\n\t\treturn error.response.data;\n\t}\n};\n\nexport const getTimeTable = async (formData) => {\n\ttry {\n\t\tlet response = await AdminInstance.get(apiUrl + '/admin/get-timetable', formData);\n\t\treturn response.data;\n\t} catch (error) {\n\t\treturn error.response.data;\n\t}\n};\n\nexport const saveTimeTableSlots = async (formData) => {\n\ttry {\n\t\tlet response = await AdminInstance.post(apiUrl + '/admin/add-edit-timetable-slots', formData);\n\t\treturn response.data;\n\t} catch (error) {\n\t\treturn error.response.data;\n\t}\n};\n\nexport const getTimeTableSlots = async (formData) => {\n\ttry {\n\t\tlet response = await AdminInstance.get(apiUrl + '/admin/get-timetable-slots', formData);\n\t\treturn response.data;\n\t} catch (error) {\n\t\treturn error.response.data;\n\t}\n};\n\nexport const addEditTimeTable = async (formData) => {\n\ttry {\n\t\tlet response = await AdminInstance.post(apiUrl + '/admin/add-edit-timetable', formData);\n\t\treturn response.data;\n\t} catch (error) {\n\t\treturn error.response.data;\n\t}\n}\nexport const checkTimeTableExist = async (formData) => {\n\ttry {\n\t\tlet response = await AdminInstance.get(apiUrl + '/admin/check-timetable-exists/' + formData);\n\t\treturn response.data;\n\t} catch (error) {\n\t\treturn error.response.data;\n\t}\n}\nexport const searchSubjects = async (formData) => {\n\ttry {\n\t\tlet response = await AdminInstance.get(apiUrl + '/common/get-subjects', formData);\n\t\treturn response.data;\n\t} catch (error) {\n\t\treturn error.response.data;\n\t}\n};\nexport const getAllStudentAssignedSubjects = async (formData) => {\n\ttry {\n\t\tlet response = await AdminInstance.get(apiUrl + '/admin/get-students-assigned-subjects/' + formData);\n\t\treturn response.data;\n\t}\n\tcatch (error) {\n\t\treturn error.response.data;\n\t}\n}\nexport const getAllClientAssignedSubjects = async (formData) => {\n\ttry {\n\t\tlet response = await AdminInstance.get(apiUrl + '/admin/get-client-assigned-subjects/' + formData);\n\t\treturn response.data;\n\t}\n\tcatch (error) {\n\t\treturn error.response.data;\n\t}\n}\nexport const getAllAvtars = async (formData) => {\n\ttry {\n\t\tlet response = await AdminInstance.get(apiUrl + '/common/get-all-avatars', formData);\n\t\treturn response.data;\n\t}\n\tcatch (error) {\n\t\treturn error.response.data;\n\t}\n}\nexport const assignAvtarToAdmin = async (formData) => {\n\ttry {\n\t\tlet response = await AdminInstance.post(apiUrl + '/common/assign-avatar/admin', formData);\n\t\treturn response.data;\n\t}\n\tcatch (error) {\n\t\treturn error.response.data;\n\t}\n}\nexport const getFormDetails = async (formData) => {\n\ttry {\n\t\tlet response = await AdminInstance.get(apiUrl + '/admin/get-form/' + formData);\n\t\treturn response.data;\n\t}\n\tcatch (error) {\n\t\treturn error.response.data;\n\t}\n}\nexport const getStudentByForm = async (formData) => {\n\ttry {\n\t\tlet response = await AdminInstance.get(apiUrl + '/admin/get-students-by-form', formData);\n\t\treturn response.data;\n\t}\n\tcatch (error) {\n\t\treturn error.response.data;\n\t}\n}\nexport const removeStudentFromForm = async (formData) => {\n\ttry {\n\t\tlet response = await AdminInstance.post(apiUrl + '/admin/remove-student-from-form', formData);\n\t\treturn response.data;\n\t}\n\tcatch (error) {\n\t\treturn error.response.data;\n\t}\n}\nexport const moveStudentToNewGroup = async (formData) => {\n\ttry {\n\t\tlet response = await AdminInstance.put(apiUrl + '/admin/move-students-to-new-group', formData);\n\t\treturn response.data;\n\t}\n\tcatch (error) {\n\t\treturn error.response.data;\n\t}\n}\nexport const moveStudentToNewForm = async (formData) => {\n\ttry {\n\t\tlet response = await AdminInstance.put(apiUrl + '/admin/move-students-to-new-form', formData);\n\t\treturn response.data;\n\t}\n\tcatch (error) {\n\t\treturn error.response.data;\n\t}\n}\nexport const uploadClientCSV = (file, onUploadProgress) => {\n\tdebugger;\n\tlet formData = new FormData();\n\tformData.append(\"file\", file);\n\treturn AdminInstance.post(apiUrl + \"/admin/upload-client-csv\", formData, {\n\t\theaders: {\n\t\t\t\"Content-Type\": \"multipart/form-data\",\n\t\t},\n\t\tonUploadProgress,\n\t});\n};\n\nexport const uploadSubjectCSV = (file, onUploadProgress) => {\n\tdebugger;\n\tlet formData = new FormData();\n\tformData.append(\"file\", file);\n\treturn AdminInstance.post(apiUrl + \"/admin/upload-subject-csv\", formData, {\n\t\theaders: {\n\t\t\t\"Content-Type\": \"multipart/form-data\",\n\t\t},\n\t\tonUploadProgress,\n\t});\n};\n\nexport const uploadStudentCSV = (file, onUploadProgress) => {\n\tdebugger;\n\tlet formData = new FormData();\n\tformData.append(\"file\", file);\n\treturn AdminInstance.post(apiUrl + \"/admin/upload-student-csv\", formData, {\n\t\theaders: {\n\t\t\t\"Content-Type\": \"multipart/form-data\",\n\t\t},\n\t\tonUploadProgress,\n\t});\n};\n\nexport const getStudentsStatus = async (formData) => {\n\ttry {\n\t\tlet response =  await AdminInstance.get(apiUrl + \"/admin/dashboard/get-student-stats\");\n\t\treturn response.data;\n\t}\n\tcatch (error) {\n\t\treturn error.response.data;\n\t}\n}\n\nexport const getClientStatus = async (formData) => {\n\ttry {\n\t\tlet response =  await AdminInstance.get(apiUrl + \"/admin/dashboard/get-client-stats\");\n\t\treturn response.data;\n\t}\n\tcatch (error) {\n\t\treturn error.response.data;\n\t}\n}\nexport const getYearDetails = async (formData) => {\n\ttry {\n\t\tlet response = await AdminInstance.get(apiUrl + '/admin/get-year/' + formData);\n\t\treturn response.data;\n\t}\n\tcatch (error) {\n\t\treturn error.response.data;\n\t}\n}\nexport const getStudentByYear = async (formData) => {\n\ttry {\n\t\tlet response = await AdminInstance.get(apiUrl + '/admin/get-students', formData);\n\t\treturn response.data;\n\t}\n\tcatch (error) {\n\t\treturn error.response.data;\n\t}\n}\n// export const getClientTopPerformance = async (formData) => {\n// \ttry {\n// \t\tlet response = await AdminInstance.get(apiUrl + '/admin/dashboard/get-top-performing-clients', formData);\n// \t\treturn response.data;\n// \t}\n// \tcatch (error) {\n// \t\treturn error.response.data;\n// \t}\n// }\nexport const getStudentTopPerformance = async (formData) => {\n\ttry {\n\t\tlet response = await AdminInstance.get(apiUrl + '/admin/dashboard/get-admin-dashboard', formData);\n\t\treturn response.data;\n\t}\n\tcatch (error) {\n\t\treturn error.response.data;\n\t}\n}","/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/lib/config/message.js",[],"/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/web/components/Accordian/Accordian.js",["515","516","517","518","519","520","521","522","523"],"import React, { useState, useEffect, useRef } from 'react'\nimport  { Redirect, useHistory } from 'react-router-dom'\n\nconst handleAccordian = (event) => {\n    const subjectTabId = event.target.getAttribute('subject_id')\n    const groupListTabId = subjectTabId.split(\"_\")[2] \n    const groupTab = document.querySelector(`#group_list_tab_${groupListTabId}`)\n    if(groupTab){\n        if(groupTab.style.display === 'none'){\n            if(event.target.getAttribute('accordian_icon') === 'true'){\n                event.target.classList.add('uil-angle-up')\n                event.target.classList.remove('uil-angle-down')\n            }else{\n                event.target.parentElement.parentElement.children[2].classList.add('uil-angle-up')\n                event.target.parentElement.parentElement.children[2].classList.remove('uil-angle-down')\n            }\n            \n            groupTab.style.display = 'block'\n        }else{\n            if(event.target.getAttribute('accordian_icon') === 'true'){\n                event.target.classList.remove('uil-angle-up')\n                event.target.classList.add('uil-angle-down')\n            }else{\n                event.target.parentElement.parentElement.children[2].classList.remove('uil-angle-up')\n                event.target.parentElement.parentElement.children[2].classList.add('uil-angle-down')\n            }\n            groupTab.style.display = 'none'\n        }\n    }\n}\n\nconst handleDropDown = (event) => {\n    const buttonId = event.target.getAttribute('dropdown_button_id')\n    const contentId = buttonId.split(\"_\")[2] \n    const contentSection = document.querySelector(`#dropdown_content_${contentId}`)\n    const subDrop = document.querySelectorAll('.subjectDropdown');\n    for(var i = 0; i < subDrop.length; i++){\n        if(contentSection.style.display !== subDrop[i].style.display)\n        subDrop[i].style.display = 'none';\n    }\n\n    if(contentSection){\n        if(contentSection.style.display === 'none'){\n            contentSection.style.display = 'block';\n        }else{\n            contentSection.style.display = 'none';\n        }\n    }   \n}\n\nconst handleGroupDropDown = (event) => {\n    const buttonId = event.target.getAttribute('dropdown_groupbutton_id')\n    const contentId = buttonId.split(\"_\")[2] \n    const contentSection = document.querySelector(`#dropdown_group_${contentId}`)\n    const subDrop = document.querySelectorAll('.groupDropdown');\n    for(var i = 0; i < subDrop.length; i++){\n        if(contentSection.style.display !== subDrop[i].style.display)\n        subDrop[i].style.display = 'none';\n    }\n\n    if(contentSection){\n        if(contentSection.style.display === 'none'){\n            contentSection.style.display = 'block';\n        }else{\n            contentSection.style.display = 'none';\n        }\n    }   \n}\n\nconst deleteSubject = (props, id) => {\n    props.deleteSub(id)\n    const contentSection = document.querySelector(`#dropdown_content_${id}`)\n    if(contentSection){\n        contentSection.style.display = 'none'\n    }\n}\n\nconst editSubject = (props, id, name, image) => {\n\n    props.editSub(id, name, image)\n    const contentSection = document.querySelector(`#dropdown_content_${id}`)\n    if(contentSection){\n        contentSection.style.display = 'none'\n    }\n}\n\nconst deleteGroup = (props, id) => {\n    props.deleteGroup(id)\n    const contentSection = document.querySelector(`#dropdown_group_${id}`)\n    if(contentSection){\n        contentSection.style.display = 'none'\n    }\n}\n\nconst editGroup = (props, subject, id, name, image) => {\n     props.editGroup(subject, id, name, image)\n    const contentSection = document.querySelector(`#dropdown_group_${id}`)\n    if(contentSection){\n        contentSection.style.display = 'none'\n    }\n}\n\nconst Accordian = (props) => {\n    const history = useHistory();\n\n    const [clickedOutside, setClickedOutside] = useState(false);\n    const myRef = useRef();\n    \n\n    const handleClickOutside = e => {\n        if(e.target.text !== 'Delete Subject' && e.target.text !== 'Edit Subject' && (e.target).getAttribute('name') !== 'subjectOptions'){\n\n            const subDrop = document.querySelectorAll('.subjectDropdown');\n            for(var i = 0; i < subDrop.length; i++){\n                subDrop[i].style.display = 'none';\n            }\n        }\n    };\n\n    const handleClickInside = () => setClickedOutside(false);\n\n    useEffect(() => {\n        document.addEventListener('mousedown', handleClickOutside);\n        return () => document.removeEventListener('mousedown', handleClickOutside);\n    });\n\n    return(\n        <React.Fragment >\n        {\n            props.subjectsData.map(data => {\n                let subImg = `/images/book.svg`;\n                if(data.image_url){\n                    subImg = data.image_url;\n                }\n                return(\n                    <div className=\"formRow subjectRow\" key={data.id} ref={myRef} onClick={() => handleClickInside() }>\n                        <div className=\"subjectTop\">\n                            <div>\n                                <div className=\"subjectImg\" style={{backgroundImage: `url(${subImg})`}}></div>\n                                <span style={{cursor: 'pointer'}} className=\"subjectname\" subject_id={`subject_tab_${data.id}`} onClick={handleAccordian}>{data.name}</span>\n                                <span className=\"subjectstudent\">{data.students_count?data.students_count:0} Students</span>\n                            </div>\n                            {/* <a className=\"importSubjectCSV\"><img src=\"images/import.png\"/> <label>Import CSV File</label></a> */}\n                            <i style={{cursor: 'pointer', position: 'absolute', right: '80px'}} dropdown_button_id={`dropdown_button_${data.id}`} name=\"subjectOptions\" className=\"uil uil-ellipsis-h\" onClick={handleDropDown}></i>\n                            <div className=\"menuDropdown ml-auto subjectDropdown\" style={{flex: '0 0', display: 'none'}} id={`dropdown_content_${data.id}`}>\n                                <div className=\"customDropdown max-h-150 d-block\">\n                                    <a style={{color: '#0c0058'}} href=\"#\" onClick={() => deleteSubject(props, data.id)}><i className=\"fa fa-trash-alt mr-2\" />Delete Subject</a>\n                                    <a style={{color: '#0c0058'}} href=\"#\" onClick={() => editSubject(props,data.id, data.name, data.image)}><i className=\"fa fa-pen-alt mr-2\" />Edit Subject</a>\n                                    {/* <a className=\"importSubjectCSV\"><img src=\"images/import.png\"/><label>Import CSV File</label></a> */}\n                                </div>\n                            </div>\n                            \n                            <i style={{cursor: 'pointer', position: 'absolute', right: '40px'}} accordian_icon=\"true\" subject_id={`subject_tab_${data.id}`} onClick={handleAccordian} className={data.id === props.newSubjectId ? \"uil uil-angle-up\" :\"uil uil-angle-down\"}></i>\n                        </div>\n                        <div id={`group_list_tab_${data.id}`} style={{display: props.newSubjectId === data.id ? 'block' :'none'}}>\n                            {\n                                data.subject_groups.map(group => {\n                                    return(\n                                        <div className=\"subjectGroupOuter\" key={group.id}>\n                                            <div className=\"subjectGroup\">\n                                                <div>\n                                                    <labe className=\"subjectColor\" style={{background: group.color}}></labe>\n                                                    <span className=\"subjectname\" style={{cursor: 'pointer'}} onClick={() => history.push('/group-details/' + group.id)}>{group.name}</span>\n                                                    <span className=\"subjectstudent\" style={{cursor: 'pointer'}} onClick={() => history.push('/group-details/' + group.id)}>{group.students_count} Students</span>  \n                                                    <span className=\"subjectstudent\" style={{cursor: 'pointer'}} onClick={() => history.push('/group-details/' + group.id)}>{group.teacher_count} Teachers Assigned</span>\n                                                    \n                                                </div>\n                                                <a subject_id={data.id} subject_group_id={group.id} className=\"importSubjectCSV\" onClick={props.assignTeacher}><i subject_id={data.id} subject_group_id={group.id} className=\"fa fa-plus-circle\"></i> <label subject_id={data.id} subject_group_id={group.id}>Assign Teacher</label></a>\n                                                <a style={{position: 'relative', left: '20px'}} subject_id={data.id} subject_group_id={group.id} className=\"importSubjectCSV\" onClick={() => props.assignStudents({subject_name: data.name, ...group})}><i subject_id={data.id} subject_group_id={group.id} className=\"fa fa-plus-circle\"></i> <label subject_id={data.id} subject_group_id={group.id}>Add Student</label></a>\n                                                \n                                                <i className=\"uil uil-ellipsis-h\" onClick={handleGroupDropDown} dropdown_groupbutton_id={`dropdown_groupbutton_${group.id}`}></i>\n                                                <div className=\"menuDropdown ml-auto groupDropdown\" style={{flex: '0 0', display: 'none'}} id={`dropdown_group_${group.id}`}>\n                                                    <div className=\"customDropdown max-h-150 d-block\" style={{top: \"40px\", right: \"40px\"}}>\n                                                        <a style={{color: '#0c0058'}} onClick={() => deleteGroup(props, group.id)}><i className=\"fa fa-trash-alt mr-2\" />Delete Group</a>\n                                                        <a style={{color: '#0c0058'}} onClick={() => editGroup(props, data.id, group.id, group.name, group.color)}><i className=\"fa fa-pen-alt mr-2\" />Edit Group</a>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    )\n                                })\n                            }\n                            <div className=\"subjectCreateGroup\">\n                                <a subjectId={data.id} className=\"hyperLink\" onClick={props.createGroup}><i className=\"fa fa-plus-circle\"></i> Create Group</a>\n                            </div>\n                        </div>\n                    </div>\n                )\n            })\n        }\n    </React.Fragment>\n    )\n}\n\nexport default Accordian","/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/web/pages/Admin/AdminLayout/index.js",["524","525","526","527","528","529","530"],"import React, { useState, useEffect } from 'react';\nimport { useStoreActions, useStoreState } from 'easy-peasy';\nimport { Link } from \"react-router-dom\";\nimport TopBarProgress from \"react-topbar-progress-indicator\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport Sidebar from \"recruitment-components/Sidebar/Sidebar.js\";\nimport 'react-toastify/dist/ReactToastify.css';\n\nTopBarProgress.config({\n  barColors: {\n    \"0\": \"#0c0058\",\n    \"1.0\": \"#0c0058\"\n  }\n});\n\nconst AdminLayout = (allowedPrivileges) => (WrappedComponent) => {\n  return class WithAuthorization extends React.Component {\n    constructor(props) {\n      super(props)\n      this.state = {\n        showLoader: true,\n        rightSection: false\n      }\n    }\n    componentDidMount() {\n      let _this = this\n      setTimeout(function(){\n        _this.setState({showLoader: false})\n      },2000)\n    }\n    \n    render() {\n      const handleSidebar = (val) => {\n        this.setState({rightSection: val})\n      }\n\n      return(\n        <React.Fragment>\n        {this.state.showLoader && \n\n          <TopBarProgress />\n        }\n          <div className={this.state.rightSection ? \"main maxRightSection\" : \"main\"}> {/*maxRightSection*/}\n            <Sidebar handleSidebar={handleSidebar.bind(this)} />\n            <div className={allowedPrivileges && allowedPrivileges.length > 0 && allowedPrivileges[0] == false ? \"\" : \"section\"}>\n              <WrappedComponent />\n            </div>\n          </div>\n          <ToastContainer\n            position=\"bottom-center\"\n            autoClose={3000}\n            hideProgressBar={false}\n            newestOnTop={false}\n            closeOnClick\n            rtl={false}\n            pauseOnFocusLoss\n            draggable\n            pauseOnHover\n            />\n        </React.Fragment>\n    )}\n  }\n}\n\nexport default AdminLayout;\n","/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/web/components/TableOneRow/TableOneRow.js",["531","532","533","534","535","536","537","538","539","540","541","542"],"import React, { useState, useEffect } from 'react';\nimport { Link ,useHistory} from \"react-router-dom\";\n\nconst TableOneRow = (props) => {\n  \n  const [showLoader, setShowLoader] = useState(false); \n  const [showOverlay, setShowOverlay] = useState(false); \n  const history = useHistory();\n  \n  return (\n    <React.Fragment>\n      <a className=\"formRow formRowAction tableOneRow\" >\n        <div className=\"subjectTop\" style={{width: '98%'}} onClick={()=>{props.redirectTo && history.push(`${props.redirectTo}/${props.rowData.id}`)}}>\n        {props.rowData && Object.keys(props.rowData).length > 0 && Object.keys(props.rowData).map((obj, idx) => {\n            if(props.columns.indexOf(obj) > -1){\n              return (<span>{props.rowData[obj]} {(obj == 'students_count') ? 'Students' : \"\" }</span>)\n            } else {\n              return false;\n            }\n\n          })\n        }\n        </div>\n        <div className=\"formRowRightAction\">\n          {props.showActions && props.actions && props.actions.indexOf('import') > -1 && \n          <a className=\"importSubjectCSV\"><img src=\"images/import.png\" /> <label>Import CSV File</label></a>\n          }\n          {props.showActions && props.actions && props.actions.indexOf('edit') > -1 && \n          <a className=\"addField\" onClick={() => props.editAction(props.rowData.id)}><i className=\"fa fa-pen fa-w-16\"></i></a>\n          }\n          {props.showActions && props.actions && props.actions.indexOf('delete') > -1 && \n          <a className=\"addField ml-2\" onClick={() => props.deleteAction(props.rowData.id)}><i className=\"fa fa-trash fa-w-16\"></i></a>\n          }\n          {props.showAccordian && \n          <i className=\"uil uil-angle-down\" style={{fontsize: '30px'}} />\n          }\n        </div>\n      </a>\n    </React.Fragment>\n  );\n};\n\nexport default TableOneRow;\n","/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/model/Classimize/index.js",["543","544","545","546","547"],"import { Action, action, thunk, Thunk } from 'easy-peasy';\nimport { ToastContainer, toast } from \"react-toastify\";\n\nconst classimizeModel = {\n\tsetShowProgressBar: action((state, payload) => {\n\t    state.showProgressBar = payload;\n  \t}),\n};\n\nexport default classimizeModel;\n","/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/model/Authentication/index.js",["548","549","550"],"import { Action, action, thunk, Thunk } from 'easy-peasy';\nimport { ToastContainer, toast } from \"react-toastify\";\nimport ToastUI from \"recruitment-components/ToastUI/ToastUI.js\";\n\nimport {\n  loginUser,\n  logoutUser,\n  forgetPassword,\n  resetPassword,\n  submitOTP,\n  resendOTP\n} from 'recruitment-api/AuthApi.js';\n\n\n\nconst authenticationModel = {\n\tsetToken: action((state, payload) => {\n\t    state.token = payload;\n  \t}),\n\tlogoutUser: thunk(async (actions, payload, { getStoreActions }) => {\n\t\tlet response = await logoutUser(payload);\n\t\tif(!response.success) {\n\t\t\tconsole.log(response.data.message);\n\t\t\treturn false\n\t\t} else {\n\t\t\ttoast.success(<ToastUI message={response.data.message} type={\"Success\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t\treturn true;\n\t\t}\n\t}),\n\n\tbrowserDATA : action ((state,payload)=>{\n\t\tlocalStorage.setItem('isLoggedIn', \"true\");\n\t\tlocalStorage.setItem('loggedInUser', JSON.stringify(payload));\n\t\tlocalStorage.setItem('session', JSON.stringify(Date.now() + 3600000))\n\t}),\n\n\tloginUser: thunk(async (actions, payload, { getStoreActions }) => {\n\t\tlet response = await loginUser(payload);\n\t\tconsole.log(response);\n\t\ttoast.dismiss();\n\t\tif(!response.success) {\n\t\t\ttoast.error(<ToastUI message={response.data.message} type={\"Error\"} />, {\n        toastId: 'toast-show'\n      })\n\t\t\treturn false\n\t\t} else {\n\t\t\tlocalStorage.setItem('api_token', response.data.token);\n\t\t\t//toast.success(<ToastUI message={response.data.message} type={\"Success\"} />);\n\t\t\treturn response.data;\n\t\t}\n\t}),\n\tsubmitOTP: thunk(async(actions, payload, {getStoreActions}) => {\n\t\tlet response = await submitOTP(payload);\n\t\ttoast.dismiss();\n\t\tif (response.status !== 200){\n\t\t\ttoast.error(<ToastUI message={response.data.message} type={\"Error\"} />, {\n\t\t\t\ttoastId: 'toast-show'\n\t\t\t  })\n\t\t\t\t\treturn false\n\t\t}\n\t\telse {\n\t\t\t//toast.success(<ToastUI message={response.data.message} type={\"Success\"} />);\n\t\t\treturn true;\n\t\t}\n\t}),\n\n\tresendOTP: thunk(async(actions, payload, {getStoreActions}) => {\n\t\tlet response = await resendOTP(payload);\n\t\ttoast.dismiss();\n\t\tif (!response.success){\n\t\t\ttoast.error(<ToastUI message={response.data.message} type={\"Error\"} />, {\n\t\t\t\ttoastId: 'toast-show'\n\t\t\t  })\n\t\t\t\t\treturn false\n\t\t}\n\t\telse {\n\t\t\ttoast.success(<ToastUI message={response.data.message} type={\"Success\"} />);\n\t\t\treturn true;\n\t\t}\n\t}),\n\tforgetPassword: thunk(async (actions, payload, { getStoreActions }) => {\n\t\tlet response = await forgetPassword(payload);\n\t\ttoast.dismiss();\n\t\tif(!response.success) {\n\t\t\ttoast.error(<ToastUI message={response.data.message} type={\"Error\"} />, {\n        toastId: 'toast-show'\n      })\n\t\t\treturn false\n\t\t} else {\n\t\t\ttoast.success(<ToastUI message={response.data.message} type={\"Success\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t\treturn true;\n\t\t}\n\t}),\n\tresetPassword: thunk(async (actions, payload, { getStoreActions }) => {\n\t\tlet response = await resetPassword(payload);\n\t\ttoast.dismiss();\n\t\tif(!response.success) {\n\t\t\ttoast.error(<ToastUI message={response.data.message} type={\"Error\"} />, {\n        toastId: 'toast-show'\n      })\n\t\t\treturn false\n\t\t} else {\n\t\t\ttoast.success(<ToastUI message={response.data.message} type={\"Success\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t\treturn true;\n\t\t}\n\t})\n};\n\nexport default authenticationModel;\n","/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/model/Admin/index.js",["551","552","553","554","555","556","557","558","559","560","561"],"import { Action, action, thunk, Thunk } from 'easy-peasy';\nimport { ToastContainer, toast } from \"react-toastify\";\nimport ToastUI from \"recruitment-components/ToastUI/ToastUI.js\";\nimport {\n  getYears,\n  getAllYears,\n  createYear,\n  updateYear,\n  deleteYear,\n  getForms,\n  changePassword,\n  getAllForms,\n  createForm,\n  deleteForm,\n  updateForm,\n  getSubjects,\n  createSubject,\n  updateSubject,\n  deleteSubject,\n  saveSubjectImage,\n  getGroups,\n  getGroup,\n  createGroup,\n  updateGroup,\n  deleteGroup,\n  assignClient,\n  createClient,\n  getClients,\n  getClient,\n  updateClient,\n  deleteClient,\n  getStudents,\n  createStudent,\n  updateStudent,\n  deleteStudent,\n  getStudent,\n  updateProfile,\n  updateTerm,\n  getTerm,\n  getUserProfile,\n  getAllClients,\n  getAllTerms,\n  getTimeTable,\n  saveTimeTableSlots,\n  checkTimeTableExist,\n  addEditTimeTable,\n  assignStudent,\n  removeStudentFromGroup,\n  removeStudentFromForm,\n  getAllClientsPerGroup,\n  removeClientFromGroup,\n  getTimeTableSlots,\n  searchSubjects,\n  getAllStudentAssignedSubjects,\n  getAllClientAssignedSubjects,\n  getAllAvtars,\n  assignAvtarToAdmin,\n  getFormDetails,\n  getStudentByForm,\n  moveStudentToNewGroup,\n  moveStudentToNewForm,\n  getStudentsStatus,\n  getClientStatus,\n  getStudentByYear,\n  getYearDetails,\n  getClientTopPerformance,\n  getStudentTopPerformance\n} from 'recruitment-api/AdminApi.js';\n\n\n\nconst adminModel = {\n\tsetYears: action((state, payload) => {\n\t\tstate.years = payload;\n\t}),\n\tsetAllYears: action((state, payload) => {\n\t\tstate.allYears = payload;\n\t}),\n\tsetAllTerms: action((state, payload) => {\n\t\tstate.allTerms = payload;\n\t}),\n\tsetAllClients: action((state, payload) => {\n\t\tstate.allClients = payload;\n\t}),\n\tsetUserProfile: action((state, payload) => {\n\t\tstate.userProfile = payload;\n\t}),\n\tsetPreviousSelectedYear: action((state, payload) => {\n\t\tstate.previousSelectedYear = payload;\n\t}),\n\tsetPreviousFilterOfStudent: action((state, payload) => {\n\t\tstate.previousStudentFilter = payload;\n\t}),\n\tsetPreviousFilterOfClient: action((state, payload) => {\n\t\tstate.previousClientFilter = payload;\n\t}),\n\tgetYears: thunk(async (actions, payload, { getStoreActions }) => {\n\t\tlet response = await getYears(payload);\n\t\tif(!response.success) {\n\t\t\ttoast.error(<ToastUI message={response.data.message} type={\"Error\"} />, {\n\t\t\t\ttoastId: 'toast-show'\n\t\t\t  });\n\t\t} else {\n\t\t\tawait actions.setYears(response.data);\n\t\t}\n\t}),\n\tgetAllYears: thunk(async (actions, payload, { getStoreActions }) => {\n\t\tlet response = await getAllYears(payload);\n\t\tif(!response.success) {\n\t\t\ttoast.error(<ToastUI message={response.data.message} type={\"Error\"} />, {\n\t\t\t\ttoastId: 'toast-show'\n\t\t\t  });\n\t\t} else {\n\t\t\tawait actions.setAllYears(response.data);\n\t\t}\n\t}),\n\tcreateYear: thunk(async (actions, payload, { getStoreActions }) => {\n\t\tlet response = await createYear(payload);\n\t\tif(!response.success) {\n\t\t\ttoast.error(<ToastUI message={response.data.message} type={\"Error\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t\treturn false\n\t\t} else {\n\t\t\tawait actions.setYears(response.data);\n\t\t\ttoast.success(<ToastUI message={response.data.message} type={\"Success\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t\treturn true;\n\t\t}\n\t}),\n\tdeleteYear: thunk(async (actions, payload, { getStoreActions }) => {\n\t\tlet response = await deleteYear(payload);\n\t\tif(!response.success) {\n\t\t\ttoast.error(<ToastUI message={response.data.message} type={\"Error\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t\treturn false\n\t\t} else {\n\t\t\tawait actions.setYears(response.data);\n\t\t\ttoast.success(<ToastUI message={response.data.message} type={\"Success\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t\treturn true;\n\t\t}\n\t}),\n\tupdateYear: thunk(async (actions, payload, { getStoreActions }) => {\n\t\tlet response = await updateYear(payload);\n\t\ttoast.dismiss();\n\t\tif(!response.success) {\n\t\t\ttoast.error(<ToastUI message={response.data.message} type={\"Error\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t\treturn false\n\t\t} else {\n\t\t\tawait actions.setYears(response.data);\n\t\t\ttoast.success(<ToastUI message={response.data.message} type={\"Success\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t\treturn true;\n\t\t}\n\t}),\n\tsetAllForms: action((state, payload) => {\n\t\tstate.allForms = payload;\n\t}),\n\tsetForms: action((state, payload) => {\n\t\tstate.forms = payload;\n\t}),\n\tgetAllForms: thunk(async (actions, payload, { getStoreActions }) => {\n\t\tlet response = await getAllForms(payload);\n\t\tif(!response.success) {\n\t\t\ttoast.error(<ToastUI message={response.data.message} type={\"Error\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t} else {\n\t\t\t//debugger;\n\t\t\tawait actions.setAllForms(response.data);\n\t\t}\n\t}),\n\tgetForms: thunk(async (actions, payload, { getStoreActions }) => {\n\t\tlet response = await getForms(payload);\n\t\tif(!response.success) {\n\t\t\ttoast.error(<ToastUI message={response.data.message} type={\"Error\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t} else {\n\t\t\tawait actions.setForms(response.data);\n\t\t}\n\t}),\n\tcreateForm: thunk(async (actions, payload, { getStoreActions }) => {\n\t\tlet response = await createForm(payload);\n\t\tif(!response.success) {\n\t\t\ttoast.error(<ToastUI message={response.data.message} type={\"Error\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t\treturn false\n\t\t} else {\n\t\t\tawait actions.setForms(response.data);\n\t\t\ttoast.success(<ToastUI message={response.data.message} type={\"Success\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t\treturn true;\n\t\t}\n\t}),\n\tdeleteForm: thunk(async (actions, payload, { getStoreActions }) => {\n\t\tlet response = await deleteForm(payload);\n\t\tif(!response.success) {\n\t\t\ttoast.error(<ToastUI message={response.data.message} type={\"Error\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t\treturn false\n\t\t} else {\n\t\t\tawait actions.setForms(response.data);\n\t\t\ttoast.success(<ToastUI message={response.data.message} type={\"Success\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t\treturn true;\n\t\t}\n\t}),\n\tupdateForm: thunk(async (actions, payload, { getStoreActions }) => {\n\t\tlet response = await updateForm(payload);\n\t\ttoast.dismiss();\n\t\tif(!response.success) {\n\t\t\ttoast.error(<ToastUI message={response.data.message} type={\"Error\"} />, {\n        toastId: 'toast-show'\n      })\n\t\t\treturn false\n\t\t} else {\n\t\t\tawait actions.setForms(response.data);\n\t\t\ttoast.success(<ToastUI message={response.data.message} type={\"Success\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t\treturn true;\n\t\t}\n\t}),\n\tsetSubjects: action((state, payload) => {\n\t\tstate.subjects = payload;\n\t}),\n\t\n\tsetSubjectsList:action((state, payload) => {\n\t\tstate.subjectsList = payload.data;\n\t}),\n\n\tsetSubjectYearId:action((state, payload) => {\n\t\tstate.subjectYearId = payload;\n\t}),\n\t\n\tgetSubjects: thunk(async (actions, payload, { getStoreActions }) => {\n\t\tlet response = await getSubjects(payload);\n\t\tif(!response.success) {\n\t\t\ttoast.error(<ToastUI message={response.data.message} type={\"Error\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t} else {\n\t\t\t\n\t\t\tawait actions.setSubjects(response.data);\n\t\t\tawait actions.setSubjectsList(response.data);\n\t\t\tawait actions.setSubjectYearId(payload.params.year_id);\n\t\t}\n\t}),\n\n\tsetNewSubjectId: action((state, payload) => {\n\t\tstate.newSubjectId = payload;\n\t}),\n\n\tcreateSubject: thunk(async (actions, payload, { getStoreActions }) => {\n\t\tlet response = await createSubject(payload);\n\t\tif(!response.success) {\n\t\t\ttoast.error(<ToastUI message={response.data.message} type={\"Error\"} />, {\n\t\t\t\ttoastId: 'toast-show'\n\t\t\t});\n\t\t\treturn false\n\t\t} else {\n\t\t\tconst subject = response.data.data.find(sub => sub.name === payload.name)\n\t\t\tif(subject){\n\t\t\t\tawait actions.setNewSubjectId(subject.id);\n\t\t\t}\n\t\t\ttoast.success(<ToastUI message={response.data.message} type={\"Success\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t\treturn true;\n\t\t}\n\t}),\n\tupdateSubject: thunk(async (actions, payload, { getStoreActions }) => {\n\t\tlet response = await updateSubject(payload);\n\t\ttoast.dismiss();\n\t\tif(!response.success) {\n\t\t\ttoast.error(<ToastUI message={response.data.message} type={\"Error\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t\treturn false\n\t\t} else {\n\t\t\ttoast.success(<ToastUI message={response.data.message} type={\"Success\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t\treturn true;\n\t\t}\n\t}),\n\n\tdeleteSubject: thunk(async (actions, payload, { getStoreActions }) => {\n\t\tlet response = await deleteSubject(payload);\n\t\ttoast.dismiss();\n\t\tif(!response.success) {\n\t\t\ttoast.error(<ToastUI message={response.data.message} type={\"Error\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t\treturn false\n\t\t} else {\n\t\t\ttoast.success(<ToastUI message={response.data.message} type={\"Success\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t\treturn true;\n\t\t}\n\t}),\n\t\n\tsetSubjectImage: action((state, payload) => {\n\t\tstate.subjectImage = payload;\n\t}),\n\n\n\t\n\tsaveSubjectImage: thunk(async (actions, payload, { getStoreActions }) => {\n\t\tlet response = await saveSubjectImage(payload);\n\t\ttoast.dismiss();\n\t\tif(!response.success) {\n\t\t\ttoast.error(<ToastUI message={response.data.message} type={\"Error\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t\treturn false\n\t\t} else {\n\t\t\tawait actions.setSubjectImage(response.data.name);\n\t\t\ttoast.success(<ToastUI message={response.data.message} type={\"Success\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t\treturn response.data.name;\n\t\t}\n\t}),\n\n\tsetGroups: action((state, payload) => {\n\t\tstate.groups = payload;\n\t}),\n\t// getGroups: thunk(async (actions, payload, { getStoreActions }) => {\n\t// \tlet response = await getGroups(payload);\n\t// \t// if(response.status != 200) {\n\t// \t// \ttoast.error(<ToastUI message={response.data.message} type={\"Error\"} />);\n\t// \t// } else {\n\t// \t// \tawait actions.setGroups(response.data);\n\t// \t// }\n\t// }),\n\n\tsetGroup: action((state, payload) => {\n\t\tstate.group = payload;\n\t}),\n\n\tgetGroup: thunk(async (actions, payload, { getStoreActions }) => {\n\t\tlet response = await getGroup(payload);\n\t\tif(!response.success) {\n\t\t\ttoast.error(<ToastUI message={response.data.message} type={\"Error\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t} else {\n\t\t\tawait actions.setGroup(response.data);\n\t\t}\n\t}),\n\n\tcreateGroup: thunk(async (actions, payload, { getStoreActions }) => {\n\t\tlet response = await createGroup(payload);\n\t\tif(!response.success) {\n\t\t\ttoast.error(<ToastUI message={response.data.message} type={\"Error\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t\treturn false\n\t\t} else {\n\t\t\ttoast.success(<ToastUI message={response.data.message} type={\"Success\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t\treturn true;\n\t\t}\n\t}),\n\tupdateGroup: thunk(async (actions, payload, { getStoreActions }) => {\n\t\tlet response = await updateGroup(payload);\n\t\ttoast.dismiss();\n\t\tif(!response.success) {\n\t\t\ttoast.error(<ToastUI message={response.data.message} type={\"Error\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t\treturn false\n\t\t} else {\n\t\t\ttoast.success(<ToastUI message={response.data.message} type={\"Success\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t\treturn true;\n\t\t}\n\t}),\n\tdeleteGroup: thunk(async (actions, payload, { getStoreActions }) => {\n\t\tlet response = await deleteGroup(payload);\n\t\ttoast.dismiss();\n\t\tif(!response.success) {\n\t\t\ttoast.error(<ToastUI message={response.data.message} type={\"Error\"} />, {\n        \t\ttoastId: 'toast-show'\n     \t\t });\n\t\t\treturn false\n\t\t} else {\n\t\t\ttoast.success(<ToastUI message={response.data.message} type={\"Success\"} />, {\n       \t\t\t toastId: 'toast-show'\n      \t\t});\n\t\t\treturn true;\n\t\t}\n\t}),\n\tassignClient: thunk(async (actions, payload, { getStoreActions }) => {\n\t\tlet response = await assignClient(payload);\n\t\tif(!response.success) {\n\t\t\ttoast.error(<ToastUI message={response.data.message} type={\"Error\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t\treturn false\n\t\t} else {\n\t\t\ttoast.success(<ToastUI message={response.data.message} type={\"Success\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t\treturn true;\n\t\t}\n\t}),\n\tsetClients: action((state, payload) => {\n\t\tstate.clients = payload;\n\t}),\n\n\tsetClient: action((state, payload) => {\n\t\tstate.client = payload;\n\t}),\n\tsetClientSuggestion: action((state, payload) => {\n\t\tstate.clientSuggestion = payload;\n\t}),\n\tcreateClient: thunk(async (actions, payload, { getStoreActions }) => {\n\t\tlet response = await createClient(payload);\n\t\ttoast.dismiss();\n\t\tif(!response.success) {\n\t\t\ttoast.error(<ToastUI message={response.data.message} type={\"Error\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t\treturn false\n\t\t} else {\n\t\t\tawait actions.setClients(response.data);\n\t\t\tactions.setClient(undefined)\n\n\t\t\ttoast.success(<ToastUI message={response.data.message} type={\"Success\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t\treturn true;\n\t\t}\n\t}),\n\n\tupdateClient: thunk(async (actions, payload, { getStoreActions }) => {\n\t\tlet response = await updateClient(payload);\n\t\ttoast.dismiss();\n\t\tif(!response.success) {\n\t\t\ttoast.error(<ToastUI message={response.data.message} type={\"Error\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t\treturn false\n\t\t} else {\n\t\t\tawait actions.setClients(response.data);\n\t\t\tactions.setClient(undefined)\n\t\t\ttoast.success(<ToastUI message={response.data.message} type={\"Success\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t\treturn true;\n\t\t}\n\t}),\n\n\tgetClients: thunk(async (actions, payload, { getStoreActions }) => {\n\t\tlet response = await getClients(payload);\n\t\ttoast.dismiss();\n\t\tif(!response.success) {\n\t\t\ttoast.error(<ToastUI message={response.data.message} type={\"Error\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t\treturn false\n\t\t} else {\n\t\t\tawait actions.setClients(response.data.clients);\n\t\t\treturn true;\n\t\t}\n\t}),\n\n\tdeleteClient: thunk(async (actions, payload, { getStoreActions }) => {\n\t\tlet response = await deleteClient(payload);\n\t\ttoast.dismiss();\n\t\tif(!response.success) {\n\t\t\ttoast.error(<ToastUI message={response.data.message} type={\"Error\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t\treturn false\n\t\t} else {\n\t\t\tawait actions.setClients(response.data);\n\t\t\ttoast.success(<ToastUI message={response.data.message} type={\"Success\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t\treturn true;\n\t\t}\n\t}),\n\n\tgetClient: thunk(async (actions, payload, { getStoreActions }) => {\n\t\tlet response = await getClient(payload);\n\t\ttoast.dismiss();\n\t\tif(!response.success) {\n\t\t\ttoast.error(<ToastUI message={response.data.message} type={\"Error\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t\treturn false\n\t\t} else {\n\t\t\tawait actions.setClient(response.data);\n\t\t\treturn true;\n\t\t}\n\t}),\n\tgetClientSuggestion: thunk(async (actions, payload, { getStoreActions }) => {\n\t\tlet response = await getAllClients(payload);\n\t\ttoast.dismiss();\n\t\tif(!response.success) {\n\t\t\ttoast.error(<ToastUI message={response.data.message} type={\"Error\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t\treturn false\n\t\t} else {\n\t\t\tawait actions.setClientSuggestion(response.data);\n\t\t\treturn true;\n\t\t}\n\t}),\n\tsetProfile: action((state, payload) => {\n\t\tstate.profile = payload;\n\t}),\n\n\tupdateProfile: thunk(async (actions, payload, { getStoreActions }) => {\n\t\tlet response = await updateProfile(payload);\n\t\ttoast.dismiss();\n\t\tif(!response.success) {\n\t\t\ttoast.error(<ToastUI message={response.data.message} type={\"Error\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t\treturn false\n\t\t} else {\n\t\t\ttoast.success(<ToastUI message={response.data.message} type={\"Success\"} />, { toastId: 'toast-show' });\n\t\t\tawait actions.setUserProfile(response.data);\n\t\t\treturn true;\n\t\t}\n\t}),\n\n\n\tsetTerm: action((state, payload) => {\n\t\tstate.term = payload;\n\t}),\n\n\tupdateTerm: thunk(async (actions, payload, { getStoreActions }) => {\n\t\tlet response = await updateTerm(payload);\n\t\ttoast.dismiss();\n\t\tif(!response.success) {\n\t\t\ttoast.error(<ToastUI message={response.data.message} type={\"Error\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t\treturn false\n\t\t} else {\n\t\t\ttoast.success(<ToastUI message={response.data.message} type={\"Success\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t\treturn true;\n\t\t}\n\t}),\n\n\tgetTerm: thunk(async (actions, payload, { getStoreActions }) => {\n\t\tlet response = await getTerm(payload);\n\t\ttoast.dismiss();\n\t\tif(!response.success) {\n\t\t\ttoast.error(<ToastUI message={response.data.message} type={\"Error\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t\treturn false\n\t\t} else {\n\t\t\tawait actions.setTerm(response.data);\n\t\t\treturn true;\n\t\t}\n\t}),\n\n\n\tsetStudents: action((state, payload) => {\n\t\tstate.students = payload;\n\t}),\n\tsetStudent: action((state, payload) => {\n\t\tstate.student = payload;\n\t}),\n\tgetStudents: thunk(async (actions, payload, { getStoreActions }) => {\n\t\tlet response = await getStudents(payload);\n\t\tif(!response.success) {\n\t\t\ttoast.error(<ToastUI message={response.data.message} type={\"Error\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t} else {\n\t\t\tawait actions.setStudents(response.data);\n\t\t}\n\t}),\n\tcreateStudent: thunk(async (actions, payload, { getStoreActions }) => {\n\t\tlet response = await createStudent(payload);\n\t\tif(!response.success) {\n\t\t\ttoast.error(<ToastUI message={response.data.message} type={\"Error\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t\treturn false\n\t\t} else {\n\t\t\ttoast.success(<ToastUI message={response.data.message} type={\"Success\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t\treturn true;\n\t\t}\n\t}),\n\tupdateStudent: thunk(async (actions, payload, { getStoreActions }) => {\n\t\tlet response = await updateStudent(payload);\n\t\ttoast.dismiss();\n\t\tif(!response.success) {\n\t\t\ttoast.error(<ToastUI message={response.data.message} type={\"Error\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t\treturn false\n\t\t} else {\n\t\t\tactions.setStudent(response.data);\n\t\t\ttoast.success(<ToastUI message={response.data.message} type={\"Success\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t\treturn true;\n\t\t}\n\t}),\n\n\tgetStudent: thunk(async (actions, payload, { getStoreActions }) => {\n\t\tlet response = await getStudent(payload);\n\t\ttoast.dismiss();\n\t\tif(!response.success) {\n\t\t\ttoast.error(<ToastUI message={response.data.message} type={\"Error\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t\treturn false\n\t\t} else {\n\t\t\tawait actions.setStudent(response.data);\n\t\t\treturn response.data;\n\t\t}\n\t}),\n\n\n\tdeleteStudent: thunk(async (actions, payload, { getStoreActions }) => {\n\t\tlet response = await deleteStudent(payload);\n\t\ttoast.dismiss();\n\t\tif(!response.success) {\n\t\t\ttoast.error(<ToastUI message={response.data.message} type={\"Error\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t\treturn false\n\t\t} else {\n\t\t\ttoast.success(<ToastUI message={response.data.message} type={\"Success\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t\treturn true;\n\t\t}\n\t}),\n\tgetUserProfile: thunk(async (actions, payload, { getStoreActions }) => {\n\t\tlet response = await getUserProfile(payload);\n\t\t//toast.dismiss();\n\t\tif(!response.success) {\n\t\t\ttoast.error(<ToastUI message={response.data.message} type={\"Error\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t\treturn false\n\t\t} else {\n\t\t\tawait actions.setUserProfile(response.data.user);\n\t\t}\n\t}),\n\tgetAllClients: thunk(async (actions, payload, { getStoreActions }) => {\n\t\tlet response = await getAllClients();\n\t\t//toast.dismiss();\n\t\tif(!response.success) {\n\t\t\ttoast.error(<ToastUI message={response.data.message} type={\"Error\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t\treturn false\n\t\t} else {\n\t\t\tawait actions.setAllClients(response.data);\n\t\t}\n\t}),\n\tgetAllTerms: thunk(async (actions, payload, { getStoreActions }) => {\n\t\tlet response = await getAllTerms();\n\t\t//toast.dismiss();\n\t\tif(!response.success) {\n\t\t\ttoast.error(<ToastUI message={response.data.message} type={\"Error\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t\treturn false\n\t\t} else {\n\t\t\tawait actions.setAllTerms(response.data);\n\t\t}\n\t}),\n\t\n\tsetTimeTable: action((state, payload) => {\n\t\tstate.timetable = payload;\n\t}),\n\n\tgetTimeTable: thunk(async (actions, payload, { getStoreActions }) => {\n\t\tlet response = await getTimeTable(payload);\n\t\t//toast.dismiss();\n\t\tif(response.status != 200) {\n\t\t\ttoast.error(<ToastUI message={response.data.message} type={\"Error\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t\treturn false\n\t\t} else {\n\t\t\tawait actions.setTimeTable(response.data);\n\t\t}\n\t}),\n\tsaveTimeTableSlots: thunk(async (actions, payload, { getStoreActions }) => {\n\t\tlet response = await saveTimeTableSlots(payload);\n\t\t//toast.dismiss();\n\t\tif(response.status != 200) {\n\t\t\ttoast.error(<ToastUI message={response.data.message} type={\"Error\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t\treturn false\n\t\t} else {\n\t\t\ttoast.success(<ToastUI message={response.data.message} type={\"Success\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t\treturn true;\n\t\t}\n\t}),\n\taddEditTimeTable:thunk(async (actions, payload, { getStoreActions }) => {\n\t\tlet response = await addEditTimeTable(payload);\n\t\t//toast.dismiss();\n\t\tif(response.status != 200) {\n\t\t\ttoast.error(<ToastUI message={response.data.message} type={\"Error\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t\treturn false\n\t\t} else {\n\t\t\ttoast.success(<ToastUI message={response.data.message} type={\"Success\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t\treturn true;\n\t\t}\n\t}),\n\tcheckTimeTableExist:thunk(async (actions, payload, { getStoreActions }) => {\n\t\tlet response = await checkTimeTableExist(payload);\n\t\t//toast.dismiss();\n\t\tif(response.status != 200) {\n\t\t\ttoast.error(<ToastUI message={response.data.message} type={\"Error\"} />);\n\t\t\treturn false\n\t\t} else {\n\t\t\t\n\t\t\treturn response.data.timetable_exists;\n\t\t}\n\t}),\n\tassignStudent:thunk(async (actions, payload, { getStoreActions }) => {\n\t\tlet response = await assignStudent(payload);\n\t\t//toast.dismiss();\n\t\tif(!response.success) {\n\t\t\ttoast.error(response.data.message)\n\t\t\treturn false\n\t\t} else {\n\t\t\ttoast.success(<ToastUI message={response.data.message} type={\"Success\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t\treturn true;\n\t\t}\n\t}),\n\tremoveStudentFromGroup: thunk(async (actions, payload, { getStoreActions }) => {\n\t\t//debugger;\n\t\tlet response = await removeStudentFromGroup(payload);\n\t\t//toast.dismiss();\n\t\tif(!response.success) {\n\t\t\ttoast.error(<ToastUI message={response.data.message} type={\"Error\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t\treturn false\n\t\t} else {\n\t\t\ttoast.success(<ToastUI message={response.data.message} type={\"Success\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t\treturn true;\n\t\t}\n\t}),\n\tremoveStudentFromForm:thunk(async (actions, payload, { getStoreActions }) => {\n\t\t//debugger;\n\t\tlet response = await removeStudentFromForm(payload);\n\t\t//toast.dismiss();\n\t\tif(!response.success) {\n\t\t\ttoast.error(<ToastUI message={response.data.message} type={\"Error\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t\treturn false\n\t\t} else {\n\t\t\ttoast.success(<ToastUI message={response.data.message} type={\"Success\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t\treturn true;\n\t\t}\n\t}),\n\tsetAllClientsPerGroup: action((state, payload) => {\n\t\tstate.allClientsPerGroup = payload;\n\t}),\n\tgetAllClientsPerGroup: thunk(async (actions, payload, { getStoreActions }) => {\n\t\tlet response = await getAllClientsPerGroup(payload);\n\t\t//toast.dismiss();\n\t\tif(!response.success) {\n\t\t\ttoast.error(<ToastUI message={response.data.message} type={\"Error\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t\treturn false\n\t\t} else {\n\t\t\tawait actions.setAllClientsPerGroup(response.data);\n\t\t\treturn true;\n\t\t}\n\t}),\n\tremoveClientFromGroup: thunk(async (actions, payload, { getStoreActions }) => {\n\t\t//;\n\t\tlet response = await removeClientFromGroup(payload);\n\t\t//toast.dismiss();\n\t\tif(!response.success) {\n\t\t\ttoast.error(<ToastUI message={response.data.message} type={\"Error\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t\treturn false\n\t\t} else {\n\t\t\ttoast.success(<ToastUI message={response.data.message} type={\"Success\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t\treturn true;\n\t\t}\n\t}),\n\n\tsetTimeTableSlots: action((state, payload) => {\n\t    state.timeTableSlots = payload;\n  \t}),\n\n\tsetSearchedSubjects: action((state, payload) => {\n\t    state.searchedSubjects = payload;\n  \t}),\n\n\tgetTimeTableSlots:thunk(async (actions, payload, { getStoreActions }) => {\n\t\tlet response = await getTimeTableSlots(payload);\n\t\t//toast.dismiss();\n\t\tif(response.status != 200) {\n\t\t\ttoast.error(<ToastUI message={response.data.message} type={\"Error\"} />, {\n        \t\ttoastId: 'toast-show'\n     \t\t});\n\t\t\treturn false\n\t\t} else {\n\t\t\tawait actions.setTimeTableSlots(response.data);\n\t\t\treturn true;\n\t\t}\n\t}),\n\n\tsearchSubjects:thunk(async (actions, payload, { getStoreActions }) => {\n\t\tlet response = await searchSubjects(payload);\n\t\t//toast.dismiss();\n\t\tif(response.status != 200) {\n\t\t\ttoast.error(<ToastUI message={response.data.message} type={\"Error\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t\treturn false\n\t\t} else {\n\t\t\tawait actions.setSearchedSubjects(response.data);\n\t\t\treturn true;\n\t\t}\n\t}),\n\tsetAllStudentAssignedSubjects: action((state, payload) => {\n\t\tstate.studentAssignedSubjects = payload;\n\t}),\n\tgetAllStudentAssignedSubjects: thunk(async (actions, payload, { getStoreActions }) => {\n\t\tlet response = await getAllStudentAssignedSubjects(payload);\n\t\t//toast.dismiss();\n\t\tif(!response.success) {\n\t\t\ttoast.error(<ToastUI message={response.data.message} type={\"Error\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t\treturn false\n\t\t} else {\n\t\t\tawait actions.setAllStudentAssignedSubjects(response.data);\n\t\t\treturn true;\n\t\t}\n\t}),\n\tsetAllClientAssignedSubjects: action((state, payload) => {\n\t\tstate.clientAssignedSubjects = payload;\n\t}),\n\tgetAllClientAssignedSubjects: thunk(async (actions, payload, { getStoreActions }) => {\n\t\tlet response = await getAllClientAssignedSubjects(payload);\n\t\t//toast.dismiss();\n\t\tif(!response.success) {\n\t\t\ttoast.error(<ToastUI message={response.data.message} type={\"Error\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t\treturn false\n\t\t} else {\n\t\t\tawait actions.setAllClientAssignedSubjects(response.data);\n\t\t\treturn true;\n\t\t}\n\t}),\n\tsetAllAvtars:action((state, payload) => {\n\t\tstate.allAvtars = payload;\n\t}),\n\tgetAllAvtars:thunk(async (actions, payload, { getStoreActions }) => {\n\t\tlet response = await getAllAvtars(payload);\n\t\t//toast.dismiss();\n\t\tif(!response.success) {\n\t\t\ttoast.error(<ToastUI message={response.data.message} type={\"Error\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t\treturn false\n\t\t} else {\n\t\t\tawait actions.setAllAvtars(response.data);\n\t\t\treturn true;\n\t\t}\n\t}),\n\tassignAvtarToAdmin:thunk(async (actions, payload, { getStoreActions }) => {\n\t\tlet response = await assignAvtarToAdmin(payload);\n\t\t//toast.dismiss();\n\t\tif(!response.success) {\n\t\t\ttoast.error(<ToastUI message={response.data.message} type={\"Error\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t\treturn false\n\t\t} else {\n\t\t\ttoast.success(<ToastUI message={response.data.message} type={\"Success\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t\treturn response;\n\t\t}\n\t}),\n\tsetFormDetails:action((state, payload) => {\n\t\tstate.formDetails = payload;\n\t}),\n\tgetFormDetails:thunk(async (actions, payload, { getStoreActions }) => {\n\t\tlet response = await getFormDetails(payload);\n\t\t//toast.dismiss();\n\t\tif(!response.success) {\n\t\t\ttoast.error(<ToastUI message={response.data.message} type={\"Error\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t\treturn false\n\t\t} else {\n\t\t\tawait actions.setFormDetails(response.data);\n\t\t\treturn true;\n\t\t}\n\t}),\n\tsetFormStudentList:action((state, payload) => {\n\t\tstate.formStudentsList = payload;\n\t}),\n\tgetStudentByForm:thunk(async (actions, payload, { getStoreActions }) => {\n\t\tlet response = await getStudentByForm(payload);\n\t\t//toast.dismiss();\n\t\tif(!response.success) {\n\t\t\ttoast.error(<ToastUI message={response.data.message} type={\"Error\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t\treturn false\n\t\t} else {\n\t\t\tawait actions.setFormStudentList(response.data);\n\t\t\treturn true;\n\t\t}\n\t}),\n\tmoveStudentToNewGroup:thunk(async (actions, payload, { getStoreActions }) => {\n\t\tlet response = await moveStudentToNewGroup(payload);\n\t\t//toast.dismiss();\n\t\tif(!response.success) {\n\t\t\ttoast.error(<ToastUI message={response.data.message} type={\"Error\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t\treturn false\n\t\t} else {\n\t\t\ttoast.success(<ToastUI message={response.data.message} type={\"Success\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t\treturn true;\n\t\t}\n\t}),\n\tmoveStudentToNewForm:thunk(async (actions, payload, { getStoreActions }) => {\n\t\tlet response = await moveStudentToNewForm(payload);\n\t\t//toast.dismiss();\n\t\tif(!response.success) {\n\t\t\ttoast.error(<ToastUI message={response.data.message} type={\"Error\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t\treturn false\n\t\t} else {\n\t\t\ttoast.success(<ToastUI message={response.data.message} type={\"Success\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t\treturn true;\n\t\t}\n\t}),\n\tsetStudentProgressbar:action((state, payload) => {\n\t\tstate.studentProgressbar = payload;\n\t}),\n\tsetNewStudentData:action((state,payload)=>{\n\t\tstate.newStudentData = payload\n\t}),\n\tsetStudentStatus:action((state, payload) => {\n\t\tstate.studentStatus = payload;\n\t}),\n\tgetStudentsStatus:thunk(async (actions, payload, { getStoreActions }) => {\n\t\tlet response = await getStudentsStatus(payload);\n\t\t//toast.dismiss();\n\t\tif(!response.success) {\n\t\t\ttoast.error(<ToastUI message={response.data.message} type={\"Error\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t\treturn false\n\t\t} else {\n\t\t\tawait actions.setStudentStatus(response.data);\n\t\t\treturn true;\n\t\t}\n\t}),\n\tsetClientStatus:action((state, payload) => {\n\t\tstate.clientStatus = payload;\n\t}),\n\tgetClientStatus:thunk(async (actions, payload, { getStoreActions }) => {\n\t\tlet response = await getClientStatus(payload);\n\t\t//toast.dismiss();\n\t\tif(!response.success) {\n\t\t\ttoast.error(<ToastUI message={response.data.message} type={\"Error\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t\treturn false\n\t\t} else {\n\t\t\tawait actions.setClientStatus(response.data);\n\t\t\treturn true;\n\t\t}\n\t}),\n\tsetYearDetails:action((state, payload) => {\n\t\tstate.yearDetails = payload;\n\t}),\n\tgetYearDetails:thunk(async (actions, payload, { getStoreActions }) => {\n\t\tlet response = await getYearDetails(payload);\n\t\t//toast.dismiss();\n\t\tif(!response.success) {\n\t\t\ttoast.error(<ToastUI message={response.data.message} type={\"Error\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t\treturn false\n\t\t} else {\n\t\t\tawait actions.setYearDetails(response.data);\n\t\t\treturn true;\n\t\t}\n\t}),\n\tsetYearStudentList:action((state, payload) => {\n\t\tstate.yearStudentsList = payload;\n\t}),\n\tgetStudentByYear:thunk(async (actions, payload, { getStoreActions }) => {\n\t\tlet response = await getStudentByYear(payload);\n\t\t//toast.dismiss();\n\t\tif(!response.success) {\n\t\t\ttoast.error(<ToastUI message={response.data.message} type={\"Error\"} />, {\n        toastId: 'toast-show'\n      });\n\t\t\treturn false\n\t\t} else {\n\t\t\tawait actions.setYearStudentList(response.data);\n\t\t\treturn true;\n\t\t}\n\t}),\n\tsetClientTopPerformance:action((state, payload) => {\n\t\tstate.clientTopPerformance = payload;\n\t}),\n\t// getClientTopPerformance:thunk(async (actions, payload, { getStoreActions }) => {\n\t// \tlet response = await getClientTopPerformance(payload);\n\t// \tif(!response.success) {\n\t// \t\ttoast.error(<ToastUI message={response.data.message} type={\"Error\"} />, {\n    //     \t\ttoastId: 'toast-show'\n    //  \t\t });\n\t// \t\treturn false\n\t// \t} else {\n\t// \t\tawait actions.setClientTopPerformance(response.data);\n\t// \t\treturn true;\n\t// \t}\n\t// }),\n\tsetStudentTopPerformance:action((state, payload) => {\n\t\tstate.studentTopPerformance = payload;\n\t}),\n\tgetStudentTopPerformance:thunk(async (actions, payload, { getStoreActions }) => {\n\t\tlet response = await getStudentTopPerformance(payload);\n\t\tif(!response.success) {\n\t\t\ttoast.error(<ToastUI message={response.data.message} type={\"Error\"} />, {\n        \t\ttoastId: 'toast-show'\n     \t\t });\n\t\t\treturn false\n\t\t} else {\n\t\t\tawait actions.setStudentTopPerformance(response.data);\n\t\t\treturn true;\n\t\t}\n\t}),\n\tchangePassword: thunk(async (actions, payload, { getStoreActions }) => {\n\t\tlet response = await changePassword(payload);\n\t\tif(!response.success) {\n\t\t\ttoast.error(<ToastUI message={response.data.message} type={\"error\"} />);\n\t\t\treturn false\n\t\t} else {\n\t\t\ttoast.success(<ToastUI message={response.data.message} type={\"Success\"} />);\n\t\t\treturn true;\n\t\t}\n\t})\n};\n\nexport default adminModel;\n","/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/api/AuthApi.js",["562","563","564","565","566","567"],"import axios from 'axios';\nimport { getToken, setToken, handleInvalidToken } from 'recruitment-utils/Service.js';\nconst AuthInstance = axios.create();\nAuthInstance.interceptors.response.use(function (response) {\n\tif (response.headers) {\n\t\t//localStorage.setItem('api_token', response.headers.api_token);\n\t}\n\n\tlet msg = response.data.message;\n\t// console.log(msg)\n\tif (msg == 'Unauthenticated' || msg == 'session_timeout' || msg == 'server_error' || msg == 'token_not_found') {\n\t\thandleInvalidToken();\n\t}\n\treturn response;\n}, function (error) {\n\tif (!error.response) {\n\t\treturn { data: { data: \"\", message: \"server_error\", status: 500 } }\n\t} else {\n\t\tif (error.response.status == 400) {\n\t\t\treturn { data: { data: \"\", message: error.response.data.message, status: error.response.status } }\n\t\t}\n\n\t\treturn Promise.reject(error);\n\t}\n});\n\nAuthInstance.interceptors.request.use(function (config) {\n\tconst token = getToken();\n\tif (token) {\n\t\tconfig.headers.Authorization = token;\n\t}\n\n\treturn config;\n});\n\nconst apiUrl = process.env.REACT_APP_RECRUITMENT_API;\n\nexport const loginUser = async (formData) => {\n\ttry {\n\t\tlet response = await AuthInstance.post(apiUrl + '/auth/login', formData);\n\t\treturn response.data;\n\t} catch (error) {\n\t\treturn error.response.data;\n\t}\n};\n\nexport const submitOTP = async(formData) => {\n\ttry{\n\t\tlet response = await AuthInstance.post(apiUrl + '/verify_otp' , formData)\n\t\treturn response.data\n\t}\n\tcatch(error){\n\t\treturn error.response.data\n\t}\n};\n\nexport const resendOTP = async(formData) => {\n\ttry{\n\t\tlet response = await AuthInstance.post(apiUrl + '/resend_otp' , formData)\n\t\treturn response.data\n\t}\n\tcatch(error){\n\t\treturn error.response.data\n\t}\n};\n\nexport const logoutUser = async (formData) => {\n\ttry {\n\t\tlet response = await AuthInstance.post(apiUrl + '/auth/logout', formData);\n\t\treturn response.data;\n\t} catch (error) {\n\t\treturn error.response.data;\n\t}\n};\n\nexport const forgetPassword = async (formData) =>{\n\ttry {\n\t\tlet response = await AuthInstance.post(apiUrl + '/admin/forgot-password',formData);\n\t\treturn response.data;\n\t} catch (error) {\n\t\treturn error.response.data;\n\t}\n}\nexport const resetPassword = async (formData) =>{\n\ttry {\n\t\tlet response = await AuthInstance.post(apiUrl + '/admin/reset-password',formData);\n\t\treturn response.data;\n\t} catch (error) {\n\t\treturn error.response.data;\n\t}\n}","/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/web/pages/Admin/Clients/ManageClients.js",["568","569","570","571","572","573","574","575","576","577","578","579","580","581","582","583","584","585","586","587","588","589","590","591","592","593","594","595","596","597","598"],"/media/gaurav/C222B0A022B09ABD/recruitment_ai/src/web/pages/Admin/Clients/Clients.js",["599","600","601","602","603","604","605","606","607","608","609","610","611","612","613","614","615","616","617","618","619","620","621","622","623","624","625","626","627","628","629","630","631","632","633","634","635","636","637","638","639","640","641","642","643","644","645","646","647","648","649","650","651","652","653","654","655","656","657","658","659","660","661","662","663","664","665","666","667","668","669","670","671","672","673","674","675","676","677","678","679","680","681","682","683","684","685","686","687","688","689","690","691","692","693","694","695"],"import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { Link, useHistory } from \"react-router-dom\";\nimport { validateEmail } from 'recruitment-utils/Validators.js';\nimport { useStoreActions, useStoreState } from 'easy-peasy';\nimport Overlay from \"recruitment-components/Overlay/Overlay.js\";\nimport TableOne from \"recruitment-components/TableOne/TableOne.js\";\nimport Button from \"recruitment-components/Button/Button.js\";\nimport validator from \"validator\";\nimport Moment from 'moment';\nimport { ToastContainer, toast } from \"react-toastify\";\nimport CustomLoader from \"recruitment-components/CustomLoader/CustomLoader.js\";\nimport ToastUI from \"recruitment-components/ToastUI/ToastUI.js\";\nimport {NAME_ERROR_MESSAGE, INVALID_FNAME, INVALID_LNAME, ERROR_INVALID_EMAIL, FIRSTNAME_ERROR_MESSAGE, LASTNAME_ERROR_MESSAGE, ERROR_ADDRESS, ERROR_INVALID_DOB, ERROR_INVALID_PHONE } from 'recruitment-message';\nimport lodash from \"lodash\";\nimport { uploadClientCSV } from 'recruitment-api/AdminApi.js';\nimport ResetIcon from \"recruitment-images/refresh-arrows-circle-with-clockwise-rotation.svg\";\nconst Clients = (props) => {\n  const history = useHistory();\n  let newRef = useRef(null)\n  const [noRecord, showNoRecord] = useState(false);\n  const [selectedClients, setSelectedClients] = useState([]);\n  const [showFullPageLoader, setShowFullPageLoader] = useState(false);\n  const [showCsvPopup, setShowCsvPopup] = useState(false)\n  const [showOverlay, setShowOverlay] = useState(false);\n  const [clientsData, setClientsData] = useState([]);\n  const [showDelete, setShowDelete] = useState(false);\n  const [deleteClientId, setDeleteClientId] = useState(0);\n  const [showCustomLoader, setShowCustomLoader] = useState(false);\n  const [disableButton, setDisableButton] = useState(false);\n  const [showAddClient, setShowAddClient] = useState(false);\n  const [searchClients, setSearchClients] = useState('');\n  const [selectedYear, setSelectedYear] = useState(0);\n  const [selectedSubject, setSelectedSubject] = useState('');\n  const [yearsData, setYearsData] = useState([]);\n  const [subjectData, setSubjectData] = useState([]);\n  const clients = useStoreState((state) => state.admin.clients);\n  const allYears = useStoreState((state) => state.admin.allYears);\n  const subjects = useStoreState((state) => state.admin.subjects);\n  const previousClientFilter = useStoreState((state) => state.admin.previousClientFilter)\n  const getClients = useStoreActions((actions) => actions.admin.getClients);\n  const deleteClient = useStoreActions((actions) => actions.admin.deleteClient);\n  const createClient = useStoreActions((actions) => actions.admin.createClient);\n  const getAllYears = useStoreActions((actions) => actions.admin.getAllYears);\n  const getSubjects = useStoreActions((actions) => actions.admin.getSubjects);\n  const setPreviousFilterOfClient = useStoreActions((actions) => actions.admin.setPreviousFilterOfClient);\n  const [showSubmenu, setShowSubmenu] = useState(false);\n  const [nameError,setNameError] = useState()\n\n  //Add client modal\n  const [email, setEmailAddress] = useState('');\n  const [forename, setForename] = useState('');\n  const [surname, setSurname] = useState('');\n  const [emailError, setEmailError] = useState(false);\n  const [forenameError, setForenameError] = useState(false);\n  const [surnameError, setSurnameError] = useState(false);\n  const [address, setAddress] = useState('');\n  const [dob, setDob] = useState(new Date());\n  const [dobError, setDobError] = useState(false);\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [phoneError, setPhoneError] = useState(false);\n  const [addressError, setAddressError] = useState(false);\n  //Darg and Drop constants\n\n  let dragCounter = useRef(0);\n  const [dragFileList, setDragFileList] = useState([]);\n  const [fileListError, setFileListError] = useState(false);\n  const [currentFile, setCurrentFile] = useState(undefined);\n  const [progress, setProgress] = useState(0);\n\n  const [confirmText, setConfirmText] = useState('');\n  const [clientsFullData, setClientsFullData] = useState([]);\n\n  const hiddenFileInput = React.useRef(null);\n\n  useEffect(() => {\n    getClients();\n  }, [])\n\n  useEffect(() => {\n    if(clients) {\n      setClientsData(clients)\n    }\n  }, [clients]);\n\n\n  const columns = [\n      {\n        name: 'First Name',\n        sortable: false,\n        cell: (data) => data.first_name,\n        width: '20%',\n        center: true,\n      },\n      {\n        name: 'Last Name',\n        sortable: true,\n        cell: (data) => data.last_name,\n        width: '20%',\n      },\n      {\n        name: 'Email',\n        sortable: false,\n        cell: (data) => data.email,\n        width: '30%',\n      },\n      {\n        name: '',\n        sortable: false,\n        cell: (data) => (\n          <>\n            <Button type=\"line-button\" label=\"Activate\" onClick={() => {}} />\n            \n          </>\n        ),\n        width: '30%',\n        center: false,\n      },\n    ];\n\n  const goToUrl = (url) => {\n    history.push(url);\n  }\n\n  return (\n    <React.Fragment>\n      {showFullPageLoader &&\n        <CustomLoader />\n      }\n      <div>\n        <div className=\"section pb-0\">\n          <h1 className=\"pageTitle\"><span className=\"pr-4\">Clients</span>\n            <button className=\"topButton float-right\" onClick={() => goToUrl('/add-client')}><i className=\"fa fa-plus-circle\" /> Add Client\n          </button></h1>\n          <p className=\"titleInfo\">Here you can view, enrol and manage permanent and replacement clients.</p>\n        </div>\n        <TableOne\n          columns={columns}\n          data={clientsData}\n        />\n        \n      </div>\n      {showDelete &&\n        <Overlay\n          title={\"Are you sure?\"}\n          subTitle={confirmText}\n          closeOverlay={() => setShowDelete(false)}\n          cancelOverlay={() => setShowDelete(false)}\n          submitOverlay={() => {}}\n          disableBtn={disableButton}\n        >\n\n        </Overlay>\n      }\n      \n      \n    </React.Fragment>\n  );\n};\n\nexport default Clients;\n",{"ruleId":"696","replacedBy":"697"},{"ruleId":"698","replacedBy":"699"},{"ruleId":"700","severity":1,"message":"701","line":1,"column":8,"nodeType":"702","messageId":"703","endLine":1,"endColumn":13},{"ruleId":"700","severity":1,"message":"704","line":2,"column":10,"nodeType":"702","messageId":"703","endLine":2,"endColumn":14},{"ruleId":"700","severity":1,"message":"705","line":3,"column":8,"nodeType":"702","messageId":"703","endLine":3,"endColumn":15},{"ruleId":"700","severity":1,"message":"706","line":11,"column":8,"nodeType":"702","messageId":"703","endLine":11,"endColumn":17},{"ruleId":"700","severity":1,"message":"707","line":12,"column":10,"nodeType":"702","messageId":"703","endLine":12,"endColumn":15},{"ruleId":"700","severity":1,"message":"708","line":15,"column":10,"nodeType":"702","messageId":"703","endLine":15,"endColumn":24},{"ruleId":"700","severity":1,"message":"709","line":17,"column":10,"nodeType":"702","messageId":"703","endLine":17,"endColumn":29},{"ruleId":"700","severity":1,"message":"710","line":17,"column":56,"nodeType":"702","messageId":"703","endLine":17,"endColumn":78},{"ruleId":"711","severity":1,"message":"712","line":24,"column":6,"nodeType":"713","endLine":24,"endColumn":8,"suggestions":"714"},{"ruleId":"700","severity":1,"message":"715","line":29,"column":10,"nodeType":"702","messageId":"703","endLine":29,"endColumn":17},{"ruleId":"700","severity":1,"message":"716","line":29,"column":19,"nodeType":"702","messageId":"703","endLine":29,"endColumn":29},{"ruleId":"700","severity":1,"message":"717","line":30,"column":10,"nodeType":"702","messageId":"703","endLine":30,"endColumn":15},{"ruleId":"700","severity":1,"message":"718","line":30,"column":17,"nodeType":"702","messageId":"703","endLine":30,"endColumn":25},{"ruleId":"700","severity":1,"message":"719","line":31,"column":10,"nodeType":"702","messageId":"703","endLine":31,"endColumn":13},{"ruleId":"700","severity":1,"message":"720","line":31,"column":15,"nodeType":"702","messageId":"703","endLine":31,"endColumn":21},{"ruleId":"700","severity":1,"message":"721","line":38,"column":10,"nodeType":"702","messageId":"703","endLine":38,"endColumn":20},{"ruleId":"700","severity":1,"message":"722","line":40,"column":10,"nodeType":"702","messageId":"703","endLine":40,"endColumn":22},{"ruleId":"700","severity":1,"message":"723","line":56,"column":9,"nodeType":"702","messageId":"703","endLine":56,"endColumn":11},{"ruleId":"700","severity":1,"message":"724","line":63,"column":9,"nodeType":"702","messageId":"703","endLine":63,"endColumn":20},{"ruleId":"711","severity":1,"message":"725","line":78,"column":6,"nodeType":"713","endLine":78,"endColumn":8,"suggestions":"726"},{"ruleId":"727","severity":1,"message":"728","line":93,"column":34,"nodeType":"729","messageId":"730","endLine":93,"endColumn":36},{"ruleId":"731","severity":1,"message":"732","line":110,"column":20,"nodeType":"733","messageId":"734","endLine":110,"endColumn":22},{"ruleId":"731","severity":1,"message":"732","line":114,"column":23,"nodeType":"733","messageId":"734","endLine":114,"endColumn":25},{"ruleId":"731","severity":1,"message":"735","line":123,"column":28,"nodeType":"733","messageId":"734","endLine":123,"endColumn":30},{"ruleId":"731","severity":1,"message":"732","line":155,"column":44,"nodeType":"733","messageId":"734","endLine":155,"endColumn":46},{"ruleId":"731","severity":1,"message":"732","line":156,"column":54,"nodeType":"733","messageId":"734","endLine":156,"endColumn":56},{"ruleId":"731","severity":1,"message":"732","line":159,"column":13,"nodeType":"733","messageId":"734","endLine":159,"endColumn":15},{"ruleId":"727","severity":1,"message":"728","line":182,"column":30,"nodeType":"729","messageId":"730","endLine":182,"endColumn":32},{"ruleId":"727","severity":1,"message":"728","line":192,"column":30,"nodeType":"729","messageId":"730","endLine":192,"endColumn":32},{"ruleId":"700","severity":1,"message":"736","line":209,"column":11,"nodeType":"702","messageId":"703","endLine":209,"endColumn":16},{"ruleId":"737","severity":1,"message":"738","line":293,"column":35,"nodeType":"739","endLine":293,"endColumn":96},{"ruleId":"700","severity":1,"message":"704","line":2,"column":10,"nodeType":"702","messageId":"703","endLine":2,"endColumn":14},{"ruleId":"700","severity":1,"message":"740","line":10,"column":8,"nodeType":"702","messageId":"703","endLine":10,"endColumn":12},{"ruleId":"700","severity":1,"message":"741","line":11,"column":8,"nodeType":"702","messageId":"703","endLine":11,"endColumn":15},{"ruleId":"700","severity":1,"message":"742","line":17,"column":10,"nodeType":"702","messageId":"703","endLine":17,"endColumn":20},{"ruleId":"700","severity":1,"message":"743","line":17,"column":22,"nodeType":"702","messageId":"703","endLine":17,"endColumn":35},{"ruleId":"711","severity":1,"message":"744","line":50,"column":6,"nodeType":"713","endLine":50,"endColumn":8,"suggestions":"745"},{"ruleId":"731","severity":1,"message":"732","line":75,"column":25,"nodeType":"733","messageId":"734","endLine":75,"endColumn":27},{"ruleId":"731","severity":1,"message":"735","line":88,"column":39,"nodeType":"733","messageId":"734","endLine":88,"endColumn":41},{"ruleId":"731","severity":1,"message":"732","line":91,"column":16,"nodeType":"733","messageId":"734","endLine":91,"endColumn":18},{"ruleId":"731","severity":1,"message":"732","line":103,"column":41,"nodeType":"733","messageId":"734","endLine":103,"endColumn":43},{"ruleId":"731","severity":1,"message":"735","line":138,"column":12,"nodeType":"733","messageId":"734","endLine":138,"endColumn":14},{"ruleId":"731","severity":1,"message":"732","line":197,"column":24,"nodeType":"733","messageId":"734","endLine":197,"endColumn":26},{"ruleId":"731","severity":1,"message":"732","line":198,"column":27,"nodeType":"733","messageId":"734","endLine":198,"endColumn":29},{"ruleId":"696","replacedBy":"746"},{"ruleId":"698","replacedBy":"747"},{"ruleId":"700","severity":1,"message":"704","line":2,"column":10,"nodeType":"702","messageId":"703","endLine":2,"endColumn":14},{"ruleId":"700","severity":1,"message":"748","line":3,"column":10,"nodeType":"702","messageId":"703","endLine":3,"endColumn":28},{"ruleId":"700","severity":1,"message":"705","line":4,"column":8,"nodeType":"702","messageId":"703","endLine":4,"endColumn":15},{"ruleId":"711","severity":1,"message":"749","line":65,"column":13,"nodeType":"729","endLine":69,"endColumn":4},{"ruleId":"711","severity":1,"message":"750","line":69,"column":6,"nodeType":"713","endLine":69,"endColumn":23,"suggestions":"751"},{"ruleId":"711","severity":1,"message":"752","line":72,"column":6,"nodeType":"713","endLine":72,"endColumn":20,"suggestions":"753"},{"ruleId":"711","severity":1,"message":"754","line":96,"column":6,"nodeType":"713","endLine":96,"endColumn":34,"suggestions":"755"},{"ruleId":"731","severity":1,"message":"732","line":180,"column":31,"nodeType":"733","messageId":"734","endLine":180,"endColumn":33},{"ruleId":"731","severity":1,"message":"732","line":184,"column":27,"nodeType":"733","messageId":"734","endLine":184,"endColumn":29},{"ruleId":"731","severity":1,"message":"732","line":188,"column":31,"nodeType":"733","messageId":"734","endLine":188,"endColumn":33},{"ruleId":"731","severity":1,"message":"735","line":192,"column":31,"nodeType":"733","messageId":"734","endLine":192,"endColumn":33},{"ruleId":"731","severity":1,"message":"732","line":242,"column":38,"nodeType":"733","messageId":"734","endLine":242,"endColumn":40},{"ruleId":"731","severity":1,"message":"732","line":247,"column":36,"nodeType":"733","messageId":"734","endLine":247,"endColumn":38},{"ruleId":"731","severity":1,"message":"732","line":252,"column":32,"nodeType":"733","messageId":"734","endLine":252,"endColumn":34},{"ruleId":"731","severity":1,"message":"735","line":256,"column":22,"nodeType":"733","messageId":"734","endLine":256,"endColumn":24},{"ruleId":"731","severity":1,"message":"732","line":261,"column":13,"nodeType":"733","messageId":"734","endLine":261,"endColumn":15},{"ruleId":"731","severity":1,"message":"732","line":266,"column":36,"nodeType":"733","messageId":"734","endLine":266,"endColumn":38},{"ruleId":"731","severity":1,"message":"735","line":271,"column":37,"nodeType":"733","messageId":"734","endLine":271,"endColumn":39},{"ruleId":"737","severity":1,"message":"738","line":422,"column":13,"nodeType":"739","endLine":422,"endColumn":86},{"ruleId":"756","severity":1,"message":"757","line":422,"column":86,"nodeType":"739","endLine":422,"endColumn":115},{"ruleId":"737","severity":1,"message":"738","line":453,"column":41,"nodeType":"739","endLine":455,"endColumn":16},{"ruleId":"731","severity":1,"message":"732","line":476,"column":37,"nodeType":"733","messageId":"734","endLine":476,"endColumn":39},{"ruleId":"756","severity":1,"message":"757","line":477,"column":119,"nodeType":"739","endLine":477,"endColumn":247},{"ruleId":"756","severity":1,"message":"757","line":484,"column":119,"nodeType":"739","endLine":484,"endColumn":209},{"ruleId":"731","severity":1,"message":"732","line":493,"column":39,"nodeType":"733","messageId":"734","endLine":493,"endColumn":41},{"ruleId":"756","severity":1,"message":"757","line":494,"column":121,"nodeType":"739","endLine":494,"endColumn":249},{"ruleId":"756","severity":1,"message":"757","line":501,"column":121,"nodeType":"739","endLine":501,"endColumn":211},{"ruleId":"737","severity":1,"message":"738","line":509,"column":56,"nodeType":"739","endLine":511,"endColumn":16},{"ruleId":"700","severity":1,"message":"708","line":3,"column":10,"nodeType":"702","messageId":"703","endLine":3,"endColumn":24},{"ruleId":"700","severity":1,"message":"758","line":9,"column":8,"nodeType":"702","messageId":"703","endLine":9,"endColumn":16},{"ruleId":"711","severity":1,"message":"759","line":47,"column":8,"nodeType":"713","endLine":47,"endColumn":10,"suggestions":"760"},{"ruleId":"711","severity":1,"message":"761","line":56,"column":8,"nodeType":"713","endLine":56,"endColumn":15,"suggestions":"762"},{"ruleId":"727","severity":1,"message":"728","line":60,"column":45,"nodeType":"729","messageId":"730","endLine":60,"endColumn":47},{"ruleId":"727","severity":1,"message":"728","line":62,"column":44,"nodeType":"729","messageId":"730","endLine":62,"endColumn":46},{"ruleId":"711","severity":1,"message":"763","line":76,"column":8,"nodeType":"713","endLine":76,"endColumn":18,"suggestions":"764"},{"ruleId":"711","severity":1,"message":"765","line":83,"column":8,"nodeType":"713","endLine":83,"endColumn":10,"suggestions":"766"},{"ruleId":"727","severity":1,"message":"728","line":89,"column":45,"nodeType":"729","messageId":"730","endLine":89,"endColumn":47},{"ruleId":"727","severity":1,"message":"728","line":104,"column":47,"nodeType":"729","messageId":"730","endLine":104,"endColumn":49},{"ruleId":"727","severity":1,"message":"728","line":122,"column":35,"nodeType":"729","messageId":"730","endLine":122,"endColumn":37},{"ruleId":"731","severity":1,"message":"735","line":135,"column":50,"nodeType":"733","messageId":"734","endLine":135,"endColumn":52},{"ruleId":"727","severity":1,"message":"728","line":145,"column":54,"nodeType":"729","messageId":"730","endLine":145,"endColumn":56},{"ruleId":"737","severity":1,"message":"738","line":195,"column":29,"nodeType":"739","endLine":195,"endColumn":117},{"ruleId":"737","severity":1,"message":"738","line":206,"column":25,"nodeType":"739","endLine":208,"endColumn":29},{"ruleId":"756","severity":1,"message":"757","line":240,"column":79,"nodeType":"739","endLine":240,"endColumn":111},{"ruleId":"767","severity":1,"message":"768","line":249,"column":41,"nodeType":"769","endLine":249,"endColumn":52},{"ruleId":"731","severity":1,"message":"735","line":250,"column":95,"nodeType":"733","messageId":"734","endLine":250,"endColumn":97},{"ruleId":"756","severity":1,"message":"757","line":250,"column":101,"nodeType":"739","endLine":250,"endColumn":234},{"ruleId":"737","severity":1,"message":"738","line":298,"column":45,"nodeType":"739","endLine":298,"endColumn":161},{"ruleId":"737","severity":1,"message":"738","line":305,"column":132,"nodeType":"739","endLine":305,"endColumn":194},{"ruleId":"700","severity":1,"message":"708","line":7,"column":10,"nodeType":"702","messageId":"703","endLine":7,"endColumn":24},{"ruleId":"700","severity":1,"message":"770","line":7,"column":26,"nodeType":"702","messageId":"703","endLine":7,"endColumn":31},{"ruleId":"700","severity":1,"message":"771","line":8,"column":8,"nodeType":"702","messageId":"703","endLine":8,"endColumn":15},{"ruleId":"700","severity":1,"message":"772","line":12,"column":12,"nodeType":"702","messageId":"703","endLine":12,"endColumn":28},{"ruleId":"700","severity":1,"message":"773","line":12,"column":30,"nodeType":"702","messageId":"703","endLine":12,"endColumn":49},{"ruleId":"700","severity":1,"message":"774","line":29,"column":12,"nodeType":"702","messageId":"703","endLine":29,"endColumn":27},{"ruleId":"700","severity":1,"message":"775","line":29,"column":28,"nodeType":"702","messageId":"703","endLine":29,"endColumn":46},{"ruleId":"700","severity":1,"message":"776","line":30,"column":11,"nodeType":"702","messageId":"703","endLine":30,"endColumn":19},{"ruleId":"711","severity":1,"message":"749","line":36,"column":15,"nodeType":"729","endLine":42,"endColumn":6},{"ruleId":"711","severity":1,"message":"777","line":42,"column":8,"nodeType":"713","endLine":42,"endColumn":10,"suggestions":"778"},{"ruleId":"711","severity":1,"message":"749","line":43,"column":15,"nodeType":"729","endLine":46,"endColumn":6},{"ruleId":"711","severity":1,"message":"779","line":46,"column":7,"nodeType":"713","endLine":46,"endColumn":23,"suggestions":"780"},{"ruleId":"711","severity":1,"message":"781","line":51,"column":8,"nodeType":"713","endLine":51,"endColumn":21,"suggestions":"782"},{"ruleId":"711","severity":1,"message":"749","line":52,"column":15,"nodeType":"729","endLine":56,"endColumn":6},{"ruleId":"727","severity":1,"message":"728","line":61,"column":37,"nodeType":"729","messageId":"730","endLine":61,"endColumn":39},{"ruleId":"727","severity":1,"message":"728","line":71,"column":36,"nodeType":"729","messageId":"730","endLine":71,"endColumn":38},{"ruleId":"731","severity":1,"message":"735","line":83,"column":50,"nodeType":"733","messageId":"734","endLine":83,"endColumn":52},{"ruleId":"737","severity":1,"message":"738","line":145,"column":37,"nodeType":"739","endLine":145,"endColumn":86},{"ruleId":"756","severity":1,"message":"757","line":145,"column":86,"nodeType":"739","endLine":145,"endColumn":118},{"ruleId":"737","severity":1,"message":"738","line":146,"column":37,"nodeType":"739","endLine":146,"endColumn":80},{"ruleId":"767","severity":1,"message":"768","line":169,"column":45,"nodeType":"769","endLine":169,"endColumn":56},{"ruleId":"731","severity":1,"message":"735","line":170,"column":99,"nodeType":"733","messageId":"734","endLine":170,"endColumn":101},{"ruleId":"756","severity":1,"message":"757","line":170,"column":105,"nodeType":"739","endLine":170,"endColumn":238},{"ruleId":"731","severity":1,"message":"732","line":172,"column":84,"nodeType":"733","messageId":"734","endLine":172,"endColumn":86},{"ruleId":"700","severity":1,"message":"704","line":3,"column":10,"nodeType":"702","messageId":"703","endLine":3,"endColumn":14},{"ruleId":"700","severity":1,"message":"705","line":4,"column":8,"nodeType":"702","messageId":"703","endLine":4,"endColumn":15},{"ruleId":"700","severity":1,"message":"783","line":6,"column":8,"nodeType":"702","messageId":"703","endLine":6,"endColumn":12},{"ruleId":"700","severity":1,"message":"784","line":6,"column":16,"nodeType":"702","messageId":"703","endLine":6,"endColumn":23},{"ruleId":"700","severity":1,"message":"785","line":14,"column":10,"nodeType":"702","messageId":"703","endLine":14,"endColumn":13},{"ruleId":"700","severity":1,"message":"786","line":15,"column":8,"nodeType":"702","messageId":"703","endLine":15,"endColumn":20},{"ruleId":"700","severity":1,"message":"787","line":67,"column":10,"nodeType":"702","messageId":"703","endLine":67,"endColumn":22},{"ruleId":"700","severity":1,"message":"788","line":67,"column":23,"nodeType":"702","messageId":"703","endLine":67,"endColumn":38},{"ruleId":"700","severity":1,"message":"789","line":70,"column":27,"nodeType":"702","messageId":"703","endLine":70,"endColumn":45},{"ruleId":"700","severity":1,"message":"790","line":72,"column":9,"nodeType":"702","messageId":"703","endLine":72,"endColumn":23},{"ruleId":"700","severity":1,"message":"791","line":73,"column":9,"nodeType":"702","messageId":"703","endLine":73,"endColumn":27},{"ruleId":"700","severity":1,"message":"792","line":74,"column":9,"nodeType":"702","messageId":"703","endLine":74,"endColumn":26},{"ruleId":"700","severity":1,"message":"793","line":76,"column":9,"nodeType":"702","messageId":"703","endLine":76,"endColumn":25},{"ruleId":"700","severity":1,"message":"794","line":84,"column":9,"nodeType":"702","messageId":"703","endLine":84,"endColumn":33},{"ruleId":"711","severity":1,"message":"749","line":100,"column":13,"nodeType":"729","endLine":102,"endColumn":4},{"ruleId":"711","severity":1,"message":"749","line":148,"column":13,"nodeType":"729","endLine":153,"endColumn":4},{"ruleId":"711","severity":1,"message":"795","line":155,"column":39,"nodeType":"713","endLine":155,"endColumn":58,"suggestions":"796"},{"ruleId":"700","severity":1,"message":"797","line":206,"column":9,"nodeType":"702","messageId":"703","endLine":206,"endColumn":30},{"ruleId":"767","severity":1,"message":"768","line":224,"column":19,"nodeType":"769","endLine":224,"endColumn":30},{"ruleId":"756","severity":1,"message":"757","line":224,"column":99,"nodeType":"739","endLine":224,"endColumn":128},{"ruleId":"731","severity":1,"message":"735","line":225,"column":145,"nodeType":"733","messageId":"734","endLine":225,"endColumn":147},{"ruleId":"756","severity":1,"message":"757","line":237,"column":9,"nodeType":"739","endLine":237,"endColumn":36},{"ruleId":"700","severity":1,"message":"798","line":247,"column":9,"nodeType":"702","messageId":"703","endLine":247,"endColumn":30},{"ruleId":"767","severity":1,"message":"768","line":266,"column":19,"nodeType":"769","endLine":266,"endColumn":30},{"ruleId":"756","severity":1,"message":"757","line":266,"column":99,"nodeType":"739","endLine":266,"endColumn":128},{"ruleId":"731","severity":1,"message":"735","line":267,"column":145,"nodeType":"733","messageId":"734","endLine":267,"endColumn":147},{"ruleId":"756","severity":1,"message":"757","line":279,"column":9,"nodeType":"739","endLine":279,"endColumn":36},{"ruleId":"756","severity":1,"message":"757","line":296,"column":60,"nodeType":"739","endLine":296,"endColumn":91},{"ruleId":"756","severity":1,"message":"757","line":348,"column":15,"nodeType":"739","endLine":348,"endColumn":62},{"ruleId":"700","severity":1,"message":"799","line":1,"column":27,"nodeType":"702","messageId":"703","endLine":1,"endColumn":36},{"ruleId":"731","severity":1,"message":"732","line":16,"column":22,"nodeType":"733","messageId":"734","endLine":16,"endColumn":24},{"ruleId":"731","severity":1,"message":"732","line":22,"column":14,"nodeType":"733","messageId":"734","endLine":22,"endColumn":16},{"ruleId":"700","severity":1,"message":"800","line":29,"column":9,"nodeType":"702","messageId":"703","endLine":29,"endColumn":17},{"ruleId":"737","severity":1,"message":"738","line":37,"column":7,"nodeType":"739","endLine":37,"endColumn":32},{"ruleId":"756","severity":1,"message":"757","line":37,"column":32,"nodeType":"739","endLine":37,"endColumn":50},{"ruleId":"756","severity":1,"message":"757","line":42,"column":13,"nodeType":"739","endLine":42,"endColumn":34},{"ruleId":"700","severity":1,"message":"704","line":2,"column":10,"nodeType":"702","messageId":"703","endLine":2,"endColumn":14},{"ruleId":"700","severity":1,"message":"801","line":8,"column":8,"nodeType":"702","messageId":"703","endLine":8,"endColumn":16},{"ruleId":"700","severity":1,"message":"802","line":24,"column":10,"nodeType":"702","messageId":"703","endLine":24,"endColumn":13},{"ruleId":"700","severity":1,"message":"803","line":24,"column":15,"nodeType":"702","messageId":"703","endLine":24,"endColumn":21},{"ruleId":"700","severity":1,"message":"804","line":30,"column":10,"nodeType":"702","messageId":"703","endLine":30,"endColumn":17},{"ruleId":"700","severity":1,"message":"805","line":31,"column":20,"nodeType":"702","messageId":"703","endLine":31,"endColumn":31},{"ruleId":"731","severity":1,"message":"732","line":52,"column":22,"nodeType":"733","messageId":"734","endLine":52,"endColumn":24},{"ruleId":"731","severity":1,"message":"732","line":56,"column":25,"nodeType":"733","messageId":"734","endLine":56,"endColumn":27},{"ruleId":"731","severity":1,"message":"732","line":80,"column":14,"nodeType":"733","messageId":"734","endLine":80,"endColumn":16},{"ruleId":"700","severity":1,"message":"806","line":98,"column":9,"nodeType":"702","messageId":"703","endLine":98,"endColumn":16},{"ruleId":"700","severity":1,"message":"807","line":103,"column":9,"nodeType":"702","messageId":"703","endLine":103,"endColumn":19},{"ruleId":"731","severity":1,"message":"732","line":106,"column":14,"nodeType":"733","messageId":"734","endLine":106,"endColumn":16},{"ruleId":"737","severity":1,"message":"738","line":117,"column":7,"nodeType":"739","endLine":117,"endColumn":32},{"ruleId":"756","severity":1,"message":"757","line":117,"column":32,"nodeType":"739","endLine":117,"endColumn":50},{"ruleId":"756","severity":1,"message":"757","line":122,"column":13,"nodeType":"739","endLine":122,"endColumn":34},{"ruleId":"737","severity":1,"message":"738","line":149,"column":21,"nodeType":"739","endLine":149,"endColumn":71},{"ruleId":"731","severity":1,"message":"732","line":22,"column":29,"nodeType":"733","messageId":"734","endLine":22,"endColumn":31},{"ruleId":"731","severity":1,"message":"732","line":32,"column":18,"nodeType":"733","messageId":"734","endLine":32,"endColumn":20},{"ruleId":"737","severity":1,"message":"738","line":47,"column":9,"nodeType":"739","endLine":47,"endColumn":34},{"ruleId":"756","severity":1,"message":"757","line":47,"column":34,"nodeType":"739","endLine":47,"endColumn":52},{"ruleId":"756","severity":1,"message":"757","line":52,"column":21,"nodeType":"739","endLine":52,"endColumn":42},{"ruleId":"737","severity":1,"message":"738","line":82,"column":25,"nodeType":"739","endLine":82,"endColumn":80},{"ruleId":"808","severity":1,"message":"809","line":7,"column":14,"nodeType":"810","messageId":"811","endLine":7,"endColumn":15,"suggestions":"812"},{"ruleId":"808","severity":1,"message":"809","line":7,"column":30,"nodeType":"810","messageId":"811","endLine":7,"endColumn":31,"suggestions":"813"},{"ruleId":"700","severity":1,"message":"814","line":1,"column":17,"nodeType":"702","messageId":"703","endLine":1,"endColumn":25},{"ruleId":"700","severity":1,"message":"799","line":1,"column":27,"nodeType":"702","messageId":"703","endLine":1,"endColumn":36},{"ruleId":"700","severity":1,"message":"704","line":2,"column":10,"nodeType":"702","messageId":"703","endLine":2,"endColumn":14},{"ruleId":"700","severity":1,"message":"815","line":6,"column":72,"nodeType":"702","messageId":"703","endLine":6,"endColumn":83},{"ruleId":"737","severity":1,"message":"738","line":11,"column":11,"nodeType":"739","endLine":11,"endColumn":67},{"ruleId":"737","severity":1,"message":"738","line":27,"column":107,"nodeType":"739","endLine":27,"endColumn":132},{"ruleId":"700","severity":1,"message":"814","line":1,"column":17,"nodeType":"702","messageId":"703","endLine":1,"endColumn":25},{"ruleId":"700","severity":1,"message":"799","line":1,"column":27,"nodeType":"702","messageId":"703","endLine":1,"endColumn":36},{"ruleId":"700","severity":1,"message":"814","line":1,"column":17,"nodeType":"702","messageId":"703","endLine":1,"endColumn":25},{"ruleId":"700","severity":1,"message":"799","line":1,"column":27,"nodeType":"702","messageId":"703","endLine":1,"endColumn":36},{"ruleId":"756","severity":1,"message":"757","line":8,"column":9,"nodeType":"739","endLine":8,"endColumn":50},{"ruleId":"696","replacedBy":"816"},{"ruleId":"698","replacedBy":"817"},{"ruleId":"700","severity":1,"message":"799","line":1,"column":27,"nodeType":"702","messageId":"703","endLine":1,"endColumn":36},{"ruleId":"700","severity":1,"message":"704","line":2,"column":10,"nodeType":"702","messageId":"703","endLine":2,"endColumn":14},{"ruleId":"700","severity":1,"message":"818","line":4,"column":8,"nodeType":"702","messageId":"703","endLine":4,"endColumn":16},{"ruleId":"700","severity":1,"message":"742","line":8,"column":10,"nodeType":"702","messageId":"703","endLine":8,"endColumn":20},{"ruleId":"700","severity":1,"message":"743","line":8,"column":22,"nodeType":"702","messageId":"703","endLine":8,"endColumn":35},{"ruleId":"700","severity":1,"message":"819","line":9,"column":10,"nodeType":"702","messageId":"703","endLine":9,"endColumn":21},{"ruleId":"700","severity":1,"message":"820","line":9,"column":23,"nodeType":"702","messageId":"703","endLine":9,"endColumn":37},{"ruleId":"731","severity":1,"message":"732","line":14,"column":47,"nodeType":"733","messageId":"734","endLine":14,"endColumn":49},{"ruleId":"700","severity":1,"message":"821","line":6,"column":10,"nodeType":"702","messageId":"703","endLine":6,"endColumn":20},{"ruleId":"700","severity":1,"message":"822","line":6,"column":22,"nodeType":"702","messageId":"703","endLine":6,"endColumn":35},{"ruleId":"731","severity":1,"message":"732","line":10,"column":19,"nodeType":"733","messageId":"734","endLine":10,"endColumn":21},{"ruleId":"731","severity":1,"message":"732","line":12,"column":26,"nodeType":"733","messageId":"734","endLine":12,"endColumn":28},{"ruleId":"731","severity":1,"message":"732","line":14,"column":26,"nodeType":"733","messageId":"734","endLine":14,"endColumn":28},{"ruleId":"731","severity":1,"message":"732","line":16,"column":26,"nodeType":"733","messageId":"734","endLine":16,"endColumn":28},{"ruleId":"700","severity":1,"message":"814","line":1,"column":17,"nodeType":"702","messageId":"703","endLine":1,"endColumn":25},{"ruleId":"700","severity":1,"message":"799","line":1,"column":27,"nodeType":"702","messageId":"703","endLine":1,"endColumn":36},{"ruleId":"700","severity":1,"message":"823","line":2,"column":8,"nodeType":"702","messageId":"703","endLine":2,"endColumn":20},{"ruleId":"700","severity":1,"message":"814","line":1,"column":17,"nodeType":"702","messageId":"703","endLine":1,"endColumn":25},{"ruleId":"700","severity":1,"message":"799","line":1,"column":27,"nodeType":"702","messageId":"703","endLine":1,"endColumn":36},{"ruleId":"700","severity":1,"message":"824","line":3,"column":8,"nodeType":"702","messageId":"703","endLine":3,"endColumn":21},{"ruleId":"700","severity":1,"message":"814","line":1,"column":17,"nodeType":"702","messageId":"703","endLine":1,"endColumn":25},{"ruleId":"700","severity":1,"message":"799","line":1,"column":27,"nodeType":"702","messageId":"703","endLine":1,"endColumn":36},{"ruleId":"731","severity":1,"message":"732","line":8,"column":36,"nodeType":"733","messageId":"734","endLine":8,"endColumn":38},{"ruleId":"731","severity":1,"message":"732","line":9,"column":21,"nodeType":"733","messageId":"734","endLine":9,"endColumn":23},{"ruleId":"737","severity":1,"message":"738","line":13,"column":9,"nodeType":"739","endLine":13,"endColumn":35},{"ruleId":"756","severity":1,"message":"757","line":13,"column":35,"nodeType":"739","endLine":13,"endColumn":67},{"ruleId":"700","severity":1,"message":"704","line":2,"column":10,"nodeType":"702","messageId":"703","endLine":2,"endColumn":14},{"ruleId":"700","severity":1,"message":"819","line":7,"column":10,"nodeType":"702","messageId":"703","endLine":7,"endColumn":21},{"ruleId":"700","severity":1,"message":"820","line":7,"column":23,"nodeType":"702","messageId":"703","endLine":7,"endColumn":37},{"ruleId":"711","severity":1,"message":"825","line":20,"column":6,"nodeType":"713","endLine":20,"endColumn":33,"suggestions":"826"},{"ruleId":"731","severity":1,"message":"732","line":40,"column":46,"nodeType":"733","messageId":"734","endLine":40,"endColumn":48},{"ruleId":"700","severity":1,"message":"799","line":1,"column":27,"nodeType":"702","messageId":"703","endLine":1,"endColumn":36},{"ruleId":"700","severity":1,"message":"827","line":2,"column":8,"nodeType":"702","messageId":"703","endLine":2,"endColumn":18},{"ruleId":"700","severity":1,"message":"828","line":9,"column":10,"nodeType":"702","messageId":"703","endLine":9,"endColumn":19},{"ruleId":"700","severity":1,"message":"829","line":9,"column":21,"nodeType":"702","messageId":"703","endLine":9,"endColumn":33},{"ruleId":"700","severity":1,"message":"830","line":1,"column":17,"nodeType":"702","messageId":"703","endLine":1,"endColumn":26},{"ruleId":"700","severity":1,"message":"831","line":9,"column":8,"nodeType":"702","messageId":"703","endLine":9,"endColumn":19},{"ruleId":"700","severity":1,"message":"832","line":10,"column":8,"nodeType":"702","messageId":"703","endLine":10,"endColumn":18},{"ruleId":"700","severity":1,"message":"833","line":13,"column":8,"nodeType":"702","messageId":"703","endLine":13,"endColumn":17},{"ruleId":"700","severity":1,"message":"834","line":28,"column":22,"nodeType":"702","messageId":"703","endLine":28,"endColumn":35},{"ruleId":"731","severity":1,"message":"732","line":36,"column":63,"nodeType":"733","messageId":"734","endLine":36,"endColumn":65},{"ruleId":"731","severity":1,"message":"732","line":37,"column":62,"nodeType":"733","messageId":"734","endLine":37,"endColumn":64},{"ruleId":"711","severity":1,"message":"835","line":40,"column":6,"nodeType":"713","endLine":40,"endColumn":8,"suggestions":"836"},{"ruleId":"711","severity":1,"message":"837","line":62,"column":6,"nodeType":"713","endLine":62,"endColumn":8,"suggestions":"838"},{"ruleId":"700","severity":1,"message":"839","line":84,"column":9,"nodeType":"702","messageId":"703","endLine":84,"endColumn":19},{"ruleId":"737","severity":1,"message":"738","line":94,"column":30,"nodeType":"739","endLine":94,"endColumn":99},{"ruleId":"756","severity":1,"message":"757","line":94,"column":99,"nodeType":"739","endLine":94,"endColumn":126},{"ruleId":"737","severity":1,"message":"738","line":95,"column":29,"nodeType":"739","endLine":95,"endColumn":98},{"ruleId":"756","severity":1,"message":"757","line":95,"column":98,"nodeType":"739","endLine":95,"endColumn":124},{"ruleId":"756","severity":1,"message":"757","line":96,"column":71,"nodeType":"739","endLine":96,"endColumn":89},{"ruleId":"756","severity":1,"message":"757","line":97,"column":71,"nodeType":"739","endLine":97,"endColumn":94},{"ruleId":"737","severity":1,"message":"738","line":120,"column":15,"nodeType":"739","endLine":120,"endColumn":113},{"ruleId":"731","severity":1,"message":"732","line":133,"column":55,"nodeType":"733","messageId":"734","endLine":133,"endColumn":57},{"ruleId":"756","severity":1,"message":"757","line":133,"column":87,"nodeType":"739","endLine":133,"endColumn":109},{"ruleId":"731","severity":1,"message":"732","line":142,"column":37,"nodeType":"733","messageId":"734","endLine":142,"endColumn":39},{"ruleId":"756","severity":1,"message":"757","line":142,"column":83,"nodeType":"739","endLine":142,"endColumn":108},{"ruleId":"731","severity":1,"message":"732","line":143,"column":37,"nodeType":"733","messageId":"734","endLine":143,"endColumn":39},{"ruleId":"756","severity":1,"message":"757","line":143,"column":89,"nodeType":"739","endLine":143,"endColumn":115},{"ruleId":"737","severity":1,"message":"738","line":144,"column":16,"nodeType":"739","endLine":144,"endColumn":66},{"ruleId":"731","severity":1,"message":"732","line":144,"column":35,"nodeType":"733","messageId":"734","endLine":144,"endColumn":37},{"ruleId":"756","severity":1,"message":"757","line":144,"column":66,"nodeType":"739","endLine":144,"endColumn":86},{"ruleId":"737","severity":1,"message":"738","line":34,"column":22,"nodeType":"739","endLine":34,"endColumn":186},{"ruleId":"737","severity":1,"message":"738","line":35,"column":18,"nodeType":"739","endLine":35,"endColumn":42},{"ruleId":"727","severity":1,"message":"840","line":40,"column":64,"nodeType":"729","messageId":"841","endLine":40,"endColumn":66},{"ruleId":"737","severity":1,"message":"738","line":44,"column":29,"nodeType":"739","endLine":44,"endColumn":73},{"ruleId":"731","severity":1,"message":"732","line":46,"column":45,"nodeType":"733","messageId":"734","endLine":46,"endColumn":47},{"ruleId":"737","severity":1,"message":"738","line":53,"column":27,"nodeType":"739","endLine":53,"endColumn":52},{"ruleId":"700","severity":1,"message":"704","line":2,"column":10,"nodeType":"702","messageId":"703","endLine":2,"endColumn":14},{"ruleId":"700","severity":1,"message":"842","line":3,"column":8,"nodeType":"702","messageId":"703","endLine":3,"endColumn":19},{"ruleId":"700","severity":1,"message":"843","line":4,"column":27,"nodeType":"702","messageId":"703","endLine":4,"endColumn":40},{"ruleId":"700","severity":1,"message":"742","line":10,"column":10,"nodeType":"702","messageId":"703","endLine":10,"endColumn":20},{"ruleId":"700","severity":1,"message":"743","line":10,"column":22,"nodeType":"702","messageId":"703","endLine":10,"endColumn":35},{"ruleId":"700","severity":1,"message":"819","line":11,"column":10,"nodeType":"702","messageId":"703","endLine":11,"endColumn":21},{"ruleId":"700","severity":1,"message":"820","line":11,"column":23,"nodeType":"702","messageId":"703","endLine":11,"endColumn":37},{"ruleId":"700","severity":1,"message":"844","line":13,"column":10,"nodeType":"702","messageId":"703","endLine":13,"endColumn":15},{"ruleId":"700","severity":1,"message":"845","line":13,"column":16,"nodeType":"702","messageId":"703","endLine":13,"endColumn":24},{"ruleId":"727","severity":1,"message":"728","line":22,"column":29,"nodeType":"729","messageId":"730","endLine":22,"endColumn":31},{"ruleId":"731","severity":1,"message":"735","line":35,"column":44,"nodeType":"733","messageId":"734","endLine":35,"endColumn":46},{"ruleId":"731","severity":1,"message":"732","line":45,"column":12,"nodeType":"733","messageId":"734","endLine":45,"endColumn":14},{"ruleId":"731","severity":1,"message":"732","line":47,"column":17,"nodeType":"733","messageId":"734","endLine":47,"endColumn":19},{"ruleId":"700","severity":1,"message":"846","line":58,"column":19,"nodeType":"702","messageId":"703","endLine":58,"endColumn":22},{"ruleId":"731","severity":1,"message":"732","line":80,"column":43,"nodeType":"733","messageId":"734","endLine":80,"endColumn":45},{"ruleId":"767","severity":1,"message":"768","line":95,"column":33,"nodeType":"769","endLine":95,"endColumn":44},{"ruleId":"731","severity":1,"message":"735","line":97,"column":67,"nodeType":"733","messageId":"734","endLine":97,"endColumn":69},{"ruleId":"756","severity":1,"message":"757","line":97,"column":73,"nodeType":"739","endLine":97,"endColumn":197},{"ruleId":"737","severity":1,"message":"738","line":108,"column":27,"nodeType":"739","endLine":108,"endColumn":92},{"ruleId":"737","severity":1,"message":"738","line":111,"column":27,"nodeType":"739","endLine":111,"endColumn":99},{"ruleId":"731","severity":1,"message":"732","line":126,"column":66,"nodeType":"733","messageId":"734","endLine":126,"endColumn":68},{"ruleId":"737","severity":1,"message":"847","line":126,"column":131,"nodeType":"739","endLine":126,"endColumn":250},{"ruleId":"700","severity":1,"message":"848","line":5,"column":12,"nodeType":"702","messageId":"703","endLine":5,"endColumn":25},{"ruleId":"700","severity":1,"message":"849","line":5,"column":27,"nodeType":"702","messageId":"703","endLine":5,"endColumn":43},{"ruleId":"700","severity":1,"message":"850","line":2,"column":20,"nodeType":"702","messageId":"703","endLine":2,"endColumn":28},{"ruleId":"731","severity":1,"message":"732","line":10,"column":10,"nodeType":"733","messageId":"734","endLine":10,"endColumn":12},{"ruleId":"731","severity":1,"message":"732","line":10,"column":38,"nodeType":"733","messageId":"734","endLine":10,"endColumn":40},{"ruleId":"731","severity":1,"message":"732","line":10,"column":66,"nodeType":"733","messageId":"734","endLine":10,"endColumn":68},{"ruleId":"731","severity":1,"message":"732","line":10,"column":91,"nodeType":"733","messageId":"734","endLine":10,"endColumn":93},{"ruleId":"731","severity":1,"message":"732","line":18,"column":29,"nodeType":"733","messageId":"734","endLine":18,"endColumn":31},{"ruleId":"731","severity":1,"message":"732","line":23,"column":11,"nodeType":"733","messageId":"734","endLine":23,"endColumn":13},{"ruleId":"731","severity":1,"message":"732","line":23,"column":39,"nodeType":"733","messageId":"734","endLine":23,"endColumn":41},{"ruleId":"731","severity":1,"message":"732","line":23,"column":67,"nodeType":"733","messageId":"734","endLine":23,"endColumn":69},{"ruleId":"731","severity":1,"message":"732","line":23,"column":92,"nodeType":"733","messageId":"734","endLine":23,"endColumn":94},{"ruleId":"700","severity":1,"message":"851","line":2,"column":11,"nodeType":"702","messageId":"703","endLine":2,"endColumn":19},{"ruleId":"700","severity":1,"message":"852","line":106,"column":12,"nodeType":"702","messageId":"703","endLine":106,"endColumn":26},{"ruleId":"737","severity":1,"message":"847","line":147,"column":37,"nodeType":"739","endLine":147,"endColumn":122},{"ruleId":"737","severity":1,"message":"847","line":148,"column":37,"nodeType":"739","endLine":148,"endColumn":142},{"ruleId":"737","severity":1,"message":"738","line":168,"column":49,"nodeType":"739","endLine":168,"endColumn":160},{"ruleId":"737","severity":1,"message":"738","line":169,"column":49,"nodeType":"739","endLine":169,"endColumn":249},{"ruleId":"737","severity":1,"message":"738","line":174,"column":57,"nodeType":"739","endLine":174,"endColumn":132},{"ruleId":"737","severity":1,"message":"738","line":175,"column":57,"nodeType":"739","endLine":175,"endColumn":164},{"ruleId":"737","severity":1,"message":"738","line":184,"column":33,"nodeType":"739","endLine":184,"endColumn":106},{"ruleId":"700","severity":1,"message":"814","line":1,"column":17,"nodeType":"702","messageId":"703","endLine":1,"endColumn":25},{"ruleId":"700","severity":1,"message":"799","line":1,"column":27,"nodeType":"702","messageId":"703","endLine":1,"endColumn":36},{"ruleId":"700","severity":1,"message":"853","line":2,"column":10,"nodeType":"702","messageId":"703","endLine":2,"endColumn":25},{"ruleId":"700","severity":1,"message":"843","line":2,"column":27,"nodeType":"702","messageId":"703","endLine":2,"endColumn":40},{"ruleId":"700","severity":1,"message":"704","line":3,"column":10,"nodeType":"702","messageId":"703","endLine":3,"endColumn":14},{"ruleId":"700","severity":1,"message":"770","line":5,"column":26,"nodeType":"702","messageId":"703","endLine":5,"endColumn":31},{"ruleId":"731","severity":1,"message":"732","line":45,"column":103,"nodeType":"733","messageId":"734","endLine":45,"endColumn":105},{"ruleId":"700","severity":1,"message":"799","line":1,"column":27,"nodeType":"702","messageId":"703","endLine":1,"endColumn":36},{"ruleId":"700","severity":1,"message":"704","line":2,"column":10,"nodeType":"702","messageId":"703","endLine":2,"endColumn":14},{"ruleId":"700","severity":1,"message":"742","line":6,"column":10,"nodeType":"702","messageId":"703","endLine":6,"endColumn":20},{"ruleId":"700","severity":1,"message":"743","line":6,"column":22,"nodeType":"702","messageId":"703","endLine":6,"endColumn":35},{"ruleId":"700","severity":1,"message":"819","line":7,"column":10,"nodeType":"702","messageId":"703","endLine":7,"endColumn":21},{"ruleId":"700","severity":1,"message":"820","line":7,"column":23,"nodeType":"702","messageId":"703","endLine":7,"endColumn":37},{"ruleId":"737","severity":1,"message":"738","line":12,"column":7,"nodeType":"739","endLine":12,"endColumn":57},{"ruleId":"731","severity":1,"message":"732","line":16,"column":56,"nodeType":"733","messageId":"734","endLine":16,"endColumn":58},{"ruleId":"737","severity":1,"message":"738","line":26,"column":11,"nodeType":"739","endLine":26,"endColumn":43},{"ruleId":"756","severity":1,"message":"757","line":26,"column":43,"nodeType":"739","endLine":26,"endColumn":74},{"ruleId":"737","severity":1,"message":"738","line":29,"column":11,"nodeType":"739","endLine":29,"endColumn":86},{"ruleId":"737","severity":1,"message":"738","line":32,"column":11,"nodeType":"739","endLine":32,"endColumn":93},{"ruleId":"700","severity":1,"message":"854","line":1,"column":10,"nodeType":"702","messageId":"703","endLine":1,"endColumn":16},{"ruleId":"700","severity":1,"message":"855","line":1,"column":26,"nodeType":"702","messageId":"703","endLine":1,"endColumn":31},{"ruleId":"700","severity":1,"message":"856","line":1,"column":33,"nodeType":"702","messageId":"703","endLine":1,"endColumn":38},{"ruleId":"700","severity":1,"message":"708","line":2,"column":10,"nodeType":"702","messageId":"703","endLine":2,"endColumn":24},{"ruleId":"700","severity":1,"message":"770","line":2,"column":26,"nodeType":"702","messageId":"703","endLine":2,"endColumn":31},{"ruleId":"700","severity":1,"message":"854","line":1,"column":10,"nodeType":"702","messageId":"703","endLine":1,"endColumn":16},{"ruleId":"700","severity":1,"message":"856","line":1,"column":33,"nodeType":"702","messageId":"703","endLine":1,"endColumn":38},{"ruleId":"700","severity":1,"message":"708","line":2,"column":10,"nodeType":"702","messageId":"703","endLine":2,"endColumn":24},{"ruleId":"700","severity":1,"message":"854","line":1,"column":10,"nodeType":"702","messageId":"703","endLine":1,"endColumn":16},{"ruleId":"700","severity":1,"message":"856","line":1,"column":33,"nodeType":"702","messageId":"703","endLine":1,"endColumn":38},{"ruleId":"700","severity":1,"message":"708","line":2,"column":10,"nodeType":"702","messageId":"703","endLine":2,"endColumn":24},{"ruleId":"700","severity":1,"message":"857","line":21,"column":3,"nodeType":"702","messageId":"703","endLine":21,"endColumn":12},{"ruleId":"700","severity":1,"message":"858","line":66,"column":3,"nodeType":"702","messageId":"703","endLine":66,"endColumn":26},{"ruleId":"731","severity":1,"message":"735","line":704,"column":22,"nodeType":"733","messageId":"734","endLine":704,"endColumn":24},{"ruleId":"731","severity":1,"message":"735","line":716,"column":22,"nodeType":"733","messageId":"734","endLine":716,"endColumn":24},{"ruleId":"731","severity":1,"message":"735","line":731,"column":22,"nodeType":"733","messageId":"734","endLine":731,"endColumn":24},{"ruleId":"731","severity":1,"message":"735","line":746,"column":22,"nodeType":"733","messageId":"734","endLine":746,"endColumn":24},{"ruleId":"731","severity":1,"message":"735","line":843,"column":22,"nodeType":"733","messageId":"734","endLine":843,"endColumn":24},{"ruleId":"731","severity":1,"message":"735","line":857,"column":22,"nodeType":"733","messageId":"734","endLine":857,"endColumn":24},{"ruleId":"700","severity":1,"message":"850","line":2,"column":20,"nodeType":"702","messageId":"703","endLine":2,"endColumn":28},{"ruleId":"731","severity":1,"message":"732","line":11,"column":10,"nodeType":"733","messageId":"734","endLine":11,"endColumn":12},{"ruleId":"731","severity":1,"message":"732","line":11,"column":38,"nodeType":"733","messageId":"734","endLine":11,"endColumn":40},{"ruleId":"731","severity":1,"message":"732","line":11,"column":66,"nodeType":"733","messageId":"734","endLine":11,"endColumn":68},{"ruleId":"731","severity":1,"message":"732","line":11,"column":91,"nodeType":"733","messageId":"734","endLine":11,"endColumn":93},{"ruleId":"731","severity":1,"message":"732","line":19,"column":29,"nodeType":"733","messageId":"734","endLine":19,"endColumn":31},{"ruleId":"700","severity":1,"message":"706","line":2,"column":8,"nodeType":"702","messageId":"703","endLine":2,"endColumn":17},{"ruleId":"700","severity":1,"message":"859","line":5,"column":10,"nodeType":"702","messageId":"703","endLine":5,"endColumn":23},{"ruleId":"700","severity":1,"message":"860","line":8,"column":8,"nodeType":"702","messageId":"703","endLine":8,"endColumn":16},{"ruleId":"700","severity":1,"message":"740","line":9,"column":8,"nodeType":"702","messageId":"703","endLine":9,"endColumn":12},{"ruleId":"700","severity":1,"message":"741","line":10,"column":8,"nodeType":"702","messageId":"703","endLine":10,"endColumn":15},{"ruleId":"700","severity":1,"message":"861","line":13,"column":8,"nodeType":"702","messageId":"703","endLine":13,"endColumn":24},{"ruleId":"700","severity":1,"message":"862","line":15,"column":8,"nodeType":"702","messageId":"703","endLine":15,"endColumn":16},{"ruleId":"700","severity":1,"message":"707","line":17,"column":10,"nodeType":"702","messageId":"703","endLine":17,"endColumn":15},{"ruleId":"700","severity":1,"message":"863","line":18,"column":8,"nodeType":"702","messageId":"703","endLine":18,"endColumn":14},{"ruleId":"700","severity":1,"message":"864","line":23,"column":3,"nodeType":"702","messageId":"703","endLine":23,"endColumn":16},{"ruleId":"700","severity":1,"message":"865","line":24,"column":3,"nodeType":"702","messageId":"703","endLine":24,"endColumn":20},{"ruleId":"700","severity":1,"message":"866","line":31,"column":9,"nodeType":"702","messageId":"703","endLine":31,"endColumn":31},{"ruleId":"700","severity":1,"message":"867","line":36,"column":26,"nodeType":"702","messageId":"703","endLine":36,"endColumn":43},{"ruleId":"700","severity":1,"message":"819","line":39,"column":10,"nodeType":"702","messageId":"703","endLine":39,"endColumn":21},{"ruleId":"700","severity":1,"message":"820","line":39,"column":23,"nodeType":"702","messageId":"703","endLine":39,"endColumn":37},{"ruleId":"700","severity":1,"message":"868","line":42,"column":28,"nodeType":"702","messageId":"703","endLine":42,"endColumn":47},{"ruleId":"700","severity":1,"message":"869","line":46,"column":24,"nodeType":"702","messageId":"703","endLine":46,"endColumn":39},{"ruleId":"700","severity":1,"message":"870","line":47,"column":24,"nodeType":"702","messageId":"703","endLine":47,"endColumn":39},{"ruleId":"700","severity":1,"message":"871","line":48,"column":21,"nodeType":"702","messageId":"703","endLine":48,"endColumn":33},{"ruleId":"700","severity":1,"message":"872","line":49,"column":26,"nodeType":"702","messageId":"703","endLine":49,"endColumn":43},{"ruleId":"700","severity":1,"message":"873","line":50,"column":10,"nodeType":"702","messageId":"703","endLine":50,"endColumn":27},{"ruleId":"700","severity":1,"message":"874","line":67,"column":18,"nodeType":"702","messageId":"703","endLine":67,"endColumn":27},{"ruleId":"711","severity":1,"message":"749","line":69,"column":13,"nodeType":"729","endLine":78,"endColumn":4},{"ruleId":"875","severity":1,"message":"876","line":72,"column":7,"nodeType":"702","messageId":"877","endLine":72,"endColumn":9},{"ruleId":"711","severity":1,"message":"878","line":72,"column":12,"nodeType":"879","endLine":72,"endColumn":30},{"ruleId":"731","severity":1,"message":"732","line":99,"column":26,"nodeType":"733","messageId":"734","endLine":99,"endColumn":28},{"ruleId":"731","severity":1,"message":"732","line":103,"column":25,"nodeType":"733","messageId":"734","endLine":103,"endColumn":27},{"ruleId":"731","severity":1,"message":"732","line":107,"column":22,"nodeType":"733","messageId":"734","endLine":107,"endColumn":24},{"ruleId":"731","severity":1,"message":"735","line":112,"column":21,"nodeType":"733","messageId":"734","endLine":112,"endColumn":23},{"ruleId":"731","severity":1,"message":"735","line":192,"column":21,"nodeType":"733","messageId":"734","endLine":192,"endColumn":23},{"ruleId":"756","severity":1,"message":"757","line":193,"column":15,"nodeType":"739","endLine":198,"endColumn":17},{"ruleId":"700","severity":1,"message":"880","line":1,"column":38,"nodeType":"702","messageId":"703","endLine":1,"endColumn":49},{"ruleId":"700","severity":1,"message":"704","line":2,"column":10,"nodeType":"702","messageId":"703","endLine":2,"endColumn":14},{"ruleId":"700","severity":1,"message":"881","line":3,"column":10,"nodeType":"702","messageId":"703","endLine":3,"endColumn":23},{"ruleId":"700","severity":1,"message":"706","line":8,"column":8,"nodeType":"702","messageId":"703","endLine":8,"endColumn":17},{"ruleId":"700","severity":1,"message":"882","line":9,"column":8,"nodeType":"702","messageId":"703","endLine":9,"endColumn":14},{"ruleId":"700","severity":1,"message":"708","line":10,"column":10,"nodeType":"702","messageId":"703","endLine":10,"endColumn":24},{"ruleId":"700","severity":1,"message":"770","line":10,"column":26,"nodeType":"702","messageId":"703","endLine":10,"endColumn":31},{"ruleId":"700","severity":1,"message":"771","line":12,"column":8,"nodeType":"702","messageId":"703","endLine":12,"endColumn":15},{"ruleId":"700","severity":1,"message":"883","line":13,"column":9,"nodeType":"702","messageId":"703","endLine":13,"endColumn":27},{"ruleId":"700","severity":1,"message":"884","line":13,"column":29,"nodeType":"702","messageId":"703","endLine":13,"endColumn":42},{"ruleId":"700","severity":1,"message":"885","line":13,"column":44,"nodeType":"702","messageId":"703","endLine":13,"endColumn":57},{"ruleId":"700","severity":1,"message":"709","line":13,"column":59,"nodeType":"702","messageId":"703","endLine":13,"endColumn":78},{"ruleId":"700","severity":1,"message":"886","line":13,"column":80,"nodeType":"702","messageId":"703","endLine":13,"endColumn":103},{"ruleId":"700","severity":1,"message":"710","line":13,"column":105,"nodeType":"702","messageId":"703","endLine":13,"endColumn":127},{"ruleId":"700","severity":1,"message":"864","line":13,"column":129,"nodeType":"702","messageId":"703","endLine":13,"endColumn":142},{"ruleId":"700","severity":1,"message":"865","line":13,"column":144,"nodeType":"702","messageId":"703","endLine":13,"endColumn":161},{"ruleId":"700","severity":1,"message":"887","line":13,"column":163,"nodeType":"702","messageId":"703","endLine":13,"endColumn":182},{"ruleId":"700","severity":1,"message":"888","line":14,"column":8,"nodeType":"702","messageId":"703","endLine":14,"endColumn":14},{"ruleId":"700","severity":1,"message":"889","line":15,"column":10,"nodeType":"702","messageId":"703","endLine":15,"endColumn":25},{"ruleId":"700","severity":1,"message":"890","line":16,"column":8,"nodeType":"702","messageId":"703","endLine":16,"endColumn":17},{"ruleId":"700","severity":1,"message":"891","line":19,"column":7,"nodeType":"702","messageId":"703","endLine":19,"endColumn":13},{"ruleId":"700","severity":1,"message":"892","line":20,"column":10,"nodeType":"702","messageId":"703","endLine":20,"endColumn":18},{"ruleId":"700","severity":1,"message":"893","line":20,"column":20,"nodeType":"702","messageId":"703","endLine":20,"endColumn":32},{"ruleId":"700","severity":1,"message":"894","line":21,"column":10,"nodeType":"702","messageId":"703","endLine":21,"endColumn":25},{"ruleId":"700","severity":1,"message":"895","line":21,"column":27,"nodeType":"702","messageId":"703","endLine":21,"endColumn":45},{"ruleId":"700","severity":1,"message":"896","line":22,"column":30,"nodeType":"702","messageId":"703","endLine":22,"endColumn":51},{"ruleId":"700","severity":1,"message":"897","line":23,"column":10,"nodeType":"702","messageId":"703","endLine":23,"endColumn":22},{"ruleId":"700","severity":1,"message":"898","line":23,"column":24,"nodeType":"702","messageId":"703","endLine":23,"endColumn":39},{"ruleId":"700","severity":1,"message":"819","line":24,"column":10,"nodeType":"702","messageId":"703","endLine":24,"endColumn":21},{"ruleId":"700","severity":1,"message":"820","line":24,"column":23,"nodeType":"702","messageId":"703","endLine":24,"endColumn":37},{"ruleId":"700","severity":1,"message":"899","line":27,"column":10,"nodeType":"702","messageId":"703","endLine":27,"endColumn":24},{"ruleId":"700","severity":1,"message":"867","line":27,"column":26,"nodeType":"702","messageId":"703","endLine":27,"endColumn":43},{"ruleId":"700","severity":1,"message":"900","line":28,"column":10,"nodeType":"702","messageId":"703","endLine":28,"endColumn":26},{"ruleId":"700","severity":1,"message":"901","line":28,"column":28,"nodeType":"702","messageId":"703","endLine":28,"endColumn":47},{"ruleId":"700","severity":1,"message":"902","line":29,"column":25,"nodeType":"702","messageId":"703","endLine":29,"endColumn":41},{"ruleId":"700","severity":1,"message":"903","line":30,"column":10,"nodeType":"702","messageId":"703","endLine":30,"endColumn":23},{"ruleId":"700","severity":1,"message":"904","line":30,"column":25,"nodeType":"702","messageId":"703","endLine":30,"endColumn":41},{"ruleId":"700","severity":1,"message":"905","line":31,"column":10,"nodeType":"702","messageId":"703","endLine":31,"endColumn":23},{"ruleId":"700","severity":1,"message":"906","line":31,"column":25,"nodeType":"702","messageId":"703","endLine":31,"endColumn":41},{"ruleId":"700","severity":1,"message":"907","line":32,"column":10,"nodeType":"702","messageId":"703","endLine":32,"endColumn":22},{"ruleId":"700","severity":1,"message":"908","line":32,"column":24,"nodeType":"702","messageId":"703","endLine":32,"endColumn":39},{"ruleId":"700","severity":1,"message":"909","line":33,"column":10,"nodeType":"702","messageId":"703","endLine":33,"endColumn":25},{"ruleId":"700","severity":1,"message":"910","line":33,"column":27,"nodeType":"702","messageId":"703","endLine":33,"endColumn":45},{"ruleId":"700","severity":1,"message":"911","line":34,"column":10,"nodeType":"702","messageId":"703","endLine":34,"endColumn":19},{"ruleId":"700","severity":1,"message":"912","line":34,"column":21,"nodeType":"702","messageId":"703","endLine":34,"endColumn":33},{"ruleId":"700","severity":1,"message":"913","line":35,"column":10,"nodeType":"702","messageId":"703","endLine":35,"endColumn":21},{"ruleId":"700","severity":1,"message":"914","line":35,"column":23,"nodeType":"702","messageId":"703","endLine":35,"endColumn":37},{"ruleId":"700","severity":1,"message":"915","line":37,"column":9,"nodeType":"702","messageId":"703","endLine":37,"endColumn":17},{"ruleId":"700","severity":1,"message":"916","line":38,"column":9,"nodeType":"702","messageId":"703","endLine":38,"endColumn":17},{"ruleId":"700","severity":1,"message":"917","line":39,"column":9,"nodeType":"702","messageId":"703","endLine":39,"endColumn":29},{"ruleId":"700","severity":1,"message":"918","line":41,"column":9,"nodeType":"702","messageId":"703","endLine":41,"endColumn":21},{"ruleId":"700","severity":1,"message":"919","line":42,"column":9,"nodeType":"702","messageId":"703","endLine":42,"endColumn":21},{"ruleId":"700","severity":1,"message":"920","line":43,"column":9,"nodeType":"702","messageId":"703","endLine":43,"endColumn":20},{"ruleId":"700","severity":1,"message":"921","line":44,"column":9,"nodeType":"702","messageId":"703","endLine":44,"endColumn":20},{"ruleId":"700","severity":1,"message":"922","line":45,"column":9,"nodeType":"702","messageId":"703","endLine":45,"endColumn":34},{"ruleId":"700","severity":1,"message":"923","line":46,"column":10,"nodeType":"702","messageId":"703","endLine":46,"endColumn":21},{"ruleId":"700","severity":1,"message":"924","line":46,"column":23,"nodeType":"702","messageId":"703","endLine":46,"endColumn":37},{"ruleId":"700","severity":1,"message":"925","line":47,"column":10,"nodeType":"702","messageId":"703","endLine":47,"endColumn":19},{"ruleId":"700","severity":1,"message":"926","line":47,"column":20,"nodeType":"702","messageId":"703","endLine":47,"endColumn":32},{"ruleId":"700","severity":1,"message":"717","line":50,"column":10,"nodeType":"702","messageId":"703","endLine":50,"endColumn":15},{"ruleId":"700","severity":1,"message":"927","line":50,"column":17,"nodeType":"702","messageId":"703","endLine":50,"endColumn":32},{"ruleId":"700","severity":1,"message":"928","line":51,"column":10,"nodeType":"702","messageId":"703","endLine":51,"endColumn":18},{"ruleId":"700","severity":1,"message":"929","line":51,"column":20,"nodeType":"702","messageId":"703","endLine":51,"endColumn":31},{"ruleId":"700","severity":1,"message":"715","line":52,"column":10,"nodeType":"702","messageId":"703","endLine":52,"endColumn":17},{"ruleId":"700","severity":1,"message":"716","line":52,"column":19,"nodeType":"702","messageId":"703","endLine":52,"endColumn":29},{"ruleId":"700","severity":1,"message":"721","line":53,"column":10,"nodeType":"702","messageId":"703","endLine":53,"endColumn":20},{"ruleId":"700","severity":1,"message":"930","line":53,"column":22,"nodeType":"702","messageId":"703","endLine":53,"endColumn":35},{"ruleId":"700","severity":1,"message":"931","line":54,"column":10,"nodeType":"702","messageId":"703","endLine":54,"endColumn":23},{"ruleId":"700","severity":1,"message":"932","line":54,"column":25,"nodeType":"702","messageId":"703","endLine":54,"endColumn":41},{"ruleId":"700","severity":1,"message":"722","line":55,"column":10,"nodeType":"702","messageId":"703","endLine":55,"endColumn":22},{"ruleId":"700","severity":1,"message":"933","line":55,"column":24,"nodeType":"702","messageId":"703","endLine":55,"endColumn":39},{"ruleId":"700","severity":1,"message":"934","line":56,"column":10,"nodeType":"702","messageId":"703","endLine":56,"endColumn":17},{"ruleId":"700","severity":1,"message":"935","line":56,"column":19,"nodeType":"702","messageId":"703","endLine":56,"endColumn":29},{"ruleId":"700","severity":1,"message":"719","line":57,"column":10,"nodeType":"702","messageId":"703","endLine":57,"endColumn":13},{"ruleId":"700","severity":1,"message":"720","line":57,"column":15,"nodeType":"702","messageId":"703","endLine":57,"endColumn":21},{"ruleId":"700","severity":1,"message":"936","line":58,"column":10,"nodeType":"702","messageId":"703","endLine":58,"endColumn":18},{"ruleId":"700","severity":1,"message":"937","line":58,"column":20,"nodeType":"702","messageId":"703","endLine":58,"endColumn":31},{"ruleId":"700","severity":1,"message":"938","line":59,"column":10,"nodeType":"702","messageId":"703","endLine":59,"endColumn":21},{"ruleId":"700","severity":1,"message":"939","line":59,"column":23,"nodeType":"702","messageId":"703","endLine":59,"endColumn":37},{"ruleId":"700","severity":1,"message":"940","line":60,"column":10,"nodeType":"702","messageId":"703","endLine":60,"endColumn":20},{"ruleId":"700","severity":1,"message":"941","line":60,"column":22,"nodeType":"702","messageId":"703","endLine":60,"endColumn":35},{"ruleId":"700","severity":1,"message":"942","line":61,"column":10,"nodeType":"702","messageId":"703","endLine":61,"endColumn":22},{"ruleId":"700","severity":1,"message":"943","line":61,"column":24,"nodeType":"702","messageId":"703","endLine":61,"endColumn":39},{"ruleId":"700","severity":1,"message":"944","line":64,"column":7,"nodeType":"702","messageId":"703","endLine":64,"endColumn":18},{"ruleId":"700","severity":1,"message":"945","line":65,"column":10,"nodeType":"702","messageId":"703","endLine":65,"endColumn":22},{"ruleId":"700","severity":1,"message":"946","line":65,"column":24,"nodeType":"702","messageId":"703","endLine":65,"endColumn":39},{"ruleId":"700","severity":1,"message":"947","line":66,"column":10,"nodeType":"702","messageId":"703","endLine":66,"endColumn":23},{"ruleId":"700","severity":1,"message":"948","line":66,"column":25,"nodeType":"702","messageId":"703","endLine":66,"endColumn":41},{"ruleId":"700","severity":1,"message":"949","line":67,"column":10,"nodeType":"702","messageId":"703","endLine":67,"endColumn":21},{"ruleId":"700","severity":1,"message":"950","line":67,"column":23,"nodeType":"702","messageId":"703","endLine":67,"endColumn":37},{"ruleId":"700","severity":1,"message":"951","line":68,"column":10,"nodeType":"702","messageId":"703","endLine":68,"endColumn":18},{"ruleId":"700","severity":1,"message":"952","line":68,"column":20,"nodeType":"702","messageId":"703","endLine":68,"endColumn":31},{"ruleId":"700","severity":1,"message":"953","line":70,"column":23,"nodeType":"702","messageId":"703","endLine":70,"endColumn":37},{"ruleId":"700","severity":1,"message":"954","line":71,"column":10,"nodeType":"702","messageId":"703","endLine":71,"endColumn":25},{"ruleId":"700","severity":1,"message":"955","line":71,"column":27,"nodeType":"702","messageId":"703","endLine":71,"endColumn":45},{"ruleId":"700","severity":1,"message":"956","line":73,"column":9,"nodeType":"702","messageId":"703","endLine":73,"endColumn":24},{"ruleId":"711","severity":1,"message":"957","line":77,"column":6,"nodeType":"713","endLine":77,"endColumn":8,"suggestions":"958"},"no-native-reassign",["959"],"no-negated-in-lhs",["960"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Sidebar' is defined but never used.","'validator' is defined but never used.","'Route' is defined but never used.","'ToastContainer' is defined but never used.","'ERROR_INVALID_EMAIL' is defined but never used.","'LASTNAME_ERROR_MESSAGE' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setShowProgressBar'. Either include it or remove the dependency array.","ArrayExpression",["961"],"'surname' is assigned a value but never used.","'setSurname' is assigned a value but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'dob' is assigned a value but never used.","'setDob' is assigned a value but never used.","'emailError' is assigned a value but never used.","'surnameError' is assigned a value but never used.","'id' is assigned a value but never used.","'phoneRegExp' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getAllTeachers' and 'getTerm'. Either include them or remove the dependency array.",["962"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'index' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Logo' is defined but never used.","'LoginBg' is defined but never used.","'showLoader' is assigned a value but never used.","'setShowLoader' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'changeOption', 'getAllYears', and 'previousSelectedYear'. Either include them or remove the dependency array.",["963"],["959"],["960"],"'isPhoneNumberValid' is defined but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","React Hook useEffect has a missing dependency: 'getUserProfile'. Either include it or remove the dependency array.",["964"],"React Hook useEffect has an unnecessary dependency: 'localStorage'. Either exclude it or remove the dependency array. Outer scope values like 'localStorage' aren't valid dependencies because mutating them doesn't re-render the component.",["965"],"React Hook useEffect has a missing dependency: 'setPage'. Either include it or remove the dependency array.",["966"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'TableTwo' is defined but never used.","React Hook useEffect has missing dependencies: 'getGroup', 'id', 'setGroup', and 'subjectYearId'. Either include them or remove the dependency array.",["967"],"React Hook useEffect has missing dependencies: 'getAllTeachersPerGroup', 'getStudents', and 'id'. Either include them or remove the dependency array.",["968"],"React Hook useEffect has a missing dependency: 'group'. Either include it or remove the dependency array.",["969"],"React Hook useEffect has missing dependencies: 'getTeachers' and 'teachers'. Either include them or remove the dependency array.",["970"],"jsx-a11y/scope","The scope prop can only be used on <th> elements.","JSXAttribute","'toast' is defined but never used.","'ToastUI' is defined but never used.","'selectedStudents' is assigned a value but never used.","'setSelectedStudents' is assigned a value but never used.","'moveStudentData' is assigned a value but never used.","'setMoveStudentData' is assigned a value but never used.","'getForms' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getFormDetails', 'getStudentByForm', and 'id'. Either include them or remove the dependency array.",["971"],"React Hook useEffect has missing dependencies: 'getStudentByForm' and 'id'. Either include them or remove the dependency array.",["972"],"React Hook useEffect has a missing dependency: 'getAllForms'. Either include it or remove the dependency array.",["973"],"'Tabs' is defined but never used.","'TabPane' is defined but never used.","'set' is defined but never used.","'CustomLoader' is defined but never used.","'customLoader' is assigned a value but never used.","'setCustomLoader' is assigned a value but never used.","'setAvtarGenderMale' is assigned a value but never used.","'getUserProfile' is assigned a value but never used.","'setShowProgressBar' is assigned a value but never used.","'getStudentsStatus' is assigned a value but never used.","'getTeacherStatus' is assigned a value but never used.","'getStudentTopPerformance' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getLineChartData'. Either include it or remove the dependency array.",["974"],"'getPerformanceStudent' is assigned a value but never used.","'getPerformanceTeacher' is assigned a value but never used.","'useEffect' is defined but never used.","'response' is assigned a value but never used.","'OtpInput' is defined but never used.","'MFA' is assigned a value but never used.","'setMFA' is assigned a value but never used.","'needMFA' is assigned a value but never used.","'setUserData' is assigned a value but never used.","'Entered' is assigned a value but never used.","'reesendOTP' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["975","976"],["977","978"],"'useState' is defined but never used.","'backOverlay' is assigned a value but never used.",["959"],["960"],"'Checkbox' is defined but never used.","'showOverlay' is assigned a value but never used.","'setShowOverlay' is assigned a value but never used.","'loadingMsg' is assigned a value but never used.","'setLoadingMsg' is assigned a value but never used.","'IntlTelInput' is defined but never used.","'ContentLoader' is defined but never used.","React Hook useEffect has a missing dependency: 'props.placeholder'. Either include it or remove the dependency array. If 'setLabel' needs the current value of 'props.placeholder', you can also switch to useReducer instead of useState and read 'props.placeholder' in the reducer.",["979"],"'DatePicker' is defined but never used.","'startDate' is assigned a value but never used.","'setStartDate' is assigned a value but never used.","'Component' is defined but never used.","'StudentsImg' is defined but never used.","'TeacherImg' is defined but never used.","'SchoolImg' is defined but never used.","'setProfileImg' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["980"],"React Hook useEffect has missing dependencies: 'getUserProfile', 'history', 'location.pathname', and 'setUserProfile'. Either include them or remove the dependency array.",["981"],"'toggleMenu' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'TableOneRow' is defined but never used.","'useStoreState' is defined but never used.","'click' is assigned a value but never used.","'setClick' is assigned a value but never used.","'key' is assigned a value but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'selectedValue' is assigned a value but never used.","'setSelectedValue' is assigned a value but never used.","'setToken' is defined but never used.","'Redirect' is defined but never used.","'clickedOutside' is assigned a value but never used.","'useStoreActions' is defined but never used.","'Action' is defined but never used.","'thunk' is defined but never used.","'Thunk' is defined but never used.","'getGroups' is defined but never used.","'getClientTopPerformance' is defined but never used.","'apiDateFormat' is defined but never used.","'TableOne' is defined but never used.","'CustomDatepicker' is defined but never used.","'Textarea' is defined but never used.","'moment' is defined but never used.","'ERROR_ADDRESS' is defined but never used.","'ERROR_INVALID_DOB' is defined but never used.","'clientAssignedSubjects' is assigned a value but never used.","'setDeleteClientId' is assigned a value but never used.","'setCompanyNameError' is assigned a value but never used.","'setCountryError' is assigned a value but never used.","'setZipcodeerror' is assigned a value but never used.","'setCityError' is assigned a value but never used.","'setCompanyIdError' is assigned a value but never used.","'companyPhoneError' is assigned a value but never used.","'setAvatar' is assigned a value but never used.","no-const-assign","'id' is constant.","const","Assignments to the 'id' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'useCallback' is defined but never used.","'validateEmail' is defined but never used.","'Moment' is defined but never used.","'NAME_ERROR_MESSAGE' is defined but never used.","'INVALID_FNAME' is defined but never used.","'INVALID_LNAME' is defined but never used.","'FIRSTNAME_ERROR_MESSAGE' is defined but never used.","'ERROR_INVALID_PHONE' is defined but never used.","'lodash' is defined but never used.","'uploadClientCSV' is defined but never used.","'ResetIcon' is defined but never used.","'newRef' is assigned a value but never used.","'noRecord' is assigned a value but never used.","'showNoRecord' is assigned a value but never used.","'selectedClients' is assigned a value but never used.","'setSelectedClients' is assigned a value but never used.","'setShowFullPageLoader' is assigned a value but never used.","'showCsvPopup' is assigned a value but never used.","'setShowCsvPopup' is assigned a value but never used.","'deleteClientId' is assigned a value but never used.","'showCustomLoader' is assigned a value but never used.","'setShowCustomLoader' is assigned a value but never used.","'setDisableButton' is assigned a value but never used.","'showAddClient' is assigned a value but never used.","'setShowAddClient' is assigned a value but never used.","'searchClients' is assigned a value but never used.","'setSearchClients' is assigned a value but never used.","'selectedYear' is assigned a value but never used.","'setSelectedYear' is assigned a value but never used.","'selectedSubject' is assigned a value but never used.","'setSelectedSubject' is assigned a value but never used.","'yearsData' is assigned a value but never used.","'setYearsData' is assigned a value but never used.","'subjectData' is assigned a value but never used.","'setSubjectData' is assigned a value but never used.","'allYears' is assigned a value but never used.","'subjects' is assigned a value but never used.","'previousClientFilter' is assigned a value but never used.","'deleteClient' is assigned a value but never used.","'createClient' is assigned a value but never used.","'getAllYears' is assigned a value but never used.","'getSubjects' is assigned a value but never used.","'setPreviousFilterOfClient' is assigned a value but never used.","'showSubmenu' is assigned a value but never used.","'setShowSubmenu' is assigned a value but never used.","'nameError' is assigned a value but never used.","'setNameError' is assigned a value but never used.","'setEmailAddress' is assigned a value but never used.","'forename' is assigned a value but never used.","'setForename' is assigned a value but never used.","'setEmailError' is assigned a value but never used.","'forenameError' is assigned a value but never used.","'setForenameError' is assigned a value but never used.","'setSurnameError' is assigned a value but never used.","'address' is assigned a value but never used.","'setAddress' is assigned a value but never used.","'dobError' is assigned a value but never used.","'setDobError' is assigned a value but never used.","'phoneNumber' is assigned a value but never used.","'setPhoneNumber' is assigned a value but never used.","'phoneError' is assigned a value but never used.","'setPhoneError' is assigned a value but never used.","'addressError' is assigned a value but never used.","'setAddressError' is assigned a value but never used.","'dragCounter' is assigned a value but never used.","'dragFileList' is assigned a value but never used.","'setDragFileList' is assigned a value but never used.","'fileListError' is assigned a value but never used.","'setFileListError' is assigned a value but never used.","'currentFile' is assigned a value but never used.","'setCurrentFile' is assigned a value but never used.","'progress' is assigned a value but never used.","'setProgress' is assigned a value but never used.","'setConfirmText' is assigned a value but never used.","'clientsFullData' is assigned a value but never used.","'setClientsFullData' is assigned a value but never used.","'hiddenFileInput' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getClients'. Either include it or remove the dependency array.",["982"],"no-global-assign","no-unsafe-negation",{"desc":"983","fix":"984"},{"desc":"985","fix":"986"},{"desc":"987","fix":"988"},{"desc":"989","fix":"990"},{"desc":"991","fix":"992"},{"desc":"993","fix":"994"},{"desc":"995","fix":"996"},{"desc":"997","fix":"998"},{"desc":"999","fix":"1000"},{"desc":"1001","fix":"1002"},{"desc":"1003","fix":"1004"},{"desc":"1005","fix":"1006"},{"desc":"1007","fix":"1008"},{"desc":"1009","fix":"1010"},{"messageId":"1011","fix":"1012","desc":"1013"},{"messageId":"1014","fix":"1015","desc":"1016"},{"messageId":"1011","fix":"1017","desc":"1013"},{"messageId":"1014","fix":"1018","desc":"1016"},{"desc":"1019","fix":"1020"},{"desc":"1021","fix":"1022"},{"desc":"1023","fix":"1024"},{"desc":"1025","fix":"1026"},"Update the dependencies array to be: [setShowProgressBar]",{"range":"1027","text":"1028"},"Update the dependencies array to be: [getAllTeachers, getTerm]",{"range":"1029","text":"1030"},"Update the dependencies array to be: [changeOption, getAllYears, previousSelectedYear]",{"range":"1031","text":"1032"},"Update the dependencies array to be: [avtarGenderMale, getUserProfile]",{"range":"1033","text":"1034"},"Update the dependencies array to be: []",{"range":"1035","text":"1036"},"Update the dependencies array to be: [allAvtars, avtarGenderMale, setPage]",{"range":"1037","text":"1038"},"Update the dependencies array to be: [getGroup, id, setGroup, subjectYearId]",{"range":"1039","text":"1040"},"Update the dependencies array to be: [getAllTeachersPerGroup, getStudents, group, id]",{"range":"1041","text":"1042"},"Update the dependencies array to be: [group, students]",{"range":"1043","text":"1044"},"Update the dependencies array to be: [getTeachers, teachers]",{"range":"1045","text":"1046"},"Update the dependencies array to be: [getFormDetails, getStudentByForm, id]",{"range":"1047","text":"1048"},"Update the dependencies array to be: [getStudentByForm, id, searchStudents]",{"range":"1049","text":"1050"},"Update the dependencies array to be: [formDetails, getAllForms]",{"range":"1051","text":"1052"},"Update the dependencies array to be: [getLineChartData, weeklyPerformance]",{"range":"1053","text":"1054"},"removeEscape",{"range":"1055","text":"1056"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"1057","text":"1058"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"1059","text":"1056"},{"range":"1060","text":"1058"},"Update the dependencies array to be: [props.value, props.options, props.placeholder]",{"range":"1061","text":"1062"},"Update the dependencies array to be: [props]",{"range":"1063","text":"1064"},"Update the dependencies array to be: [getUserProfile, history, location.pathname, setUserProfile]",{"range":"1065","text":"1066"},"Update the dependencies array to be: [getClients]",{"range":"1067","text":"1068"},[1385,1387],"[setShowProgressBar]",[3306,3308],"[getAllTeachers, getTerm]",[2535,2537],"[changeOption, getAllYears, previousSelectedYear]",[4225,4242],"[avtarGenderMale, getUserProfile]",[4270,4284],"[]",[4909,4937],"[allAvtars, avtarGenderMale, setPage]",[2969,2971],"[getGroup, id, setGroup, subjectYearId]",[3252,3259],"[getAllTeachersPerGroup, getStudents, group, id]",[3949,3959],"[group, students]",[4156,4158],"[getTeachers, teachers]",[2387,2389],"[getFormDetails, getStudentByForm, id]",[2532,2548],"[getStudentByForm, id, searchStudents]",[2661,2674],"[formDetails, getAllForms]",[4949,4968],"[getLineChartData, weeklyPerformance]",[165,166],"",[165,165],"\\",[181,182],[181,181],[602,629],"[props.value, props.options, props.placeholder]",[1999,2001],"[props]",[2644,2646],"[getUserProfile, history, location.pathname, setUserProfile]",[4175,4177],"[getClients]"]